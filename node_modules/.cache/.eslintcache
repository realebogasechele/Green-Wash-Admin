[{"/Users/onceknownriley/Dev/Ionic-React/admin/src/index.tsx":"1","/Users/onceknownriley/Dev/Ionic-React/admin/src/reportWebVitals.ts":"2","/Users/onceknownriley/Dev/Ionic-React/admin/src/serviceWorkerRegistration.ts":"3","/Users/onceknownriley/Dev/Ionic-React/admin/src/App.tsx":"4","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Menu/Menu.tsx":"5","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Profile/Profile.tsx":"6","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Dashboard/Dashboard.tsx":"7","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignIn/SignIn.tsx":"8","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignUp/SignUp.tsx":"9","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Router.tsx":"10","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Calendar/Calendar.tsx":"11","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Card/Card.tsx":"12","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/InputControls/InputControls.tsx":"13","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/MultiForm/MultiForm.tsx":"14","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AgentForm.tsx":"15","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Add/Add.tsx":"16","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/ComplexForm.tsx":"17","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/PromotionForm.tsx":"18","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/PackageForm.tsx":"19","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Management/Management.tsx":"20","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/CardDetails/CardDetails.tsx":"21","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx":"22","/Users/onceknownriley/Dev/Ionic-React/admin/src/mixins/Connection.ts":"23","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Regex/Regex.tsx":"24"},{"size":796,"mtime":1630685610000,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1630685610000,"results":"27","hashOfConfig":"26"},{"size":5256,"mtime":1630685610000,"results":"28","hashOfConfig":"26"},{"size":1184,"mtime":1635271199416,"results":"29","hashOfConfig":"26"},{"size":2962,"mtime":1635550284760,"results":"30","hashOfConfig":"26"},{"size":1141,"mtime":1635764109854,"results":"31","hashOfConfig":"26"},{"size":707,"mtime":1635708754358,"results":"32","hashOfConfig":"26"},{"size":5155,"mtime":1635960237465,"results":"33","hashOfConfig":"26"},{"size":993,"mtime":1635708695382,"results":"34","hashOfConfig":"26"},{"size":1402,"mtime":1635271129744,"results":"35","hashOfConfig":"26"},{"size":591,"mtime":1635755874281,"results":"36","hashOfConfig":"26"},{"size":669,"mtime":1635708935734,"results":"37","hashOfConfig":"26"},{"size":757,"mtime":1634826352909,"results":"38","hashOfConfig":"26"},{"size":2086,"mtime":1635720606533,"results":"39","hashOfConfig":"26"},{"size":12078,"mtime":1635885289599,"results":"40","hashOfConfig":"26"},{"size":2954,"mtime":1635708623785,"results":"41","hashOfConfig":"26"},{"size":9872,"mtime":1635884585227,"results":"42","hashOfConfig":"26"},{"size":6526,"mtime":1635728072818,"results":"43","hashOfConfig":"26"},{"size":5437,"mtime":1635550658284,"results":"44","hashOfConfig":"26"},{"size":6642,"mtime":1635715225771,"results":"45","hashOfConfig":"26"},{"size":6127,"mtime":1635708764547,"results":"46","hashOfConfig":"26"},{"size":7561,"mtime":1635838199306,"results":"47","hashOfConfig":"26"},{"size":1939,"mtime":1635516893803,"results":"48","hashOfConfig":"26"},{"size":451,"mtime":1635766780243,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1xzhi39",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/onceknownriley/Dev/Ionic-React/admin/src/index.tsx",[],["114","115"],"/Users/onceknownriley/Dev/Ionic-React/admin/src/reportWebVitals.ts",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/serviceWorkerRegistration.ts",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/App.tsx",["116","117"],"import { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport Menu from './components/Menu/Menu';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport Router from './pages/Router';\n\nconst App: React.FC = () => {\n  return (\n    <IonApp>\n      <IonReactRouter>\n      <IonSplitPane contentId=\"main\">\n        <Menu />\n          <Route path=\"/\" render={props => <Router {...props} />} />\n      </IonSplitPane>\n      </IonReactRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Menu/Menu.tsx",["118","119","120","121"],"import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonFooter,\n  IonIcon,\n  IonImg,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonNote,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\n\nimport TGWLogo from \"../../components/TGWLogo.png\";\n\nimport { useLocation } from \"react-router-dom\";\nimport {\n  businessOutline,\n  businessSharp,\n  calendarOutline,\n  calendarSharp,\n  gridOutline,\n  gridSharp,\n  home,\n  homeOutline,\n  peopleOutline,\n  peopleSharp,\n  personOutline,\n  personSharp,\n  starOutline,\n  starSharp,\n} from \"ionicons/icons\";\nimport \"./Menu.css\";\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\ninterface Admin {\n  name: string;\n  surname: string;\n}\n\nconst admin: Admin = {\n  name: \"name\",\n  surname: \"surname\",\n};\n\nconst appPages: AppPage[] = [\n  {\n    title: \"Dashboard\",\n    url: \"/dashboard\",\n    iosIcon: homeOutline,\n    mdIcon: home,\n  },\n  {\n    title: \"Calendar\",\n    url: \"/calendar\",\n    iosIcon: calendarOutline,\n    mdIcon: calendarSharp,\n  },\n  {\n    title: \"Agent Management\",\n    url: \"/page/Agent/agent\",\n    iosIcon: peopleOutline,\n    mdIcon: peopleSharp,\n  },\n  {\n    title: \"Complex Management\",\n    url: \"/page/Complex/complex\",\n    iosIcon: businessOutline,\n    mdIcon: businessSharp,\n  },\n  {\n    title: \"Package Management\",\n    url: \"/page/Package/package\",\n    iosIcon: gridOutline,\n    mdIcon: gridSharp,\n  },\n  {\n    title: \"Promotion Management\",\n    url: \"/page/Promotion/promotion\",\n    iosIcon: starOutline,\n    mdIcon: starSharp,\n  },\n  {\n    title: \"Profile\",\n    url: \"/profile\",\n    iosIcon: personOutline,\n    mdIcon: personSharp,\n  },\n];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"inbox-list\">\n          <IonImg src={TGWLogo}/>\n          <IonListHeader>The Green Wash Admin</IonListHeader>\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem\n                  className={\n                    location.pathname === appPage.url ? \"selected\" : \"\"\n                  }\n                  routerLink={appPage.url}\n                  routerDirection=\"none\"\n                  lines=\"none\"\n                  detail={false}\n                >\n                  <IonIcon\n                    slot=\"start\"\n                    ios={appPage.iosIcon}\n                    md={appPage.mdIcon}\n                  />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n        <IonFooter>\n          <IonToolbar>\n              <IonButton href=\"/signIn\" fill=\"solid\" shape=\"round\" color=\"primary\">Sign Out</IonButton>\n          </IonToolbar>\n        </IonFooter>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Profile/Profile.tsx",["122","123","124","125","126","127"],"import {\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport AdminForm from \"../../components/Forms/AdminForm\";\n\nconst Profile: React.FC = () => {\n\n  useIonViewWillEnter(()=>{\n  })\n\n  interface Admin{\n    adminId: string;\n    name: string;\n    surname: string;\n    cellNum: string;\n    password: string;\n  }\n\n  const admin: Admin =\n  {\n    adminId: \"\",\n    name:\"\",\n    surname:\"\",\n    cellNum:\"\",\n    password:\"\",\n  }\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/dashboard\"/>\n          </IonButtons>\n          <IonTitle>Profile</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent >\n        <AdminForm buttonName=\"Update\" content={admin}/>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Profile;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Dashboard/Dashboard.tsx",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignIn/SignIn.tsx",["128","129","130","131","132"],"import {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCol,\n  IonContent,\n  IonFooter,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport {\n  validCellNum,\n  validPassword,\n} from \"../../components/Regex/Regex\";\n\nconst SignIn: React.FC = () => {\n  const path = useHistory();\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const [cellNum, setCellNum] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateCellNum = (cellNum: any) => {\n    setCellNum(cellNum);\n  };\n  const updatePassword = (password: any) => {\n    setPassword(password);\n  };\n\n  const buttonHandler = () => {\n    validateForm();\n    if (isFormValid === true) {\n      let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n      Connection.processGetRequest({}, url, (response: any) => {\n        mapResponse(response);\n      });\n    }\n  };\n\n  const validateForm = () => {\n    if (cellNum === \"\" || password === \"\") {\n      setShowLoader(false);\n      setIsFormValid(false);\n      setErrorMessage(\"Fields cannot be empty.\");\n      setShowError(true);\n    } else {\n      if (!validCellNum.test(cellNum)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        setIsFormValid(true);\n      }\n    }\n  };\n\n  const mapResponse = (response: any) => {\n    setShowLoader(false);\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setPassword(\"\");\n    } else {\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonImg src={TGWLogo} alt={\"Logo.png\"} />\n        <IonToolbar>\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            showBackdrop\n            isOpen={showLoader}\n            message={\"Please wait...\"}\n          />\n\n          <IonAlert\n            isOpen={showError}\n            onDidDismiss={() => setShowError(false)}\n            header={\"Error\"}\n            subHeader={\"Something went wrong.\"}\n            message={errorMessage}\n            buttons={[\"OK\"]}\n          />\n\n          <IonAlert\n            isOpen={showSuccess}\n            onDidDismiss={() => path.push(\"/dashboard\")}\n            header={\"Success\"}\n            subHeader={successMessage}\n            buttons={[\"OK\"]}\n          />\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <IonToolbar>\n                  <IonTitle>Sign In</IonTitle>\n                </IonToolbar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Cell Number</IonLabel>\n                  <IonInput\n                    value={cellNum}\n                    onIonChange={(e) => updateCellNum(e.detail.value)}\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Password</IonLabel>\n                  <IonInput\n                    type=\"password\"\n                    value={password}\n                    onIonChange={(e) => updatePassword(e.detail.value)}\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  shape=\"round\"\n                  type=\"submit\"\n                  expand=\"block\"\n                  onClick={buttonHandler}\n                >\n                  SignIn\n                </IonButton>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <p>\n                  <a href=\"/forgot\">Forgot password ?</a>\n                </p>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <p>\n                  Don't have an account ? <a href=\"/signUp\">Sign Up.</a>\n                </p>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignUp/SignUp.tsx",["133","134","135","136","137","138","139","140"],"import {\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport AdminForm from \"../../components/Forms/AdminForm\";\n\nconst SignUp: React.FC = () => {\n  interface Admin{\n    adminId: string;\n    name: string;\n    surname: string;\n    cellNum: string;\n    password: string;\n  }\n  const admin: Admin =(\n  {\n    adminId: \"\",\n    name:\"\",\n    surname:\"\",\n    cellNum:\"\",\n    password:\"\",\n  }\n  );\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Sign Up</IonTitle>\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/signIn\" />\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <AdminForm buttonName=\"Sign Up\" content={admin}/>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignUp;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Router.tsx",["141","142"],"import { Redirect, Route, RouteComponentProps } from \"react-router-dom\";\nimport { IonRouterOutlet, IonSplitPane } from \"@ionic/react\";\nimport React from \"react\";\n\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport SignIn from \"./SignIn/SignIn\";\nimport SignUp from \"./SignUp/SignUp\";\nimport Calendar from \"./Calendar/Calendar\";\nimport Profile from \"./Profile/Profile\";\nimport Add from \"./Add/Add\"\nimport CardDetails from \"./CardDetails/CardDetails\";\nimport Management from \"./Management/Management\";\nimport Menu from \"../components/Menu/Menu\";\n\nconst Router: React.FC<RouteComponentProps> = ({ match }) => (\n  <IonRouterOutlet id=\"main\">\n    <Route path={match.url} exact={true}>\n      <Redirect to=\"/signIn\" />\n    </Route>\n    <Route path=\"/signIn\" exact={true}>\n      <SignIn />\n    </Route>\n    <Route path=\"/dashboard\" exact={true}>\n      <Dashboard />\n    </Route>\n    <Route path=\"/calendar\" exact={true}>\n      <Calendar />\n    </Route>\n    <Route path=\"/page/:name/:title\" exact={true}>\n      <Management />\n    </Route>\n    <Route path=\"/cardDetails/:name/:id/:type/:back\" exact={true}>\n      <CardDetails />\n      </Route>\n    <Route path=\"/add/:name/:title\" exact={true}>\n      <Add />\n    </Route>\n    <Route path=\"/profile\" exact={true}>\n      <Profile />\n    </Route>\n    <Route path=\"/signUp\" exact={true}>\n      <SignUp />\n    </Route>\n  </IonRouterOutlet>\n);\n\nexport default Router;","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Calendar/Calendar.tsx",["143"],"import {\n    IonBackButton,\n    IonButtons,\n    IonContent,\n    IonHeader,\n    IonMenuButton,\n    IonPage,\n    IonTitle,\n    IonToolbar,\n  } from \"@ionic/react\";\nimport React from \"react\";\n\nconst Calendar: React.FC = () => {\n    return(\n        <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>Calendar</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        \n      </IonContent>\n    </IonPage>\n    );\n};\n\nexport default Calendar;","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Card/Card.tsx",["144"],"import {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n} from \"@ionic/react\";\nimport React, { ReactComponentElement } from \"react\";\n\nconst Card: React.FC<{type: \"agent\" | \"complex\" | \"package\" | \"promotion\", id: string, title: any, subtitle: any, reference: string}> = (props) => {\n    const url = \"/cardDetails/\";\n  return (\n    <IonCard color=\"secondary\" button={true} href={url.concat(props.title,\"/\",props.id,\"/\",props.type,\"/\",props.reference)}>\n      <IonCardHeader>\n        <IonCardTitle>{props.title}</IonCardTitle>\n        <IonCardSubtitle>{props.subtitle}</IonCardSubtitle>\n      </IonCardHeader>\n    </IonCard>\n  );\n};\n\nexport default Card;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/InputControls/InputControls.tsx",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/MultiForm/MultiForm.tsx",["145","146","147","148"],"import React from \"react\";\nimport AgentForm from \"../Forms/AgentForm\";\nimport ComplexForm from \"../Forms/ComplexForm\";\nimport PackageForm from \"../Forms/PackageForm\";\nimport PromotionForm from \"../Forms/PromotionForm\";\n\ninterface Pack {\n  packageId: string;\n  promotionId: string;\n  packageName: string;\n  minutes: number;\n  standardPrice: string;\n  suvPrice: string;\n  description: string;\n  onPromotion: boolean;\n}\n\ninterface Promotion {\n  promotionId: string;\n  promotionName: string;\n  packageName: string;\n  standardPrice: string;\n  suvPrice: string;\n  isEnabled: boolean;\n}\ninterface Complex {\n  complexId: string;\n  complexName: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  telephoneNum: string;\n  startTime: Date;\n  endTime: Date;\n  cellNum: string;\n  units: string[];\n  agents: string[];\n}\ninterface Agent {\n  agentId: string;\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst MultiForm: React.FC<{\n  buttonName: string;\n  type: \"agent\" | \"complex\" | \"package\" | \"promotion\";\n  isDisabled: boolean;\n  content: any;\n}> = (props) => {\n  let form;\n\n  if (props.type === \"agent\") {\n    form = (\n      <AgentForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  } else if (props.type === \"complex\") {\n    form = (\n      <ComplexForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  } else if (props.type === \"package\") {\n    form = (\n      <PackageForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  } else {\n    form = (\n      <PromotionForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  }\n\n  return <>{form}</>;\n};\n\nexport default MultiForm;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AgentForm.tsx",["149","150"],"import {\n  IonAlert,\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonRow,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validId, validName, validPassword, validPostalCode } from \"../Regex/Regex\";\n\ninterface Agent {\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst AgentForm: React.FC<{ name: string; isDisabled: boolean; content: any }> =\n  (props) => {\n    const {\n      agentId,\n      complexName,\n      contractId,\n      name,\n      surname,\n      id,\n      cellNum,\n      street1,\n      street2,\n      city,\n      province,\n      postalCode,\n      password,\n    } = props.content;\n\n    const path = useHistory();\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const [enteredComplexName, setComplexName] = useState(complexName);\n    const [enteredName, setName] = useState(name);\n    const [enteredSurname, setSurname] = useState(surname);\n    const [enteredId, setId] = useState(id);\n    const [enteredCellNum, setCellNum] = useState(cellNum);\n    const [enteredStreet1, setStreet1] = useState(street1);\n    const [enteredStreet2, setStreet2] = useState(street2);\n    const [enteredCity, setCity] = useState(city);\n    const [enteredProvince, setProvince] = useState(province);\n    const [enteredPostalCode, setPostalCode] = useState(postalCode);\n    const [enteredPassword, setPassword] = useState(\"\");\n    const [enteredConfirm, setConfirmPassword] = useState(\"\");\n\n    const updateComplexName = (complexName: any) => setComplexName(complexName);\n    const updateName = (name: any) => setName(name);\n    const updateSurname = (surname: any) => setSurname(surname);\n    const updateId = (id: any) => setId(id);\n    const updateCellNum = (cellNum: any) => setCellNum(cellNum);\n    const updateStreet1 = (street1: any) => setStreet1(street1);\n    const updateStreet2 = (street2: any) => setStreet2(street2);\n    const updateCity = (city: any) => setCity(city);\n    const updateProvince = (province: any) => setProvince(province);\n    const updatePostalCode = (postalCode: any) => setPostalCode(postalCode);\n    const updatePassword = (password: any) => setPassword(password);\n    const updateConfirm = (cPassword: any) => setConfirmPassword(cPassword);\n\n    const buttonHandler = () => {\n      validateForm();\n      if(isFormValid){\n        if(props.name === \"Add\"){\n          let url = \"agent/add\";\n          var payload = {\n            agentId: agentId,\n            complexName: enteredComplexName,\n            contractId: contractId,\n            name: enteredName,\n            surname: enteredSurname,\n            id: enteredId,\n            cellNum: enteredCellNum,\n            street1: enteredStreet1,\n            street2: enteredStreet2,\n            city: enteredCity,\n            province: enteredProvince,\n            postalCode: enteredPostalCode,\n            password: enteredPassword \n          }\n          Connection.processPostRequest(payload, url, (response: any) => {\n            mapAddResponse(response);\n          });\n        }\n      }\n    };\n\n    const mapAddResponse = (response: any) => {\n      if (response.type === \"error\") {\n        setShowLoader(false);\n        setErrorMessage(response.data);\n        setShowError(true);\n      } else {\n        setShowLoader(false);\n        setSuccessMessage(\"Agent Details Captured!\");\n        setShowSuccess(true);\n      }\n    };\n\n    const validateForm = () => {\n      if (\n        enteredName === \"\" ||\n        enteredSurname === \"\" ||\n        enteredComplexName === \"\" ||\n        enteredId === \"\" ||\n        enteredCellNum === \"\" ||\n        enteredStreet1 === \"\" ||\n        enteredStreet2 === \"\" ||\n        enteredCity === \"\" ||\n        enteredProvince === \"\" ||\n        enteredPostalCode === \"\" ||\n        enteredPassword === \"\" ||\n        enteredConfirm === \"\"\n      ) {\n        setShowLoader(false);\n        setErrorMessage(\"Fields must not be empty.\");\n        setShowError(true);\n      }else if(enteredPassword !== enteredConfirm){\n        setShowLoader(false);\n        setErrorMessage(\n        \"Passwords do not match. Please ensure they are entered correctly!\"\n      );\n      setShowError(true);\n      setIsFormValid(false);\n      }\n      else{\n        if(!validName.test(enteredName)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Name.\");\n          setShowError(true);\n        }else if (!validName.test(enteredSurname)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Surname.\");\n          setShowError(true);\n        }else if (!validName.test(enteredComplexName)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Complex Name.\");\n          setShowError(true);\n        }else if(!validId.test(enteredId)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Id.\");\n          setShowError(true);\n        }else if(!validCellNum.test(enteredCellNum)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Cell Number\");\n          setShowError(true);\n        }else if(!validName.test(enteredCity)){\n          setShowLoader(false);\n          setErrorMessage(\"Invalid City\");\n          setShowError(true);\n        }\n        else if(!validName.test(enteredProvince)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Province.\");\n          setShowError(true);\n        }else if(!validPostalCode.test(enteredPostalCode)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Postal Code.\");\n          setShowError(true);\n        }else if(!validPassword.test(enteredPassword)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n          setShowError(true);\n        }\n        else{\n          setIsFormValid(true)\n        }\n      }\n    };\n\n    return (\n      <IonGrid>\n        <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n\n      <IonAlert\n        isOpen={showSuccess}\n        onDidDismiss={() => path.push(\"/page/Agent/agent\")}\n        header={\"Success\"}\n        subHeader={successMessage}\n        buttons={[\"OK\"]}\n      />\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredName}\n                onIonChange={(e) => updateName(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Surname</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredSurname}\n                onIonChange={(e) => updateSurname(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">ID</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredId}\n                onIonChange={(e) => updateId(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Cell Number</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredCellNum}\n                onIonChange={(e) => updateCellNum(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Street 1</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredStreet1}\n                onIonChange={(e) => updateStreet1(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Street 2</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredStreet2}\n                onIonChange={(e) => updateStreet2(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">City</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredCity}\n                onIonChange={(e) => updateCity(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Province</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredProvince}\n                onIonChange={(e) => updateProvince(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Postal code</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredPostalCode}\n                onIonChange={(e) => updatePostalCode(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Complex</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredComplexName}\n                onIonChange={(e) => updateComplexName(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Password</IonLabel>\n              <IonInput\n                type=\"password\"\n                disabled={props.isDisabled}\n                value={enteredPassword}\n                onIonChange={(e) => updatePassword(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\"> Confirm Password</IonLabel>\n              <IonInput\n                type=\"password\"\n                disabled={props.name === \"Add\" ? props.isDisabled : true}\n                value={enteredConfirm}\n                onIonChange={(e) => updateConfirm(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonButton type=\"submit\" expand=\"block\" onClick={buttonHandler}>\n              {props.name}\n            </IonButton>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n    );\n  };\n\nexport default AgentForm;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Add/Add.tsx",["151","152","153","154"],"import React, { useState } from \"react\";\nimport {\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\n\nimport MultiForm from \"../../components/MultiForm/MultiForm\";\nimport { useParams } from \"react-router\";\ninterface Pack {\n  packageId: string;\n  promotionId: string;\n  packageName: string;\n  minutes: number;\n  standardPrice: string;\n  suvPrice: string;\n  description: string;\n  onPromotion: boolean;\n}\n\ninterface Promotion {\n  promotionId: string;\n  promotionName: string;\n  packageName: string;\n  standardPrice: string;\n  suvPrice: string;\n  isEnabled: boolean;\n}\ninterface Complex {\n  complexId: string;\n  complexName: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  telephoneNum: string;\n  startTime: Date;\n  endTime: Date;\n  cellNum: string;\n  units: string[];\n  agents: string[];\n}\ninterface Agent {\n  agentId: string;\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst agent: Agent =\n  {\n    agentId: \"\",\n    complexName: \"\",\n    contractId: \"\",\n    name: \"\",\n    surname: \"\",\n    id: \"\",\n    cellNum: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    password: \"\",\n  }\n\nconst complex: Complex =\n  {\n    complexId: \"\",\n    complexName: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    telephoneNum: \"\",\n    startTime: new Date,\n    endTime: new Date,\n    cellNum: \"\",\n    units: [\"Default\"],\n    agents: [\"\"],\n  }\nconst pack: Pack = {\n    packageId: \"\",\n    promotionId: \"\",\n    packageName: \"\",\n    minutes: 0,\n    standardPrice: \"\",\n    suvPrice: \"\",\n    description: \"\",\n    onPromotion: false,\n  }\nconst promotion: Promotion =\n  {\n    promotionId: \"\",\n    promotionName: \"\",\n    packageName: \"\",\n    standardPrice: \"\",\n    suvPrice: \"\",\n    isEnabled: false,\n  }\n\nconst AddAgent: React.FC = () => {\n  const {name, title} = useParams<{name: string, title: \"agent\" | \"complex\" | \"package\" | \"promotion\" }>();\n  const backUrl = \"/page/\";\n  let content;\n  if (title === \"agent\"){\n    content = agent;\n  }\n  else if (title === \"complex\"){\n    content = complex;\n  }\n  else if (title === \"package\"){\n    content = agent;\n  }else{\n    content = promotion\n  }\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref={backUrl.concat(name).concat(\"/\").concat(title)} />\n          </IonButtons>\n          <IonTitle>Add {name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <MultiForm buttonName=\"Add\" type={title} isDisabled={false} content={content}/>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default AddAgent;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/ComplexForm.tsx",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/PromotionForm.tsx",["155","156"],"import {\n  IonAlert,\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonRow,\n  IonToggle,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\n\nconst PromotionForm: React.FC<{\n  name: string;\n  isDisabled: boolean;\n  content: any;\n}> = (props) => {\n  var {\n    promotionId,\n    promotionName,\n    packageName,\n    standardPrice,\n    suvPrice,\n    isEnabled,\n  } = props.content;\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const [enteredPromotionName, setPromotionName] = useState(promotionName);\n  const [enteredPackageName, setPackageName] = useState(packageName);\n  const [enteredStandardPrice, setStandardPriceName] = useState(standardPrice);\n  const [enteredSuvPrice, setSuvPrice] = useState(suvPrice);\n  const [enteredIsEnabled, setIsEnabled] = useState(isEnabled);\n\n  const updatePromotionName = (promotionName: any) => {\n    setPromotionName(promotionName);\n  };\n  const updatePackageName = (packageName: any) => {\n    setPackageName(packageName);\n  };\n  const updateStandardPrice = (standardPrice: any) => {\n    setStandardPriceName(standardPrice);\n  };\n  const updateSuvPrice = (suvPrice: any) => {\n    setSuvPrice(suvPrice);\n  };\n  const updateIsEnabled = (isEnabled: any) => {\n    setIsEnabled(isEnabled);\n  };\n\n  const path = useHistory();\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n    if (props.name === \"Update\") {\n      let url = \"promotion/update\";\n      var payload = {\n        promotionId: promotionId,\n        promotionName: enteredPromotionName,\n        packageName: enteredPackageName,\n        standardPrice: enteredStandardPrice,\n        suvPrice: enteredSuvPrice,\n        isEnabled: enteredIsEnabled\n      };\n\n      Connection.processPostRequest(payload, url, (response: any) => {\n        mapUpdateResponse(response);\n      });\n    } else if (props.name === \"Delete\") {\n      let url = \"promotion/remove/\".concat(promotionId);\n\n      Connection.processDeleteRequest({}, url, (response: any) => {\n        mapDeleteResponse(response);\n      });\n    } else if (props.name === \"Add\") {\n      let url = \"promotion/add\";\n      var payload = {\n        promotionId: promotionId,\n        promotionName: enteredPromotionName,\n        packageName: enteredPackageName,\n        standardPrice: enteredStandardPrice,\n        suvPrice: enteredSuvPrice,\n        isEnabled: enteredIsEnabled\n      };\n      console.log(payload);\n      Connection.processPostRequest(payload, url, (response: any) => {\n        mapAddResponse(response);\n      });\n    }\n  };\n\n  const mapUpdateResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setSuccessMessage(\"Promotion Updated!\")\n      setShowSuccess(true);\n    }\n  };\n  const mapDeleteResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      console.log(\"error!\");\n    } else {\n      setShowLoader(false);\n      setSuccessMessage(\"Promotion Deleted!\")\n      setShowSuccess(true);\n    }\n  };\n  const mapAddResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      console.log(\"error!\");\n    } else {\n      setShowLoader(false);\n      setSuccessMessage(\"Promotion Added!\")\n      setShowSuccess(true);\n    }\n  };\n\n  return (\n    <IonGrid>\n      <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n\n      <IonAlert\n        isOpen={showSuccess}\n        onDidDismiss={() => path.push(\"/page/Promotion/promotion\")}\n        header={\"Success\"}\n        subHeader={successMessage}\n        buttons={[\"OK\"]}\n      />\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Promotion Name</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredPromotionName}\n              onIonChange={(e) => updatePromotionName(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Package Name</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredPackageName}\n              onIonChange={(e) => updatePackageName(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Standard Price</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredStandardPrice}\n              onIonChange={(e) => updateStandardPrice(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Suv Price</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredSuvPrice}\n              onIonChange={(e) => updateSuvPrice(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel>Enabled</IonLabel>\n            <IonToggle\n              checked={enteredIsEnabled}\n              disabled={props.isDisabled}\n              onIonChange={(e) => updateIsEnabled(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonButton type=\"submit\" expand=\"block\" onClick={buttonHandler}>\n            {props.name}\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default PromotionForm;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/PackageForm.tsx",["157","158","159","160","161","162","163"],"import {\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonRow,\n  IonTextarea,\n  IonToggle,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport Connection from \"../../mixins/Connection\";\n\nconst PackageForm: React.FC<{\n  name: string;\n  isDisabled: boolean;\n  content: any;\n}> = (props) => {\n  const {\n    packageId,\n    promotionId,\n    packageName,\n    minutes,\n    standardPrice,\n    suvPrice,\n    description,\n    onPromotion,\n  } = props.content;\n\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const updatePackageName = (packageName: any) => {\n    setEnteredPackageName(packageName);\n  };\n  const updateMinutes = (minutes: any) => {\n    setEnteredMinutes(minutes);\n  };\n  const updateStandardPrice = (standardPrice: any) => {\n    setEnteredStandardPrice(standardPrice);\n  };\n  const updateSuvPrice = (suvPrice: any) => {\n    setEnteredSuvPrice(suvPrice);\n  };\n  const updateDescription = (description: any) => {\n    setEnteredDescription(description);\n  };\n  const updateOnPromotion = (onPromotion: any) => {\n    setOnPromotion(onPromotion);\n  };\n\n  const [enteredPackageName, setEnteredPackageName] = useState(packageName);\n  const [enteredMinutes, setEnteredMinutes] = useState(minutes);\n  const [enteredStandardPrice, setEnteredStandardPrice] =\n    useState(standardPrice);\n  const [enteredSuvPrice, setEnteredSuvPrice] = useState(suvPrice);\n  const [enteredDescription, setEnteredDescription] = useState(description);\n  const [enteredOnPromotion, setOnPromotion] = useState(onPromotion);\n\n  function mapDeleteResponse(response: any) {\n    return (console.log(\"deleted\"));\n  }\n\n  const buttonHandler = () => {\n    if (props.name === \"Update\") {\n      var url = \"package/update\";\n      var pack = {\n        packageId: packageId,\n        promotionId: promotionId,\n        packageName: enteredPackageName,\n        minutes: enteredMinutes,\n        standardPrice: enteredStandardPrice,\n        suvPrice: enteredSuvPrice,\n        onPromotion: onPromotion,\n      };\n\n      Connection.processPostRequest(pack, url, (response: any) => {\n        mapResponse(response);\n      });\n    } else if (props.name === \"Delete\") {\n      url = \"package/remove/\".concat(packageId);\n\n      Connection.processDeleteRequest({}, url,(response: any)=>{\n        mapDeleteResponse(response);\n      })\n\n    } else {\n      url = \"package/add\";\n      var pack = {\n        packageId: packageId,\n        promotionId: promotionId,\n        packageName: enteredPackageName,\n        minutes: enteredMinutes,\n        standardPrice: enteredStandardPrice,\n        suvPrice: enteredSuvPrice,\n        onPromotion: onPromotion,\n      };\n      console.log(pack);\n      Connection.processPostRequest(pack, url, (response: any) => {\n        mapResponse(response);\n      });\n    }\n  };\n\n  const mapResponse = (response: any) => {};\n  return (\n    <IonGrid>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Package Name</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredPackageName}\n              onIonChange={(e) => updatePackageName(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Minutes</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredMinutes}\n              onIonChange={(e) => updateMinutes(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Standard Price</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredStandardPrice}\n              onIonChange={(e) => updateStandardPrice(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">SUV Price</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredSuvPrice}\n              onIonChange={(e) => updateSuvPrice(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Description</IonLabel>\n            <IonTextarea\n              disabled={props.isDisabled}\n              value={enteredDescription}\n              onIonChange={(e) => updateDescription(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel>On Promotion</IonLabel>\n            <IonToggle\n              color={\"primary\"}\n              disabled={props.isDisabled}\n              checked={enteredOnPromotion}\n              onIonChange={(e) => updateOnPromotion(e.detail.checked)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonButton type=\"submit\" expand=\"block\" onClick={buttonHandler}>\n            {props.name}\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default PackageForm;","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Management/Management.tsx",["164","165","166"],"import {\n  IonAlert,\n  IonButtons,\n  IonContent,\n  IonFab,\n  IonFabButton,\n  IonHeader,\n  IonIcon,\n  IonLoading,\n  IonMenuButton,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewDidEnter,\n  useIonViewDidLeave,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport { add } from \"ionicons/icons\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Card from \"../../components/Card/Card\";\nimport Connection from \"../../mixins/Connection\";\nimport \"./Page.css\";\n\nconst Management: React.FC = () => {\n  let cards;\n\n  const addUrl = \"/add/\";\n\n  const { name, title } =\n    useParams<{\n      name: string;\n      title: \"agent\" | \"complex\" | \"package\" | \"promotion\";\n    }>();\n\n  const [showLoader, setShowLoader] = useState(true);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [agents, setAgents] = useState([\n    {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\",\n    },\n  ]);\n  const [complexes, setComplexes] = useState([\n    {\n      complexId: \"\",\n      complexName: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: [],\n    },\n  ]);\n  const [packages, setPackages] = useState([\n    {\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: false,\n    },\n  ]);\n  const [promotions, setPromotions] = useState([\n    {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false,\n    },\n  ]);\n\n  useIonViewWillEnter( () => {\n      getAgents();\n      getComplexes();\n      getPackages();\n      getPromotions();\n  });\n\n  const getAgents = () => {\n    setShowLoader(true);\n    var url = \"agent/get/all\";\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapAgents(response);\n    });\n  };\n  const getComplexes = () => {\n    setShowLoader(true);\n    var url = \"complex/get/all\";\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapComplexes(response);\n    });\n  };\n  const getPackages = () => {\n    setShowLoader(true);\n    var url = \"package/get/all\";\n\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapPackages(response);\n    });\n  };\n  const getPromotions = () => {\n    setShowLoader(true);\n    var url = \"promotion/get/all\";\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapPromotions(response);\n    });\n  };\n\n  const mapPackages = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setPackages(response.data.data);\n    }\n  };\n  const mapAgents = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setAgents(response.data.data);\n    }\n  };\n\n  const mapComplexes = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setComplexes(response.data.data);\n    }\n  };\n  const mapPromotions = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setPromotions(response.data.data);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name.concat(\" Management\")}</IonTitle>\n        </IonToolbar>\n        <IonAlert\n          isOpen={showError}\n          onDidDismiss={() => setShowError(false)}\n          header={'Error'}\n          subHeader={'Something went wrong.'}\n          message={errorMessage}\n          buttons={['OK']}\n        />\n      </IonHeader>\n\n      <IonContent fullscreen>\n      <IonLoading\n            cssClass='my-custom-class'\n            showBackdrop\n            isOpen={showLoader}\n            message={'Please wait...'}\n          />\n        {/* {cards} */}\n        { title === \"agent\" && agents.length !== 0 &&\n        agents.map((agent) => (\n          <Card\n            type={title}\n            id={agent.agentId}\n            key={agent.agentId}\n            title={agent.name.concat(\" \", agent.surname)}\n            subtitle={agent.complexName}\n            reference={name}\n          />\n        ))}\n      { title === \"agent\" && agents.length === 0 && \n        <h2>No Agents</h2>\n      }\n      { title === \"complex\" && complexes.length !== 0 &&\n        complexes.map((complex) => (\n          <Card\n            type={title}\n            id={complex.complexId}\n            key={complex.complexId}\n            title={complex.complexName}\n            subtitle={complex.street2}\n            reference={name}\n          />\n        ))}\n      { title === \"complex\" && complexes.length === 0 &&\n        <h2>No Complexes</h2>\n      }\n      { title === \"package\" && packages.length !== 0 &&\n      packages.map((pack) => (\n        <Card\n          type={title}\n          id={pack.packageId}\n          key={pack.packageId}\n          title={pack.packageName}\n          subtitle={pack.description}\n          reference={name}\n        />\n      ))}\n      { title === \"package\" && packages.length === 0 &&\n        <h2>No Packages</h2>\n      }\n      { title === \"promotion\" && promotions.length !== 0 &&\n        promotions.map((promotion) => (\n          <Card\n            type={title}\n            id={promotion.promotionId}\n            key={promotion.promotionId}\n            title={promotion.promotionName}\n            subtitle={promotion.packageName}\n            reference={name}\n          />\n        ))}\n      { title === \"promotion\" && promotions.length === 0 &&\n        <h2>No Promotions</h2>\n      }\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton href={addUrl.concat(name, \"/\", title)}>\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Management;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/CardDetails/CardDetails.tsx",["167","168","169","170","171","172","173","174"],"import {\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewDidEnter,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport MultiForm from \"../../components/MultiForm/MultiForm\";\nimport InputControls from \"../../components/InputControls/InputControls\";\nimport Connection from \"../../mixins/Connection\";\n\nvar result : Agent| Complex | Pack | Promotion;\ninterface Pack {\n  packageId: string;\n  promotionId: string;\n  packageName: string;\n  minutes: number;\n  standardPrice: string;\n  suvPrice: string;\n  description: string;\n  onPromotion: boolean;\n}\n\ninterface Promotion {\n  promotionId: string;\n  promotionName: string;\n  packageName: string;\n  standardPrice: string;\n  suvPrice: string;\n  isEnabled: boolean;\n}\ninterface Complex {\n  complexId: string;\n  complexName: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  telephoneNum: string;\n  startTime: Date;\n  endTime: Date;\n  cellNum: string;\n  units: string[];\n  agents: string[];\n}\ninterface Agent {\n  agentId: string;\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst CardDetails: React.FC = () => {\n\n  useIonViewDidEnter(()=>{\n    if(type===\"agent\"){\n      getAgent();\n    }else if(type===\"complex\"){\n      getComplex();\n    }else if(type===\"package\"){\n      getPackage();\n    }else{\n      getPromotion();\n    }\n  })\n  const [selectedSegment, setSelectedSegment] = useState<\"Update\" | \"Delete\">(\"Update\");\n  const [isDisabled, setIsDisabled] = useState<true | false>(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { name, id ,type, back } = useParams<{\n    name: string;\n    id: string;\n    type: \"agent\" | \"complex\" | \"package\" | \"promotion\";\n    back: string;\n  }>();\n\n  const selectedSegmentHandler = (selectedValue: \"Update\" | \"Delete\") => {\n    setSelectedSegment(selectedValue);\n    if (selectedValue == \"Delete\") {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  };\n  \n  let agent: Agent =\n    {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\",\n    }\n\n  let complex: Complex =\n    {\n      complexId: \"\",\n      complexName: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: new Date,\n      endTime: new Date,\n      cellNum: \"\",\n      units: [],\n      agents: [],\n    }\n  let pack: Pack =\n    {\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: true,\n    }\n  let promotion: Promotion =\n    {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false,\n    }\n\n  const getAgent = () => {\n    var url = \"agent/get/\".concat(id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapAgent(response);\n    });\n  };\n  const getComplex = () => {\n    var url = \"complex/get/\".concat(id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapComplex(response);\n    });\n  };\n  const getPackage = () => {\n    var url = \"package/get/\".concat(id);\n\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapPackage(response);\n    });\n  };\n  const getPromotion = () => {\n    var url = \"promotion/get/\".concat(id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapPromotion(response);\n    });\n  };\n\n  const mapPackage = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      pack = response.data.data;\n      console.log(pack)\n    }\n  };\n  const mapAgent = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      agent = response.data.data\n    }\n  };\n\n  const mapComplex = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      complex = response.data.data;\n      console.log(complex)\n    }\n  };\n  const mapPromotion = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      promotion = response.data.data;\n      console.log(promotion)\n    }\n  };\n\n  const url = \"/page/\";\n  /*Assign Content from API*/\n  \n  const getResult= () =>{\n    if (type === \"agent\") {\n      result = agent;\n      return result;\n      \n    } else if (type === \"complex\") {\n      result = complex;\n      console.log(result)\n      return result;\n      \n    } else if (type === \"package\") {\n      result = pack;\n      console.log(result)\n      return result;\n    } else {\n      result = promotion;\n      return result\n\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton\n              defaultHref={url.concat(back).concat(\"/\").concat(type)}\n            />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <InputControls\n          selectedValue={selectedSegment}\n          onSelectedValue={selectedSegmentHandler}\n        />\n        <>\n        {<MultiForm\n          buttonName={selectedSegment}\n          type={type}\n          isDisabled={isDisabled}\n          content={getResult()}\n        />}\n        </>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CardDetails;\n","/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/mixins/Connection.ts",[],"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Regex/Regex.tsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":18,"nodeType":"181","messageId":"182","endLine":1,"endColumn":33},{"ruleId":"179","severity":1,"message":"183","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":18},{"ruleId":"179","severity":1,"message":"184","line":3,"column":3,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":14,"column":3,"nodeType":"181","messageId":"182","endLine":14,"endColumn":10},{"ruleId":"179","severity":1,"message":"186","line":15,"column":3,"nodeType":"181","messageId":"182","endLine":15,"endColumn":11},{"ruleId":"179","severity":1,"message":"187","line":51,"column":7,"nodeType":"181","messageId":"182","endLine":51,"endColumn":19},{"ruleId":"179","severity":1,"message":"188","line":35,"column":10,"nodeType":"181","messageId":"182","endLine":35,"endColumn":20},{"ruleId":"179","severity":1,"message":"189","line":35,"column":22,"nodeType":"181","messageId":"182","endLine":35,"endColumn":35},{"ruleId":"179","severity":1,"message":"190","line":36,"column":10,"nodeType":"181","messageId":"182","endLine":36,"endColumn":19},{"ruleId":"179","severity":1,"message":"191","line":36,"column":21,"nodeType":"181","messageId":"182","endLine":36,"endColumn":33},{"ruleId":"179","severity":1,"message":"192","line":37,"column":10,"nodeType":"181","messageId":"182","endLine":37,"endColumn":22},{"ruleId":"179","severity":1,"message":"193","line":37,"column":24,"nodeType":"181","messageId":"182","endLine":37,"endColumn":39},{"ruleId":"179","severity":1,"message":"194","line":3,"column":3,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"184","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":5,"endColumn":13},{"ruleId":"179","severity":1,"message":"195","line":8,"column":3,"nodeType":"181","messageId":"182","endLine":8,"endColumn":12},{"ruleId":"179","severity":1,"message":"196","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":12},{"ruleId":"179","severity":1,"message":"197","line":19,"column":3,"nodeType":"181","messageId":"182","endLine":19,"endColumn":11},{"ruleId":"179","severity":1,"message":"198","line":3,"column":3,"nodeType":"181","messageId":"182","endLine":3,"endColumn":12},{"ruleId":"179","severity":1,"message":"199","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":5,"endColumn":9},{"ruleId":"179","severity":1,"message":"200","line":7,"column":3,"nodeType":"181","messageId":"182","endLine":7,"endColumn":10},{"ruleId":"179","severity":1,"message":"201","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":9},{"ruleId":"179","severity":1,"message":"202","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":11},{"ruleId":"179","severity":1,"message":"203","line":11,"column":3,"nodeType":"181","messageId":"182","endLine":11,"endColumn":10},{"ruleId":"179","severity":1,"message":"204","line":12,"column":3,"nodeType":"181","messageId":"182","endLine":12,"endColumn":11},{"ruleId":"179","severity":1,"message":"205","line":14,"column":3,"nodeType":"181","messageId":"182","endLine":14,"endColumn":9},{"ruleId":"179","severity":1,"message":"206","line":2,"column":27,"nodeType":"181","messageId":"182","endLine":2,"endColumn":39},{"ruleId":"179","severity":1,"message":"207","line":13,"column":8,"nodeType":"181","messageId":"182","endLine":13,"endColumn":12},{"ruleId":"179","severity":1,"message":"194","line":2,"column":5,"nodeType":"181","messageId":"182","endLine":2,"endColumn":18},{"ruleId":"179","severity":1,"message":"208","line":7,"column":17,"nodeType":"181","messageId":"182","endLine":7,"endColumn":38},{"ruleId":"179","severity":1,"message":"209","line":7,"column":11,"nodeType":"181","messageId":"182","endLine":7,"endColumn":15},{"ruleId":"179","severity":1,"message":"210","line":18,"column":11,"nodeType":"181","messageId":"182","endLine":18,"endColumn":20},{"ruleId":"179","severity":1,"message":"211","line":26,"column":11,"nodeType":"181","messageId":"182","endLine":26,"endColumn":18},{"ruleId":"179","severity":1,"message":"212","line":41,"column":11,"nodeType":"181","messageId":"182","endLine":41,"endColumn":16},{"ruleId":"179","severity":1,"message":"212","line":17,"column":11,"nodeType":"181","messageId":"182","endLine":17,"endColumn":16},{"ruleId":"179","severity":1,"message":"213","line":47,"column":7,"nodeType":"181","messageId":"182","endLine":47,"endColumn":15},{"ruleId":"179","severity":1,"message":"214","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":91,"column":16,"nodeType":"217","messageId":"218","endLine":91,"endColumn":24,"fix":"219"},{"ruleId":"215","severity":1,"message":"216","line":92,"column":14,"nodeType":"217","messageId":"218","endLine":92,"endColumn":22,"fix":"220"},{"ruleId":"179","severity":1,"message":"221","line":97,"column":7,"nodeType":"181","messageId":"182","endLine":97,"endColumn":17},{"ruleId":"179","severity":1,"message":"222","line":12,"column":3,"nodeType":"181","messageId":"182","endLine":12,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":86,"column":11,"nodeType":"181","messageId":"225","endLine":86,"endColumn":18},{"ruleId":"179","severity":1,"message":"226","line":31,"column":10,"nodeType":"181","messageId":"182","endLine":31,"endColumn":21},{"ruleId":"179","severity":1,"message":"227","line":31,"column":23,"nodeType":"181","messageId":"182","endLine":31,"endColumn":37},{"ruleId":"179","severity":1,"message":"190","line":32,"column":10,"nodeType":"181","messageId":"182","endLine":32,"endColumn":19},{"ruleId":"179","severity":1,"message":"191","line":32,"column":21,"nodeType":"181","messageId":"182","endLine":32,"endColumn":33},{"ruleId":"179","severity":1,"message":"192","line":33,"column":10,"nodeType":"181","messageId":"182","endLine":33,"endColumn":22},{"ruleId":"179","severity":1,"message":"193","line":33,"column":24,"nodeType":"181","messageId":"182","endLine":33,"endColumn":39},{"ruleId":"223","severity":1,"message":"228","line":91,"column":11,"nodeType":"181","messageId":"225","endLine":91,"endColumn":15},{"ruleId":"179","severity":1,"message":"229","line":14,"column":3,"nodeType":"181","messageId":"182","endLine":14,"endColumn":21},{"ruleId":"179","severity":1,"message":"230","line":15,"column":3,"nodeType":"181","messageId":"182","endLine":15,"endColumn":21},{"ruleId":"179","severity":1,"message":"231","line":26,"column":7,"nodeType":"181","messageId":"182","endLine":26,"endColumn":12},{"ruleId":"179","severity":1,"message":"222","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":22},{"ruleId":"179","severity":1,"message":"188","line":84,"column":10,"nodeType":"181","messageId":"182","endLine":84,"endColumn":20},{"ruleId":"179","severity":1,"message":"189","line":84,"column":22,"nodeType":"181","messageId":"182","endLine":84,"endColumn":35},{"ruleId":"179","severity":1,"message":"190","line":85,"column":10,"nodeType":"181","messageId":"182","endLine":85,"endColumn":19},{"ruleId":"179","severity":1,"message":"192","line":86,"column":10,"nodeType":"181","messageId":"182","endLine":86,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":97,"column":23,"nodeType":"234","messageId":"235","endLine":97,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":131,"column":18,"nodeType":"217","messageId":"218","endLine":131,"endColumn":26,"fix":"236"},{"ruleId":"215","severity":1,"message":"216","line":132,"column":16,"nodeType":"217","messageId":"218","endLine":132,"endColumn":24,"fix":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"@typescript-eslint/no-unused-vars","'IonRouterOutlet' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'IonButtons' is defined but never used.","'IonNote' is defined but never used.","'IonTitle' is defined but never used.","'admin' is assigned a value but never used.","'showLoader' is assigned a value but never used.","'setShowLoader' is assigned a value but never used.","'showError' is assigned a value but never used.","'setShowError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'IonBackButton' is defined but never used.","'IonFooter' is defined but never used.","'IonHeader' is defined but never used.","'IonToast' is defined but never used.","'IonButton' is defined but never used.","'IonCol' is defined but never used.","'IonGrid' is defined but never used.","'IonImg' is defined but never used.","'IonInput' is defined but never used.","'IonItem' is defined but never used.","'IonLabel' is defined but never used.","'IonRow' is defined but never used.","'IonSplitPane' is defined but never used.","'Menu' is defined but never used.","'ReactComponentElement' is defined but never used.","'Pack' is defined but never used.","'Promotion' is defined but never used.","'Complex' is defined but never used.","'Agent' is defined but never used.","'password' is assigned a value but never used.","'useState' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"240","text":"241"},{"range":"242","text":"241"},"'pack' is assigned a value but never used.","'useIonViewWillEnter' is defined but never used.","@typescript-eslint/no-redeclare","'payload' is already defined.","redeclared","'showSuccess' is assigned a value but never used.","'setShowSuccess' is assigned a value but never used.","'pack' is already defined.","'useIonViewDidEnter' is defined but never used.","'useIonViewDidLeave' is defined but never used.","'cards' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"243","text":"241"},{"range":"244","text":"241"},"no-global-assign","no-unsafe-negation",[1634,1634],"()",[1657,1657],[2878,2878],[2903,2903]]