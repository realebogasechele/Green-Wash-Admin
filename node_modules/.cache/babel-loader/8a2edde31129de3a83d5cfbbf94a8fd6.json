{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/ForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonBackButton, IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validCellNum } from \"../../components/Regex/Regex\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const path = useHistory();\n  const [cellNum, setCellNum] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [selection, setSelection] = useState('Cell Number');\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const updateCellNum = cellNum => setCellNum(cellNum);\n\n  const updateEmail = email => setEmail(email);\n\n  const updateSelection = selection => {\n    setSelection(selection.target.value);\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n\n    if (cellNum !== \"\") {\n      if (validCellNum.test(cellNum)) {\n        let url = \"forgot/verify/\".concat(cellNum);\n        setShowLoader(false);\n        path.replace('/forgot/otp'); // Connection.processPostRequest({}, url, (response: any) =>\n        //   mapResponse(response)\n        // );\n      } else {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      }\n    } else {\n      setShowLoader(false);\n      setErrorMessage(\"You need to provide a Cell Number.\");\n      setShowError(true);\n    }\n  };\n\n  const mapResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data.data);\n      setShowError(true);\n    } else {\n      path.push(\"/otp\");\n    }\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      subHeader: \"Something went wrong.\",\n      message: errorMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: _jsxDEV(IonBackButton, {\n            defaultHref: \"/signIn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonCard, {\n        sx: styles.card,\n        children: _jsxDEV(IonGrid, {\n          children: [_jsxDEV(IonRow, {\n            children: _jsxDEV(IonCol, {\n              children: _jsxDEV(IonItem, {\n                children: [_jsxDEV(IonLabel, {\n                  children: \"Verification Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 13\n                }, this), _jsxDEV(IonSelect, {\n                  value: selection,\n                  placeholder: \"Select One\",\n                  onIonChange: e => updateSelection(e.detail.value),\n                  children: [_jsxDEV(IonSelectOption, {\n                    value: \"Cell Number\",\n                    children: \"Cell Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 15\n                  }, this), _jsxDEV(IonSelectOption, {\n                    value: \"Email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: _jsxDEV(IonCol, {\n              children: _jsxDEV(IonToolbar, {\n                children: _jsxDEV(IonTitle, {\n                  size: \"small\",\n                  children: \"Please enter the cell number associated with your account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: selection === 'Cell Number' ? _jsxDEV(IonCol, {\n              children: _jsxDEV(IonItem, {\n                sx: styles.input,\n                children: [_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Cell Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), _jsxDEV(IonInput, {\n                  type: \"text\",\n                  onIonChange: e => updateCellNum(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this) : _jsxDEV(IonCol, {\n              children: _jsxDEV(IonItem, {\n                sx: styles.input,\n                children: [_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }, this), _jsxDEV(IonInput, {\n                  type: \"text\",\n                  onIonChange: e => updateEmail(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: _jsxDEV(IonCol, {\n              children: _jsxDEV(IonButton, {\n                shape: \"round\",\n                type: \"submit\",\n                expand: \"block\",\n                onClick: buttonHandler,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"+ssedK5uMC+dRJQOwbAW/YoTHI0=\", false, function () {\n  return [useHistory];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\nconst styles = {\n  input: {\n    mb: 2\n  },\n  card: {\n    mt: '30vh'\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/ForgotPassword.tsx"],"names":["IonAlert","IonBackButton","IonButton","IonButtons","IonCard","IonCol","IonContent","IonGrid","IonHeader","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonSelect","IonSelectOption","IonTitle","IonToolbar","React","useState","useHistory","validCellNum","ForgotPassword","path","cellNum","setCellNum","email","setEmail","selection","setSelection","errorMessage","setErrorMessage","showError","setShowError","showLoader","setShowLoader","updateCellNum","updateEmail","updateSelection","target","value","buttonHandler","test","url","concat","replace","mapResponse","response","type","data","push","styles","card","e","detail","input","mb","mt"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { jsx } from \"theme-ui\";\nimport {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonSelect,\n  IonSelectOption,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validCellNum } from \"../../components/Regex/Regex\";\nimport TGWLogo from '../../components/TGWLogo.png';\nimport Connection from \"../../mixins/Connection\";\n\nconst ForgotPassword: React.FC = () => {\n  const path = useHistory();\n\n  const [cellNum, setCellNum] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [selection, setSelection] = useState('Cell Number');\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const updateCellNum = (cellNum: any) => setCellNum(cellNum);\n  const updateEmail = (email: any) => setEmail(email);\n  const updateSelection = (selection: any) => {\n    setSelection(selection.target.value);\n  }\n\n  const buttonHandler = () => {\n      setShowLoader(true);\n    if (cellNum !== \"\") {\n      if (validCellNum.test(cellNum)) {\n        let url = \"forgot/verify/\".concat(cellNum);\n        setShowLoader(false);\n        path.replace('/forgot/otp');\n        // Connection.processPostRequest({}, url, (response: any) =>\n        //   mapResponse(response)\n        // );\n      } else {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      }\n    } else {\n      setShowLoader(false);\n      setErrorMessage(\"You need to provide a Cell Number.\");\n      setShowError(true);\n    }\n  };\n\n  const mapResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data.data);\n      setShowError(true);\n    } else {\n      path.push(\"/otp\");\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/signIn\" />\n          </IonButtons>\n          <IonTitle>Forgot Password</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard sx={styles.card}>\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n              <IonItem>\n            <IonLabel>Verification Type</IonLabel>\n            <IonSelect value={selection} placeholder=\"Select One\" onIonChange={e => updateSelection(e.detail.value)}>\n              <IonSelectOption value=\"Cell Number\">Cell Number</IonSelectOption>\n              <IonSelectOption value=\"Email\">Email</IonSelectOption>\n            </IonSelect>\n          </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonToolbar>\n                  <IonTitle size=\"small\">\n                    Please enter the cell number associated with your account\n                  </IonTitle>\n                </IonToolbar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              {selection === 'Cell Number' ?\n              <IonCol>\n                <IonItem sx={styles.input}>\n                  <IonLabel position=\"floating\">Cell Number</IonLabel>\n                  <IonInput type=\"text\" onIonChange={(e) => updateCellNum(e.detail.value)} />\n                </IonItem>\n              </IonCol> :\n              <IonCol>\n              <IonItem sx={styles.input}>\n                <IonLabel position=\"floating\">Email</IonLabel>\n                <IonInput type=\"text\" onIonChange={(e) => updateEmail(e.detail.value)} />\n              </IonItem>\n            </IonCol>}\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  shape=\"round\"\n                  type=\"submit\"\n                  expand=\"block\"\n                  onClick={buttonHandler}\n                >\n                  Submit\n                </IonButton>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonCard>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ForgotPassword;\n\nconst styles = {\n  input: {\n    mb: 2,\n  },\n  card:{\n      mt: '30vh',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}