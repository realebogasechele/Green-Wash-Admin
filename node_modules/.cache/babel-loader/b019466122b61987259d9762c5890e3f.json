{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/components/MultiForm/MultiForm.tsx\";\nimport React from \"react\";\nimport AgentForm from \"../Forms/AgentForm\";\nimport ComplexForm from \"../Forms/ComplexForm\";\nimport PackageForm from \"../Forms/PackageForm\";\nimport PromotionForm from \"../Forms/PromotionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MultiForm = props => {\n  let form;\n\n  if (props.type === \"agent\") {\n    form = /*#__PURE__*/_jsxDEV(AgentForm, {\n      name: props.buttonName,\n      isDisabled: props.isDisabled,\n      content: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"complex\") {\n    form = /*#__PURE__*/_jsxDEV(ComplexForm, {\n      name: props.buttonName,\n      isDisabled: props.isDisabled,\n      content: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"package\") {\n    form = /*#__PURE__*/_jsxDEV(PackageForm, {\n      name: props.buttonName,\n      isDisabled: props.isDisabled,\n      content: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  } else {\n    form = /*#__PURE__*/_jsxDEV(PromotionForm, {\n      name: props.buttonName,\n      isDisabled: props.isDisabled,\n      content: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: form\n  }, void 0, false);\n};\n\n_c = MultiForm;\nexport default MultiForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiForm\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/components/MultiForm/MultiForm.tsx"],"names":["React","AgentForm","ComplexForm","PackageForm","PromotionForm","MultiForm","props","form","type","buttonName","isDisabled","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;;;AAoDA,MAAMC,SAKJ,GAAIC,KAAD,IAAW;AACd,MAAIC,IAAJ;;AAEA,MAAID,KAAK,CAACE,IAAN,KAAe,OAAnB,EAA4B;AAC1BD,IAAAA,IAAI,gBACF,QAAC,SAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACG,UADd;AAEE,MAAA,UAAU,EAAEH,KAAK,CAACI,UAFpB;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACK;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO,IAAIL,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AACnCD,IAAAA,IAAI,gBACF,QAAC,WAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACG,UADd;AAEE,MAAA,UAAU,EAAEH,KAAK,CAACI,UAFpB;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACK;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARM,MAQA,IAAIL,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AACnCD,IAAAA,IAAI,gBACF,QAAC,WAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACG,UADd;AAEE,MAAA,UAAU,EAAEH,KAAK,CAACI,UAFpB;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACK;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARM,MAQA;AACLJ,IAAAA,IAAI,gBACF,QAAC,aAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACG,UADd;AAEE,MAAA,UAAU,EAAEH,KAAK,CAACI,UAFpB;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACK;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBAAO;AAAA,cAAGJ;AAAH,mBAAP;AACD,CA3CD;;KAAMF,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport AgentForm from \"../Forms/AgentForm\";\nimport ComplexForm from \"../Forms/ComplexForm\";\nimport PackageForm from \"../Forms/PackageForm\";\nimport PromotionForm from \"../Forms/PromotionForm\";\n\ninterface Pack {\n  packageId: string;\n  promotionId: string;\n  packageName: string;\n  minutes: number;\n  standardPrice: string;\n  suvPrice: string;\n  description: string;\n  onPromotion: boolean;\n}\n\ninterface Promotion {\n  promotionId: string;\n  promotionName: string;\n  packageName: string;\n  standardPrice: string;\n  suvPrice: string;\n  isEnabled: boolean;\n}\ninterface Complex {\n  complexId: string;\n  complexName: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  telephoneNum: string;\n  startTime: Date;\n  endTime: Date;\n  cellNum: string;\n  units: string[];\n  agents: string[];\n}\ninterface Agent {\n  agentId: string;\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst MultiForm: React.FC<{\n  buttonName: string;\n  type: \"agent\" | \"complex\" | \"package\" | \"promotion\";\n  isDisabled: boolean;\n  content: any;\n}> = (props) => {\n  let form;\n\n  if (props.type === \"agent\") {\n    form = (\n      <AgentForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  } else if (props.type === \"complex\") {\n    form = (\n      <ComplexForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  } else if (props.type === \"package\") {\n    form = (\n      <PackageForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  } else {\n    form = (\n      <PromotionForm\n        name={props.buttonName}\n        isDisabled={props.isDisabled}\n        content={props.content}\n      />\n    );\n  }\n\n  return <>{form}</>;\n};\n\nexport default MultiForm;\n"]},"metadata":{},"sourceType":"module"}