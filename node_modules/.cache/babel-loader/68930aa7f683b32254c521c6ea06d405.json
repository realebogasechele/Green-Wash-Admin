{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/SignIn/SignIn.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonButton, IonCard, IonCol, IonContent, IonGrid, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validEmail, validPassword } from \"../../components/Regex/Regex\";\nimport { Storage } from \"@capacitor/storage\";\nimport { App } from \"@capacitor/app\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const history = useHistory();\n\n  if (history.length !== 0) {\n    App.addListener('backButton', App.exitApp());\n  }\n\n  let valid = false;\n  let load = false;\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  App.addListener('backButton', () => setShowOptions(true));\n\n  const updateUsername = cellNum => {\n    setUsername(cellNum);\n  };\n\n  const updatePassword = password => {\n    setPassword(password);\n  };\n\n  const setAdminId = async data => {\n    await Storage.set({\n      key: \"adminId\",\n      value: data\n    });\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n\n    if (username === \"\" || password === \"\") {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Fields cannot be empty.\");\n      setShowError(true);\n    } else if (!validCellNum.test(username) && !validEmail.test(username)) {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Invalid Cell Number or Email.\");\n      setShowError(true);\n    } else if (!validPassword.test(password)) {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n      setShowError(true);\n    } else {\n      let url = \"login/\".concat(username, \"/\", password);\n      Connection.processGetRequest({}, url, response => mapResponse(response));\n    }\n  };\n\n  const mapResponse = async response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setUsername(\"\");\n      setPassword(\"\");\n    } else {\n      setShowLoader(false);\n      await setAdminId(response.data.data);\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return _jsxDEV(IonPage, {\n    children: _jsxDEV(IonContent, {\n      children: [_jsxDEV(IonImg, {\n        src: TGWLogo,\n        alt: \"Logo.png\",\n        sx: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), _jsxDEV(IonToolbar, {\n        children: [_jsxDEV(IonLoading, {\n          cssClass: \"my-custom-class\",\n          showBackdrop: true,\n          isOpen: showLoader,\n          message: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), _jsxDEV(IonAlert, {\n          isOpen: showError,\n          onDidDismiss: () => setShowError(false),\n          header: \"Error\",\n          subHeader: \"Something went wrong.\",\n          message: errorMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), _jsxDEV(IonAlert, {\n          isOpen: showSuccess,\n          onDidDismiss: () => history.push(\"/dashboard\"),\n          header: \"Success\",\n          subHeader: successMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), _jsxDEV(IonAlert, {\n          isOpen: showOptions,\n          onDidDismiss: () => setShowOptions(false),\n          header: 'Confirm',\n          message: 'Are you sure you want to exit ?',\n          buttons: [{\n            text: \"No\",\n            cssClass: \"secondary\"\n          }, {\n            text: \"Yes\",\n            handler: () => {\n              setShowOptions(false);\n              App.exitApp();\n            }\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), _jsxDEV(IonCard, {\n          sx: {\n            mt: \"8vh\"\n          },\n          children: _jsxDEV(IonGrid, {\n            children: [_jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                offset: \"4\",\n                children: _jsxDEV(IonToolbar, {\n                  children: _jsxDEV(IonTitle, {\n                    size: \"large\",\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                children: _jsxDEV(IonItem, {\n                  children: [_jsxDEV(IonLabel, {\n                    position: \"floating\",\n                    children: \"Cell Number/Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this), _jsxDEV(IonInput, {\n                    value: username,\n                    onIonChange: e => updateUsername(e.detail.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                children: _jsxDEV(IonItem, {\n                  children: [_jsxDEV(IonLabel, {\n                    position: \"floating\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this), _jsxDEV(IonInput, {\n                    type: \"password\",\n                    value: password,\n                    onIonChange: e => updatePassword(e.detail.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                children: _jsxDEV(IonButton, {\n                  shape: \"round\",\n                  type: \"submit\",\n                  expand: \"block\",\n                  onClick: () => buttonHandler(),\n                  children: \"SignIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: _jsxDEV(\"p\", {\n                  children: [_jsxDEV(\"a\", {\n                    href: \"/forgot\",\n                    children: \"Forgot password ?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this), \" or \", _jsxDEV(\"a\", {\n                    href: \"/recover\",\n                    children: \"Recover account ?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 64\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: [\"Don't have an account ? \", _jsxDEV(\"a\", {\n                  href: \"/signUp\",\n                  children: \"Sign Up.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"obAi0TsKTKmGlU/p5/TLxL1K5B0=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\nconst styles = {\n  img: {\n    pt: \"6vh\",\n    pl: \"4vh\",\n    pr: \"4vh\"\n  },\n  select: {\n    mt: \"15px\",\n    border: \"1px solid grey\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/SignIn/SignIn.tsx"],"names":["IonAlert","IonButton","IonCard","IonCol","IonContent","IonGrid","IonImg","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonTitle","IonToolbar","React","useState","useHistory","TGWLogo","Connection","validCellNum","validEmail","validPassword","Storage","App","SignIn","history","length","addListener","exitApp","valid","load","showLoader","setShowLoader","showError","setShowError","showSuccess","setShowSuccess","showOptions","setShowOptions","successMessage","setSuccessMessage","errorMessage","setErrorMessage","username","setUsername","password","setPassword","updateUsername","cellNum","updatePassword","setAdminId","data","set","key","value","buttonHandler","test","url","concat","processGetRequest","response","mapResponse","type","styles","img","push","text","cssClass","handler","mt","e","detail","textAlign","pt","pl","pr","select","border"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCol,\n  IonContent,\n  IonFooter,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonSelect,\n  IonSelectOption,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n  useIonViewWillEnter,\n  useIonViewWillLeave,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport {\n  validCellNum,\n  validEmail,\n  validPassword,\n} from \"../../components/Regex/Regex\";\nimport { Storage } from \"@capacitor/storage\";\nimport { App } from \"@capacitor/app\";\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n  \n  if (history.length !== 0){\n    App.addListener('backButton', App.exitApp())\n  }\n\n  let valid: boolean = false;\n  let load: boolean = false;\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  App.addListener('backButton', () => \n    setShowOptions(true)\n  )\n\n  const updateUsername = (cellNum: any) => {\n    setUsername(cellNum);\n  };\n  const updatePassword = (password: any) => {\n    setPassword(password);\n  };\n\n  const setAdminId = async (data: any) => {\n    await Storage.set({\n      key: \"adminId\",\n      value: data,\n    });\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n      if (username === \"\" || password === \"\") {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Fields cannot be empty.\");\n        setShowError(true);\n      } else if (!validCellNum.test(username) && !validEmail.test(username)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Invalid Cell Number or Email.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        let url = \"login/\".concat(username, \"/\", password);\n        Connection.processGetRequest({}, url, (response: any) =>\n          mapResponse(response)\n        );\n      }\n    }; \n\n  const mapResponse = async (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setUsername(\"\")\n      setPassword(\"\");\n    } else {\n      setShowLoader(false);\n      await setAdminId(response.data.data);\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonImg src={TGWLogo} alt={\"Logo.png\"} sx={styles.img} />\n        <IonToolbar>\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            showBackdrop\n            isOpen={showLoader}\n            message={\"Please wait...\"}\n          />\n\n          <IonAlert\n            isOpen={showError}\n            onDidDismiss={() => setShowError(false)}\n            header={\"Error\"}\n            subHeader={\"Something went wrong.\"}\n            message={errorMessage}\n            buttons={[\"OK\"]}\n          />\n\n          <IonAlert\n            isOpen={showSuccess}\n            onDidDismiss={() => history.push(\"/dashboard\")}\n            header={\"Success\"}\n            subHeader={successMessage}\n            buttons={[\"OK\"]}\n          />\n      <IonAlert\n          isOpen={showOptions}\n          onDidDismiss={() => setShowOptions(false)}\n          header={'Confirm'}\n          message={'Are you sure you want to exit ?'}\n          buttons={[\n            {\n              text: \"No\",\n              cssClass: \"secondary\",\n            },\n            {\n              text: \"Yes\",\n              handler: () => {\n                setShowOptions(false);\n                App.exitApp();\n              },\n            },\n          ]}\n        />\n          <IonCard sx={{ mt: \"8vh\" }}>\n            <IonGrid>\n              <IonRow>\n                <IonCol offset=\"4\">\n                  <IonToolbar>\n                    <IonTitle size=\"large\">Sign In</IonTitle>\n                  </IonToolbar>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol>\n                  <IonItem>\n                    <IonLabel position=\"floating\">Cell Number/Email</IonLabel>\n                    <IonInput\n                      value={username}\n                      onIonChange={(e) => updateUsername(e.detail.value)}\n                    ></IonInput>\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol>\n                  <IonItem>\n                    <IonLabel position=\"floating\">Password</IonLabel>\n                    <IonInput\n                      type=\"password\"\n                      value={password}\n                      onIonChange={(e) => updatePassword(e.detail.value)}\n                    ></IonInput>\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol>\n                  <IonButton\n                    shape=\"round\"\n                    type=\"submit\"\n                    expand=\"block\"\n                    onClick={() => buttonHandler()}\n                  >\n                    SignIn\n                  </IonButton>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol style={{textAlign: \"center\"}}>\n                  <p>\n                    <a href=\"/forgot\">Forgot password ?</a> or <a href=\"/recover\">Recover account ?</a>\n                  </p>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol style={{textAlign: \"center\"}}>\n                  Don't have an account ? <a href=\"/signUp\">Sign Up.</a>\n                </IonCol>\n              </IonRow>\n            </IonGrid>\n          </IonCard>\n        </IonToolbar>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n\nconst styles = {\n  img: {\n    pt: \"6vh\",\n    pl: \"4vh\",\n    pr: \"4vh\",\n  },\n  select: {\n    mt: \"15px\",\n    border: \"1px solid grey\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}