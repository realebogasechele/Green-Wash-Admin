{"ast":null,"code":"import _slicedToArray from\"/Users/onceknownriley/Documents/GreenWashProject/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{IonBackButton,IonButtons,IonContent,IonHeader,IonPage,IonTitle,IonToolbar}from\"@ionic/react\";import React,{useState}from\"react\";import{useParams}from\"react-router\";import MultiForm from\"../../components/MultiForm/MultiForm\";import InputControls from\"../../components/InputControls/InputControls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CardDetails=function CardDetails(){var _useState=useState(\"Update\"),_useState2=_slicedToArray(_useState,2),selectedSegment=_useState2[0],setSelectedSegment=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isDisabled=_useState4[0],setIsDisabled=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showLoader=_useState6[0],setShowLoader=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showError=_useState8[0],setShowError=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),errorMessage=_useState10[0],setErrorMessage=_useState10[1];var _useParams=useParams(),name=_useParams.name,id=_useParams.id,type=_useParams.type,back=_useParams.back;var selectedSegmentHandler=function selectedSegmentHandler(selectedValue){setSelectedSegment(selectedValue);if(selectedValue==\"Delete\"){setIsDisabled(true);}else{setIsDisabled(false);}};var url=\"/page/\";return/*#__PURE__*/_jsxs(IonPage,{children:[/*#__PURE__*/_jsx(IonHeader,{children:/*#__PURE__*/_jsxs(IonToolbar,{color:\"primary\",children:[/*#__PURE__*/_jsx(IonButtons,{slot:\"start\",children:/*#__PURE__*/_jsx(IonBackButton,{defaultHref:url.concat(back).concat(\"/\").concat(type)})}),/*#__PURE__*/_jsx(IonTitle,{children:name})]})}),/*#__PURE__*/_jsxs(IonContent,{children:[/*#__PURE__*/_jsx(InputControls,{selectedValue:selectedSegment,onSelectedValue:selectedSegmentHandler}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MultiForm,{buttonName:selectedSegment,type:type,isDisabled:isDisabled,id:id})})]})]});};export default CardDetails;","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/CardDetails/CardDetails.tsx"],"names":["IonBackButton","IonButtons","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","React","useState","useParams","MultiForm","InputControls","CardDetails","selectedSegment","setSelectedSegment","isDisabled","setIsDisabled","showLoader","setShowLoader","showError","setShowError","errorMessage","setErrorMessage","name","id","type","back","selectedSegmentHandler","selectedValue","url","concat"],"mappings":"6KAAA,OACEA,aADF,CAEEC,UAFF,CAGEC,UAHF,CAIEC,SAJF,CAKEC,OALF,CAMEC,QANF,CAOEC,UAPF,KAUO,cAVP,CAWA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,sCAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,8CAA1B,C,6IAqDA,GAAMC,CAAAA,WAAqB,CAAG,QAAxBA,CAAAA,WAAwB,EAAM,CAElC,cAA8CJ,QAAQ,CAAsB,QAAtB,CAAtD,wCAAOK,eAAP,eAAwBC,kBAAxB,eACA,eAAoCN,QAAQ,CAAU,KAAV,CAA5C,yCAAOO,UAAP,eAAmBC,aAAnB,eACA,eAAoCR,QAAQ,CAAC,KAAD,CAA5C,yCAAOS,UAAP,eAAmBC,aAAnB,eACA,eAAkCV,QAAQ,CAAC,KAAD,CAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eACA,eAAwCZ,QAAQ,CAAC,EAAD,CAAhD,0CAAOa,YAAP,gBAAqBC,eAArB,gBAEA,eAAiCb,SAAS,EAA1C,CAAQc,IAAR,YAAQA,IAAR,CAAcC,EAAd,YAAcA,EAAd,CAAkBC,IAAlB,YAAkBA,IAAlB,CAAwBC,IAAxB,YAAwBA,IAAxB,CAOA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,aAAD,CAAwC,CACrEd,kBAAkB,CAACc,aAAD,CAAlB,CACA,GAAIA,aAAa,EAAI,QAArB,CAA+B,CAC7BZ,aAAa,CAAC,IAAD,CAAb,CACD,CAFD,IAEO,CACLA,aAAa,CAAC,KAAD,CAAb,CACD,CACF,CAPD,CASA,GAAMa,CAAAA,GAAG,CAAG,QAAZ,CAEA,mBACE,MAAC,OAAD,yBACE,KAAC,SAAD,wBACE,MAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,wBACE,KAAC,UAAD,EAAY,IAAI,CAAC,OAAjB,uBACE,KAAC,aAAD,EACE,WAAW,CAAEA,GAAG,CAACC,MAAJ,CAAWJ,IAAX,EAAiBI,MAAjB,CAAwB,GAAxB,EAA6BA,MAA7B,CAAoCL,IAApC,CADf,EADF,EADF,cAME,KAAC,QAAD,WAAWF,IAAX,EANF,GADF,EADF,cAWE,MAAC,UAAD,yBACE,KAAC,aAAD,EACE,aAAa,CAAEV,eADjB,CAEE,eAAe,CAAEc,sBAFnB,EADF,cAKE,sCACC,KAAC,SAAD,EACC,UAAU,CAAEd,eADb,CAEC,IAAI,CAAEY,IAFP,CAGC,UAAU,CAAEV,UAHb,CAIC,EAAE,CAAES,EAJL,EADD,EALF,GAXF,GADF,CA4BD,CAtDD,CAwDA,cAAeZ,CAAAA,WAAf","sourcesContent":["import {\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewDidEnter,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport MultiForm from \"../../components/MultiForm/MultiForm\";\nimport InputControls from \"../../components/InputControls/InputControls\";\nimport Connection from \"../../mixins/Connection\";\n\ninterface Pack {\n  packageId: string;\n  promotionId: string;\n  packageName: string;\n  minutes: number;\n  standardPrice: string;\n  suvPrice: string;\n  description: string;\n  onPromotion: boolean;\n}\n\ninterface Promotion {\n  promotionId: string;\n  promotionName: string;\n  packageName: string;\n  standardPrice: string;\n  suvPrice: string;\n  isEnabled: boolean;\n}\ninterface Complex {\n  complexId: string;\n  complexName: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  telephoneNum: string;\n  startTime: Date;\n  endTime: Date;\n  cellNum: string;\n  units: string[];\n  agents: string[];\n}\ninterface Agent {\n  agentId: string;\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst CardDetails: React.FC = () => {\n\n  const [selectedSegment, setSelectedSegment] = useState<\"Update\" | \"Delete\">(\"Update\");\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { name, id ,type, back } = useParams<{\n    name: string;\n    id: string;\n    type: \"agent\" | \"complex\" | \"package\" | \"promotion\";\n    back: string;\n  }>();\n\n  const selectedSegmentHandler = (selectedValue: \"Update\" | \"Delete\") => {\n    setSelectedSegment(selectedValue);\n    if (selectedValue == \"Delete\") {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  };\n\n  const url = \"/page/\";\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton\n              defaultHref={url.concat(back).concat(\"/\").concat(type)}\n            />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <InputControls\n          selectedValue={selectedSegment}\n          onSelectedValue={selectedSegmentHandler}\n        />\n        <>\n        {<MultiForm\n          buttonName={selectedSegment}\n          type={type}\n          isDisabled={isDisabled}\n          id={id}\n        />}\n        </>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CardDetails;\n"]},"metadata":{},"sourceType":"module"}