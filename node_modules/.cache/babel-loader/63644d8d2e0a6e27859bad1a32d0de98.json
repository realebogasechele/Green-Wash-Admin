{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/NewPassword.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst NewPassword = () => {\n  _s();\n\n  const path = useHistory();\n  const [message, setMessage] = useState(\"\");\n  const [showInfo, setShowInfo] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  useIonViewWillEnter(() => {\n    document.addEventListener('backbutton', ev => {\n      setMessage(\"Are you sure ? Going back will undo all of your progress and your OTP will be liquidated\");\n      setShowInfo(true);\n    });\n  });\n  const [password, setPassword] = useState(\"\");\n  const [cPassword, setCPassword] = useState(\"\");\n\n  const updatePassword = password => setPassword(password.target.value);\n\n  const updateCPassword = cPassword => setCPassword(cPassword.target.value);\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonAlert, {\n      isOpen: showInfo,\n      onDidDismiss: () => setShowInfo(false),\n      cssClass: \"my-custom-class\",\n      header: 'Warning',\n      message: message,\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: () => {}\n      }, {\n        text: \"Yes, I'm sure\",\n        handler: () => {\n          path.replace('/signIn');\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: _jsxDEV(IonTitle, {\n          children: \"New Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonCard, {\n        children: [_jsxDEV(IonCardHeader, {\n          children: _jsxDEV(IonCardSubtitle, {\n            children: \" Please enter your new Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), _jsxDEV(IonCardContent, {\n          children: [_jsxDEV(IonItem, {\n            children: [_jsxDEV(IonLabel, {\n              position: \"floating\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this), _jsxDEV(IonInput, {\n              type: \"password\",\n              onIonChange: e => updatePassword(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), _jsxDEV(IonItem, {\n            sx: styles.input,\n            children: [_jsxDEV(IonLabel, {\n              position: \"floating\",\n              children: \" Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this), _jsxDEV(IonInput, {\n              type: \"password\",\n              onIonChange: e => updateCPassword(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), _jsxDEV(IonButton, {\n            type: \"submit\",\n            expand: \"block\",\n            shape: \"round\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPassword, \"gL6XuNGphoxYxH8Rb8FNm7xFj28=\", false, function () {\n  return [useHistory, useIonViewWillEnter];\n});\n\n_c = NewPassword;\nexport default NewPassword;\nconst styles = {\n  input: {\n    mb: 4\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/NewPassword.tsx"],"names":["IonAlert","IonButton","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonContent","IonHeader","IonInput","IonItem","IonLabel","IonPage","IonTitle","IonToolbar","useIonViewWillEnter","React","useState","useHistory","NewPassword","path","message","setMessage","showInfo","setShowInfo","showError","setShowError","showLoader","setShowLoader","document","addEventListener","ev","password","setPassword","cPassword","setCPassword","updatePassword","target","value","updateCPassword","text","role","cssClass","handler","replace","e","styles","input","mb"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAkCC,SAAlC,EAAyDC,OAAzD,EAAkEC,cAAlE,EAAkFC,aAAlF,EAAiGC,eAAjG,EAAkHC,UAAlH,EAA8HC,SAA9H,EAAyIC,QAAzI,EAAmJC,OAAnJ,EAA4JC,QAA5J,EAAsKC,OAAtK,EAA+KC,QAA/K,EAAyLC,UAAzL,EAAqMC,mBAArM,QAAgO,cAAhO;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AACpC,QAAMC,IAAI,GAAGF,UAAU,EAAvB;AAEI,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAK,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAvC;AACF,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEFF,EAAAA,mBAAmB,CAAC,MAAM;AACtBc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAyCC,EAAD,IAAa;AACjDT,MAAAA,UAAU,CAAC,0FAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD;AAIH,GALkB,CAAnB;AAOA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMmB,cAAc,GAAIJ,QAAD,IAAmBC,WAAW,CAACD,QAAQ,CAACK,MAAT,CAAgBC,KAAjB,CAArD;;AACA,QAAMC,eAAe,GAAIL,SAAD,IAAoBC,YAAY,CAACD,SAAS,CAACG,MAAV,CAAiBC,KAAlB,CAAxD;;AAEE,SACE,QAAC,OAAD;AAAA,eACI,QAAC,QAAD;AACE,MAAA,MAAM,EAAEf,QADV;AAEE,MAAA,YAAY,EAAE,MAAMC,WAAW,CAAC,KAAD,CAFjC;AAGE,MAAA,QAAQ,EAAC,iBAHX;AAIE,MAAA,MAAM,EAAE,SAJV;AAKE,MAAA,OAAO,EAAEH,OALX;AAME,MAAA,OAAO,EAAE,CACP;AACEmB,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,IAAI,EAAE,QAFR;AAGEC,QAAAA,QAAQ,EAAE,WAHZ;AAIEC,QAAAA,OAAO,EAAE,MAAM,CAEd;AANH,OADO,EASP;AACEH,QAAAA,IAAI,EAAE,eADR;AAEEG,QAAAA,OAAO,EAAE,MAAM;AACbvB,UAAAA,IAAI,CAACwB,OAAL,CAAa,SAAb;AACD;AAJH,OATO;AANX;AAAA;AAAA;AAAA;AAAA,YADJ,EAwBE,QAAC,SAAD;AAAA,gBACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA,kBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF,EA6BE,QAAC,UAAD;AAAA,gBACI,QAAC,OAAD;AAAA,mBACI,QAAC,aAAD;AAAA,oBACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,QAAC,cAAD;AAAA,qBACI,QAAC,OAAD;AAAA,uBACI,QAAC,QAAD;AAAU,cAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,UAAf;AAA0B,cAAA,WAAW,EAAGC,CAAD,IAAOT,cAAc,CAACS,CAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAEC,MAAM,CAACC,KAApB;AAAA,uBACI,QAAC,QAAD;AAAU,cAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,UAAf;AAA0B,cAAA,WAAW,EAAGF,CAAD,IAAON,eAAe,CAACM,CAAD;AAA7D;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EASI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,QAAhB;AAAyB,YAAA,MAAM,EAAC,OAAhC;AAAwC,YAAA,KAAK,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAvED;;GAAM1B,W;UACOD,U,EAObH,mB;;;KARMI,W;AAyEN,eAAeA,WAAf;AAEA,MAAM2B,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,EAAE,EAAE;AADD;AADI,CAAf","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { IonAlert, IonBackButton, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst NewPassword: React.FC = () => {\nconst path = useHistory();\n\n    const [message, setMessage] = useState(\"\");\n    const[showInfo, setShowInfo] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\nuseIonViewWillEnter(() => {\n    document.addEventListener('backbutton', (ev: any) => {\n        setMessage(\"Are you sure ? Going back will undo all of your progress and your OTP will be liquidated\");\n        setShowInfo(true);\n    });\n});\n\nconst [password, setPassword] = useState(\"\");\nconst [cPassword, setCPassword] = useState(\"\");\n\nconst updatePassword = (password: any) => setPassword(password.target.value);\nconst updateCPassword = (cPassword: any) => setCPassword(cPassword.target.value);\n\n  return (\n    <IonPage>\n        <IonAlert\n          isOpen={showInfo}\n          onDidDismiss={() => setShowInfo(false)}\n          cssClass='my-custom-class'\n          header={'Warning'}\n          message={message}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                \n              }\n            },\n            {\n              text: \"Yes, I'm sure\",\n              handler: () => {\n                path.replace('/signIn')\n              }\n            }\n          ]}\n        />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>New Password </IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          <IonCard>\n              <IonCardHeader>\n                  <IonCardSubtitle> Please enter your new Password</IonCardSubtitle>\n              </IonCardHeader>\n              <IonCardContent>\n                  <IonItem>\n                      <IonLabel position=\"floating\">Password</IonLabel>\n                      <IonInput type=\"password\" onIonChange={(e) => updatePassword(e)}/>\n                  </IonItem>\n                  <IonItem sx={styles.input}>\n                      <IonLabel position=\"floating\"> Confirm Password</IonLabel>\n                      <IonInput type=\"password\" onIonChange={(e) => updateCPassword(e)}/>\n                  </IonItem>\n                  <IonButton type='submit' expand='block' shape='round'>Submit</IonButton>\n              </IonCardContent>\n          </IonCard>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default NewPassword;\n\nconst styles = {\n    input: {\n        mb: 4\n    },\n};"]},"metadata":{},"sourceType":"module"}