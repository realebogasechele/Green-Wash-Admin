{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/components/Forms/AgentForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonAlert, IonButton, IonCol, IonGrid, IonInput, IonItem, IonLabel, IonLoading, IonRow, useIonViewDidEnter } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validId, validName, validPassword, validPostalCode } from \"../Regex/Regex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AgentForm = props => {\n  _s();\n\n  useIonViewDidEnter(() => {\n    if (props.name === \"Update\") {\n      setShowLoader(true);\n      getAgent();\n    }\n  });\n  const path = useHistory();\n  const [agent, setAgent] = useState({\n    agentId: \"\",\n    complexName: \"\",\n    contractId: \"\",\n    name: \"\",\n    surname: \"\",\n    id: \"\",\n    cellNum: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    password: \"\"\n  });\n\n  const getAgent = () => {\n    var url = \"agent/get/\".concat(props.id);\n    Connection.processGetRequest({}, url, response => {\n      mapAgent(response);\n    });\n  };\n\n  const getComplexes = () => {\n    let url = \"complex/get/all/names\";\n    Connection.processGetRequest({}, url, response => mapComplexResponse(response));\n  };\n\n  const mapComplexResponse = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data.data);\n      setShowError(true);\n    } else {\n      setComplexes(response.data.data);\n    }\n  };\n\n  const mapAgent = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setAgent(response.data.data);\n      console.log(response);\n      setComplexName(agent.complexName);\n      setName(agent.name);\n      setSurname(agent.surname);\n      setId(agent.id);\n      setCellNum(agent.cellNum);\n      setStreet1(agent.street1);\n      setStreet2(agent.street2);\n      setCity(agent.city);\n      setProvince(agent.province);\n      setPostalCode(agent.postalCode);\n    }\n  };\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [complexes, setComplexes] = useState([]);\n  const [enteredComplexName, setComplexName] = useState(agent.complexName);\n  const [enteredName, setName] = useState(agent.name);\n  const [enteredSurname, setSurname] = useState(agent.surname);\n  const [enteredId, setId] = useState(agent.id);\n  const [enteredCellNum, setCellNum] = useState(agent.cellNum);\n  const [enteredStreet1, setStreet1] = useState(agent.street1);\n  const [enteredStreet2, setStreet2] = useState(agent.street2);\n  const [enteredCity, setCity] = useState(agent.city);\n  const [enteredProvince, setProvince] = useState(agent.province);\n  const [enteredPostalCode, setPostalCode] = useState(agent.postalCode);\n  const [enteredPassword, setPassword] = useState(\"\");\n  const [enteredConfirm, setConfirmPassword] = useState(\"\");\n\n  const updateComplexName = complexName => setComplexName(complexName);\n\n  const updateName = name => setName(name);\n\n  const updateSurname = surname => setSurname(surname);\n\n  const updateId = id => setId(id);\n\n  const updateCellNum = cellNum => setCellNum(cellNum);\n\n  const updateStreet1 = street1 => setStreet1(street1);\n\n  const updateStreet2 = street2 => setStreet2(street2);\n\n  const updateCity = city => setCity(city);\n\n  const updateProvince = province => setProvince(province);\n\n  const updatePostalCode = postalCode => setPostalCode(postalCode);\n\n  const updatePassword = password => setPassword(password);\n\n  const updateConfirm = cPassword => setConfirmPassword(cPassword);\n\n  const buttonHandler = () => {\n    if (props.name === \"Add\") {\n      validateForm();\n    } else if (props.name === \"Delete\") {\n      let url = \"agent/remove/\".concat(agent.agentId);\n      console.log(\"deleted\");\n    } else {\n      setShowLoader(true);\n      validateForm();\n    }\n  };\n\n  const mapResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      if (props.name === \"Update\") {\n        setShowLoader(false);\n        setSuccessMessage(\"Agent Details Updated!\");\n        setShowSuccess(true);\n      } else {\n        setShowLoader(false);\n        setSuccessMessage(\"Agent Details Captured!\");\n        setShowSuccess(true);\n      }\n    }\n  };\n\n  const validateForm = () => {\n    if (enteredName === \"\" || enteredSurname === \"\" || enteredComplexName === \"\" || enteredId === \"\" || enteredCellNum === \"\" || enteredStreet1 === \"\" || enteredStreet2 === \"\" || enteredCity === \"\" || enteredProvince === \"\" || enteredPostalCode === \"\" || enteredPassword === \"\") {\n      setShowLoader(false);\n      setErrorMessage(\"Fields must not be empty.\");\n      setShowError(true);\n    } else if (props.name === \"Add\") {\n      if (enteredPassword !== enteredConfirm) {\n        setShowLoader(false);\n        setErrorMessage(\"Passwords do not match. Please ensure they are entered correctly!\");\n        setShowError(true);\n      } else {\n        if (!validName.test(enteredName)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Name.\");\n          setShowError(true);\n        } else if (!validName.test(enteredSurname)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Surname.\");\n          setShowError(true);\n        } else if (!validName.test(enteredComplexName)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Complex Name.\");\n          setShowError(true);\n        } else if (!validId.test(enteredId)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Id.\");\n          setShowError(true);\n        } else if (!validCellNum.test(enteredCellNum)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Cell Number\");\n          setShowError(true);\n        } else if (!validName.test(enteredCity)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid City\");\n          setShowError(true);\n        } else if (!validName.test(enteredProvince)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Province.\");\n          setShowError(true);\n        } else if (!validPostalCode.test(enteredPostalCode)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Postal Code.\");\n          setShowError(true);\n        } else if (!validPassword.test(enteredPassword)) {\n          setShowLoader(false);\n          setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n          setShowError(true);\n        } else {\n          console.log(\"add\");\n          let url = \"agent/add\";\n          var request = {\n            complexName: enteredComplexName,\n            contractId: \"\",\n            name: enteredName,\n            surname: enteredSurname,\n            id: enteredId,\n            cellNum: enteredCellNum,\n            street1: enteredStreet1,\n            street2: enteredStreet2,\n            city: enteredCity,\n            province: enteredProvince,\n            postalCode: enteredPostalCode,\n            password: enteredPassword\n          };\n          Connection.processPostRequest(request, url, response => {\n            mapResponse(response);\n          });\n        }\n      }\n    } else {\n      if (!validName.test(enteredName)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Name.\");\n        setShowError(true);\n      } else if (!validName.test(enteredSurname)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Surname.\");\n        setShowError(true);\n      } else if (!validName.test(enteredComplexName)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Complex Name.\");\n        setShowError(true);\n      } else if (!validId.test(enteredId)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Id.\");\n        setShowError(true);\n      } else if (!validCellNum.test(enteredCellNum)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Cell Number\");\n        setShowError(true);\n      } else if (!validName.test(enteredCity)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid City\");\n        setShowError(true);\n      } else if (!validName.test(enteredProvince)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Province.\");\n        setShowError(true);\n      } else if (!validPostalCode.test(enteredPostalCode)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Postal Code.\");\n        setShowError(true);\n      } else if (!validPassword.test(enteredPassword)) {\n        setShowLoader(false);\n        setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n        setShowError(true);\n      } else {\n        if (props.name === \"Update\") {\n          let url = \"agent/update\";\n          var payload = {\n            agentId: agent.agentId,\n            complexName: enteredComplexName,\n            contractId: agent.contractId,\n            name: enteredName,\n            surname: enteredSurname,\n            id: enteredId,\n            cellNum: enteredCellNum,\n            street1: enteredStreet1,\n            street2: enteredStreet2,\n            city: enteredCity,\n            province: enteredProvince,\n            postalCode: enteredPostalCode,\n            password: enteredPassword\n          };\n          Connection.processPostRequest(payload, url, response => {\n            mapResponse(response);\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonGrid, {\n    children: [/*#__PURE__*/_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      subHeader: \"Something went wrong.\",\n      message: errorMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n      isOpen: showSuccess,\n      onDidDismiss: () => path.push(\"/page/Agent/agent\"),\n      header: \"Success\",\n      subHeader: successMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredName,\n            onIonChange: e => updateName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredSurname,\n            onIonChange: e => updateSurname(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredId,\n            onIonChange: e => updateId(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Cell Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredCellNum,\n            onIonChange: e => updateCellNum(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Street 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredStreet1,\n            onIonChange: e => updateStreet1(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Street 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredStreet2,\n            onIonChange: e => updateStreet2(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredCity,\n            onIonChange: e => updateCity(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: [/*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Province\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredProvince,\n            onIonChange: e => updateProvince(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredPostalCode,\n            onIonChange: e => updatePostalCode(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Complex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredComplexName,\n            onIonChange: e => updateComplexName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            disabled: props.isDisabled,\n            value: enteredPassword,\n            onIonChange: e => updatePassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \" Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            disabled: props.name === \"Add\" ? props.isDisabled : true,\n            value: enteredConfirm,\n            onIonChange: e => updateConfirm(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonButton, {\n          shape: \"round\",\n          type: \"submit\",\n          expand: \"block\",\n          onClick: buttonHandler,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AgentForm, \"DlyvyDTQDPHPIQTlCSp/jF+mezc=\", false, function () {\n  return [useIonViewDidEnter, useHistory];\n});\n\n_c = AgentForm;\nexport default AgentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgentForm\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/components/Forms/AgentForm.tsx"],"names":["IonAlert","IonButton","IonCol","IonGrid","IonInput","IonItem","IonLabel","IonLoading","IonRow","useIonViewDidEnter","React","useState","useHistory","Connection","validCellNum","validId","validName","validPassword","validPostalCode","AgentForm","props","name","setShowLoader","getAgent","path","agent","setAgent","agentId","complexName","contractId","surname","id","cellNum","street1","street2","city","province","postalCode","password","url","concat","processGetRequest","response","mapAgent","getComplexes","mapComplexResponse","type","setErrorMessage","data","setShowError","setComplexes","console","log","setComplexName","setName","setSurname","setId","setCellNum","setStreet1","setStreet2","setCity","setProvince","setPostalCode","showLoader","showError","errorMessage","successMessage","setSuccessMessage","showSuccess","setShowSuccess","complexes","enteredComplexName","enteredName","enteredSurname","enteredId","enteredCellNum","enteredStreet1","enteredStreet2","enteredCity","enteredProvince","enteredPostalCode","enteredPassword","setPassword","enteredConfirm","setConfirmPassword","updateComplexName","updateName","updateSurname","updateId","updateCellNum","updateStreet1","updateStreet2","updateCity","updateProvince","updatePostalCode","updatePassword","updateConfirm","cPassword","buttonHandler","validateForm","mapResponse","test","request","processPostRequest","payload","push","isDisabled","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonAlert,\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonRow,\n  useIonViewDidEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\nimport {\n  validCellNum,\n  validId,\n  validName,\n  validPassword,\n  validPostalCode,\n} from \"../Regex/Regex\";\n\ninterface Agent {\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst AgentForm: React.FC<{ name: string; isDisabled: boolean; id: string }> = (\n  props\n) => {\n  useIonViewDidEnter(() => {\n    if (props.name === \"Update\") {\n      setShowLoader(true);\n      getAgent();\n    }\n  });\n\n  const path = useHistory();\n  const [agent, setAgent] = useState({\n    agentId: \"\",\n    complexName: \"\",\n    contractId: \"\",\n    name: \"\",\n    surname: \"\",\n    id: \"\",\n    cellNum: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    password: \"\",\n  });\n\n  const getAgent = () => {\n    var url = \"agent/get/\".concat(props.id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapAgent(response);\n    });\n  };\n\n  const getComplexes = () => {\n    let url = \"complex/get/all/names\";\n    Connection.processGetRequest({}, url, (response: any) =>\n      mapComplexResponse(response)\n    );\n  };\n\n  const mapComplexResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data.data);\n      setShowError(true);\n    } else {\n      setComplexes(response.data.data);\n    }\n  };\n\n  const mapAgent = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setAgent(response.data.data);\n      console.log(response);\n      setComplexName(agent.complexName);\n      setName(agent.name);\n      setSurname(agent.surname);\n      setId(agent.id);\n      setCellNum(agent.cellNum);\n      setStreet1(agent.street1);\n      setStreet2(agent.street2);\n      setCity(agent.city);\n      setProvince(agent.province);\n      setPostalCode(agent.postalCode);\n    }\n  };\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [complexes, setComplexes] = useState([]);\n\n  const [enteredComplexName, setComplexName] = useState(agent.complexName);\n  const [enteredName, setName] = useState(agent.name);\n  const [enteredSurname, setSurname] = useState(agent.surname);\n  const [enteredId, setId] = useState(agent.id);\n  const [enteredCellNum, setCellNum] = useState(agent.cellNum);\n  const [enteredStreet1, setStreet1] = useState(agent.street1);\n  const [enteredStreet2, setStreet2] = useState(agent.street2);\n  const [enteredCity, setCity] = useState(agent.city);\n  const [enteredProvince, setProvince] = useState(agent.province);\n  const [enteredPostalCode, setPostalCode] = useState(agent.postalCode);\n  const [enteredPassword, setPassword] = useState(\"\");\n  const [enteredConfirm, setConfirmPassword] = useState(\"\");\n\n  const updateComplexName = (complexName: any) => setComplexName(complexName);\n  const updateName = (name: any) => setName(name);\n  const updateSurname = (surname: any) => setSurname(surname);\n  const updateId = (id: any) => setId(id);\n  const updateCellNum = (cellNum: any) => setCellNum(cellNum);\n  const updateStreet1 = (street1: any) => setStreet1(street1);\n  const updateStreet2 = (street2: any) => setStreet2(street2);\n  const updateCity = (city: any) => setCity(city);\n  const updateProvince = (province: any) => setProvince(province);\n  const updatePostalCode = (postalCode: any) => setPostalCode(postalCode);\n  const updatePassword = (password: any) => setPassword(password);\n  const updateConfirm = (cPassword: any) => setConfirmPassword(cPassword);\n\n  const buttonHandler = () => {\n    if (props.name === \"Add\") {\n      validateForm();\n    } else if (props.name === \"Delete\") {\n      let url = \"agent/remove/\".concat(agent.agentId);\n      console.log(\"deleted\");\n    } else {\n      setShowLoader(true);\n      validateForm();\n    }\n  };\n\n  const mapResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      if (props.name === \"Update\") {\n        setShowLoader(false);\n        setSuccessMessage(\"Agent Details Updated!\");\n        setShowSuccess(true);\n      } else {\n        setShowLoader(false);\n        setSuccessMessage(\"Agent Details Captured!\");\n        setShowSuccess(true);\n      }\n    }\n  };\n\n  const validateForm = () => {\n    if (\n      enteredName === \"\" ||\n      enteredSurname === \"\" ||\n      enteredComplexName === \"\" ||\n      enteredId === \"\" ||\n      enteredCellNum === \"\" ||\n      enteredStreet1 === \"\" ||\n      enteredStreet2 === \"\" ||\n      enteredCity === \"\" ||\n      enteredProvince === \"\" ||\n      enteredPostalCode === \"\" ||\n      enteredPassword === \"\"\n    ) {\n      setShowLoader(false);\n      setErrorMessage(\"Fields must not be empty.\");\n      setShowError(true);\n    } else if (props.name === \"Add\") {\n      if (enteredPassword !== enteredConfirm) {\n        setShowLoader(false);\n        setErrorMessage(\n          \"Passwords do not match. Please ensure they are entered correctly!\"\n        );\n        setShowError(true);\n      }else{\n        if (!validName.test(enteredName)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Name.\");\n          setShowError(true);\n        } else if (!validName.test(enteredSurname)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Surname.\");\n          setShowError(true);\n        } else if (!validName.test(enteredComplexName)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Complex Name.\");\n          setShowError(true);\n        } else if (!validId.test(enteredId)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Id.\");\n          setShowError(true);\n        } else if (!validCellNum.test(enteredCellNum)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Cell Number\");\n          setShowError(true);\n        } else if (!validName.test(enteredCity)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid City\");\n          setShowError(true);\n        } else if (!validName.test(enteredProvince)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Province.\");\n          setShowError(true);\n        } else if (!validPostalCode.test(enteredPostalCode)) {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Postal Code.\");\n          setShowError(true);\n        } else if (!validPassword.test(enteredPassword)) {\n          setShowLoader(false);\n          setErrorMessage(\n            \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n          );\n          setShowError(true);\n        }else {\n          console.log(\"add\");\n          let url = \"agent/add\";\n          var request = {\n            complexName: enteredComplexName,\n            contractId: \"\",\n            name: enteredName,\n            surname: enteredSurname,\n            id: enteredId,\n            cellNum: enteredCellNum,\n            street1: enteredStreet1,\n            street2: enteredStreet2,\n            city: enteredCity,\n            province: enteredProvince,\n            postalCode: enteredPostalCode,\n            password: enteredPassword,\n          };\n          Connection.processPostRequest(request, url, (response: any) => {\n            mapResponse(response);\n          });\n        }\n      }\n    } else {\n      if (!validName.test(enteredName)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Name.\");\n        setShowError(true);\n      } else if (!validName.test(enteredSurname)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Surname.\");\n        setShowError(true);\n      } else if (!validName.test(enteredComplexName)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Complex Name.\");\n        setShowError(true);\n      } else if (!validId.test(enteredId)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Id.\");\n        setShowError(true);\n      } else if (!validCellNum.test(enteredCellNum)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Cell Number\");\n        setShowError(true);\n      } else if (!validName.test(enteredCity)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid City\");\n        setShowError(true);\n      } else if (!validName.test(enteredProvince)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Province.\");\n        setShowError(true);\n      } else if (!validPostalCode.test(enteredPostalCode)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid Postal Code.\");\n        setShowError(true);\n      } else if (!validPassword.test(enteredPassword)) {\n        setShowLoader(false);\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        if (props.name === \"Update\") {\n          let url = \"agent/update\";\n          var payload = {\n            agentId: agent.agentId,\n            complexName: enteredComplexName,\n            contractId: agent.contractId,\n            name: enteredName,\n            surname: enteredSurname,\n            id: enteredId,\n            cellNum: enteredCellNum,\n            street1: enteredStreet1,\n            street2: enteredStreet2,\n            city: enteredCity,\n            province: enteredProvince,\n            postalCode: enteredPostalCode,\n            password: enteredPassword,\n          };\n          Connection.processPostRequest(payload, url, (response: any) => {\n            mapResponse(response);\n          });\n        } \n      }\n    }\n  };\n\n  return (\n    <IonGrid>\n      <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n\n      <IonAlert\n        isOpen={showSuccess}\n        onDidDismiss={() => path.push(\"/page/Agent/agent\")}\n        header={\"Success\"}\n        subHeader={successMessage}\n        buttons={[\"OK\"]}\n      />\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Name</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredName}\n              onIonChange={(e) => updateName(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Surname</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredSurname}\n              onIonChange={(e) => updateSurname(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">ID</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredId}\n              onIonChange={(e) => updateId(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Cell Number</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredCellNum}\n              onIonChange={(e) => updateCellNum(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Street 1</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredStreet1}\n              onIonChange={(e) => updateStreet1(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Street 2</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredStreet2}\n              onIonChange={(e) => updateStreet2(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">City</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredCity}\n              onIonChange={(e) => updateCity(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Province</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredProvince}\n              onIonChange={(e) => updateProvince(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Postal code</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredPostalCode}\n              onIonChange={(e) => updatePostalCode(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Complex</IonLabel>\n            <IonInput\n              disabled={props.isDisabled}\n              value={enteredComplexName}\n              onIonChange={(e) => updateComplexName(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Password</IonLabel>\n            <IonInput\n              type=\"password\"\n              disabled={props.isDisabled}\n              value={enteredPassword}\n              onIonChange={(e) => updatePassword(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\"> Confirm Password</IonLabel>\n            <IonInput\n              type=\"password\"\n              disabled={props.name === \"Add\" ? props.isDisabled : true}\n              value={enteredConfirm}\n              onIonChange={(e) => updateConfirm(e.detail.value)}\n            />\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonButton\n            shape=\"round\"\n            type=\"submit\"\n            expand=\"block\"\n            onClick={buttonHandler}\n          >\n            {props.name}\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default AgentForm;\n"]},"metadata":{},"sourceType":"module"}