{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/SignIn/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonAlert, IonButton, IonCard, IonCol, IonContent, IonGrid, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validPassword } from \"../../components/Regex/Regex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const path = useHistory();\n  let valid = false;\n  let load = false;\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cellNum, setCellNum] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateCellNum = cellNum => {\n    setCellNum(cellNum);\n  };\n\n  const updatePassword = password => {\n    setPassword(password);\n  };\n\n  const buttonHandler = () => {\n    validateForm();\n\n    if (valid === true) {\n      load = true;\n      let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n      Connection.processGetRequest({}, url, response => {\n        mapResponse(response);\n      });\n    }\n  };\n\n  const validateForm = () => {\n    if (cellNum === \"\" || password === \"\") {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Fields cannot be empty.\");\n      setShowError(true);\n    } else if (!validCellNum.test(cellNum)) {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Invalid Cell Number.\");\n      setShowError(true);\n    } else if (!validPassword.test(password)) {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n      setShowError(true);\n    } else {\n      valid = true;\n    }\n  };\n\n  const mapResponse = response => {\n    setShowLoader(false);\n\n    if (response.type === \"error\") {\n      load = false;\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setPassword(\"\");\n    } else {\n      load = false;\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonImg, {\n        src: TGWLogo,\n        alt: \"Logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonLoading, {\n          cssClass: \"my-custom-class\",\n          showBackdrop: true,\n          isOpen: load,\n          message: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n          isOpen: showError,\n          onDidDismiss: () => setShowError(false),\n          header: \"Error\",\n          subHeader: \"Something went wrong.\",\n          message: errorMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n          isOpen: showSuccess,\n          onDidDismiss: () => path.push(\"/dashboard\"),\n          header: \"Success\",\n          subHeader: successMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCard, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: /*#__PURE__*/_jsxDEV(IonCol, {\n                offset: \"4\",\n                children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n                  children: /*#__PURE__*/_jsxDEV(IonTitle, {\n                    size: \"large\",\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: /*#__PURE__*/_jsxDEV(IonCol, {\n                children: /*#__PURE__*/_jsxDEV(IonItem, {\n                  children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                    position: \"floating\",\n                    children: \"Cell Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                    value: cellNum,\n                    onIonChange: e => updateCellNum(e.detail.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: /*#__PURE__*/_jsxDEV(IonCol, {\n                children: /*#__PURE__*/_jsxDEV(IonItem, {\n                  children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                    position: \"floating\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                    type: \"password\",\n                    value: password,\n                    onIonChange: e => updatePassword(e.detail.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: /*#__PURE__*/_jsxDEV(IonCol, {\n                children: /*#__PURE__*/_jsxDEV(IonButton, {\n                  shape: \"round\",\n                  type: \"submit\",\n                  expand: \"block\",\n                  onClick: buttonHandler,\n                  children: \"SignIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: /*#__PURE__*/_jsxDEV(IonCol, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/forgot\",\n                    children: \"Forgot password ?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: /*#__PURE__*/_jsxDEV(IonCol, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/signUp\",\n                    children: \"Sign Up.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"iGUoDc8x889MtyUENyzlLX7r3Ec=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/SignIn/SignIn.tsx"],"names":["IonAlert","IonButton","IonCard","IonCol","IonContent","IonGrid","IonImg","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonTitle","IonToolbar","React","useState","useHistory","TGWLogo","Connection","validCellNum","validPassword","SignIn","path","valid","load","showLoader","setShowLoader","showError","setShowError","showSuccess","setShowSuccess","successMessage","setSuccessMessage","errorMessage","setErrorMessage","cellNum","setCellNum","password","setPassword","updateCellNum","updatePassword","buttonHandler","validateForm","url","concat","processGetRequest","response","mapResponse","test","type","data","push","e","detail","value"],"mappings":";;;AAAA,SACEA,QADF,EAGEC,SAHF,EAKEC,OALF,EAMEC,MANF,EAOEC,UAPF,EASEC,OATF,EAWEC,MAXF,EAYEC,QAZF,EAaEC,OAbF,EAcEC,QAdF,EAeEC,UAfF,EAgBEC,OAhBF,EAiBEC,MAjBF,EAkBEC,QAlBF,EAoBEC,UApBF,QAqBO,cArBP;AAsBA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SACEC,YADF,EAEEC,aAFF,QAGO,8BAHP;;;AAKA,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,IAAI,GAAGN,UAAU,EAAvB;AAEA,MAAIO,KAAc,GAAG,KAArB;AACA,MAAIC,IAAa,GAAG,KAApB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMwB,aAAa,GAAIJ,OAAD,IAAkB;AACtCC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAFD;;AAGA,QAAMK,cAAc,GAAIH,QAAD,IAAmB;AACxCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAG,MAAM;AAC1BC,IAAAA,YAAY;;AACZ,QAAInB,KAAK,KAAK,IAAd,EAAoB;AAClBC,MAAAA,IAAI,GAAG,IAAP;AACA,UAAImB,GAAG,GAAG,QAAQC,MAAR,CAAe,GAAf,EAAoBT,OAApB,EAA6B,GAA7B,EAAkCE,QAAlC,CAAV;AACAnB,MAAAA,UAAU,CAAC2B,iBAAX,CAA6B,EAA7B,EAAiCF,GAAjC,EAAuCG,QAAD,IAAmB;AACvDC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD,OAFD;AAGD;AACF,GATD;;AAWA,QAAMJ,YAAY,GAAG,MAAM;AACzB,QAAIP,OAAO,KAAK,EAAZ,IAAkBE,QAAQ,KAAK,EAAnC,EAAuC;AACrCX,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,MAAAA,KAAK,GAAG,KAAR;AACAW,MAAAA,eAAe,CAAC,yBAAD,CAAf;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KALD,MAKO,IAAI,CAACT,YAAY,CAAC6B,IAAb,CAAkBb,OAAlB,CAAL,EAAiC;AACpCT,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,MAAAA,KAAK,GAAG,KAAR;AACAW,MAAAA,eAAe,CAAC,sBAAD,CAAf;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KALI,MAKE,IAAI,CAACR,aAAa,CAAC4B,IAAd,CAAmBX,QAAnB,CAAL,EAAmC;AACxCX,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,MAAAA,KAAK,GAAG,KAAR;AACAW,MAAAA,eAAe,CACb,oGADa,CAAf;AAGAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAPM,MAOA;AACLL,MAAAA,KAAK,GAAG,IAAR;AACD;AACJ,GArBD;;AAuBA,QAAMwB,WAAW,GAAID,QAAD,IAAmB;AACrCpB,IAAAA,aAAa,CAAC,KAAD,CAAb;;AACA,QAAIoB,QAAQ,CAACG,IAAT,KAAkB,OAAtB,EAA+B;AAC7BzB,MAAAA,IAAI,GAAG,KAAP;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAQ,MAAAA,eAAe,CAACY,QAAQ,CAACI,IAAV,CAAf;AACAtB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAPD,MAOO;AACLd,MAAAA,IAAI,GAAG,KAAP;AACAQ,MAAAA,iBAAiB,CAAC,uBAAD,CAAjB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAdD;;AAgBA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEb,OAAb;AAAsB,QAAA,GAAG,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,QAAQ,EAAC,iBADX;AAEE,UAAA,YAAY,MAFd;AAGE,UAAA,MAAM,EAAEO,IAHV;AAIE,UAAA,OAAO,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,QAAD;AACE,UAAA,MAAM,EAAEG,SADV;AAEE,UAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,KAAD,CAFlC;AAGE,UAAA,MAAM,EAAE,OAHV;AAIE,UAAA,SAAS,EAAE,uBAJb;AAKE,UAAA,OAAO,EAAEK,YALX;AAME,UAAA,OAAO,EAAE,CAAC,IAAD;AANX;AAAA;AAAA;AAAA;AAAA,gBARF,eAiBE,QAAC,QAAD;AACE,UAAA,MAAM,EAAEJ,WADV;AAEE,UAAA,YAAY,EAAE,MAAMP,IAAI,CAAC6B,IAAL,CAAU,YAAV,CAFtB;AAGE,UAAA,MAAM,EAAE,SAHV;AAIE,UAAA,SAAS,EAAEpB,cAJb;AAKE,UAAA,OAAO,EAAE,CAAC,IAAD;AALX;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAwBE,QAAC,OAAD;AAAA,iCACA,QAAC,OAAD;AAAA,oCACE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,MAAM,EAAC,GAAf;AAAA,uCACE,QAAC,UAAD;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,IAAI,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAA,uCACE,QAAC,OAAD;AAAA,0CACE,QAAC,QAAD;AAAU,oBAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,QAAD;AACE,oBAAA,KAAK,EAAEI,OADT;AAEE,oBAAA,WAAW,EAAGiB,CAAD,IAAOb,aAAa,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAFnC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF,eAmBE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAA,uCACE,QAAC,OAAD;AAAA,0CACE,QAAC,QAAD;AAAU,oBAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,QAAD;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,KAAK,EAAEjB,QAFT;AAGE,oBAAA,WAAW,EAAGe,CAAD,IAAOZ,cAAc,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAHpC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnBF,eA+BE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAC,OADR;AAEE,kBAAA,IAAI,EAAC,QAFP;AAGE,kBAAA,MAAM,EAAC,OAHT;AAIE,kBAAA,OAAO,EAAEb,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA/BF,eA2CE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAA,uCACE;AAAA,yCACE;AAAG,oBAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA3CF,eAkDE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAA,uCACE;AAAA,sEAC0B;AAAG,oBAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD,CApKD;;GAAMpB,M;UACSL,U;;;KADTK,M;AAsKN,eAAeA,MAAf","sourcesContent":["import {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCol,\n  IonContent,\n  IonFooter,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport {\n  validCellNum,\n  validPassword,\n} from \"../../components/Regex/Regex\";\n\nconst SignIn: React.FC = () => {\n  const path = useHistory();\n\n  let valid: boolean = false;\n  let load: boolean = false;\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [cellNum, setCellNum] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateCellNum = (cellNum: any) => {\n    setCellNum(cellNum);\n  };\n  const updatePassword = (password: any) => {\n    setPassword(password);\n  };\n\n  const buttonHandler = () => {\n    validateForm();\n    if (valid === true) {\n      load = true;\n      let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n      Connection.processGetRequest({}, url, (response: any) => {\n        mapResponse(response);\n      });\n    }\n  };\n\n  const validateForm = () => {\n    if (cellNum === \"\" || password === \"\") {\n      setShowLoader(false);\n      valid = false;\n      setErrorMessage(\"Fields cannot be empty.\");\n      setShowError(true);\n    } else if (!validCellNum.test(cellNum)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        valid = true;\n      }\n  };\n\n  const mapResponse = (response: any) => {\n    setShowLoader(false);\n    if (response.type === \"error\") {\n      load = false;\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setPassword(\"\");\n    } else {\n      load = false;\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonImg src={TGWLogo} alt={\"Logo.png\"} />\n        <IonToolbar>\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            showBackdrop\n            isOpen={load}\n            message={\"Please wait...\"}\n          />\n\n          <IonAlert\n            isOpen={showError}\n            onDidDismiss={() => setShowError(false)}\n            header={\"Error\"}\n            subHeader={\"Something went wrong.\"}\n            message={errorMessage}\n            buttons={[\"OK\"]}\n          />\n\n          <IonAlert\n            isOpen={showSuccess}\n            onDidDismiss={() => path.push(\"/dashboard\")}\n            header={\"Success\"}\n            subHeader={successMessage}\n            buttons={[\"OK\"]}\n          />\n          <IonCard>\n          <IonGrid>\n            <IonRow>\n              <IonCol offset=\"4\">\n                <IonToolbar>\n                  <IonTitle size=\"large\">Sign In</IonTitle>\n                </IonToolbar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Cell Number</IonLabel>\n                  <IonInput\n                    value={cellNum}\n                    onIonChange={(e) => updateCellNum(e.detail.value)}\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Password</IonLabel>\n                  <IonInput\n                    type=\"password\"\n                    value={password}\n                    onIonChange={(e) => updatePassword(e.detail.value)}\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  shape=\"round\"\n                  type=\"submit\"\n                  expand=\"block\"\n                  onClick={buttonHandler}\n                >\n                  SignIn\n                </IonButton>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <p>\n                  <a href=\"/forgot\">Forgot password ?</a>\n                </p>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <p>\n                  Don't have an account ? <a href=\"/signUp\">Sign Up.</a>\n                </p>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n          </IonCard>\n        </IonToolbar>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}