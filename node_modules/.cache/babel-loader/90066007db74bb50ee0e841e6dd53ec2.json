{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignIn/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonAlert, IonButton, IonCol, IonContent, IonFooter, IonGrid, IonImg, IonInput, IonItem, IonLabel, IonPage, IonRow, IonTitle, IonToast, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar message = '';\n\nconst mapResponse = response => {};\n\nconst SignIn = () => {\n  _s();\n\n  const path = useHistory();\n  const [showToast, setShowToast] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [cellNum, setCellNum] = useState('');\n  const [password, setPassword] = useState('');\n\n  const updateCellNum = cellNum => {\n    setCellNum(cellNum);\n  };\n\n  const updatePassword = password => {\n    setPassword(password);\n  };\n\n  const buttonHandler = () => {\n    validateForm();\n\n    if (isFormValid) {\n      let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n      Connection.processGetRequest({}, url, response => {\n        mapResponse(response);\n      });\n    }\n  };\n\n  const validateForm = () => {\n    if (cellNum === '' && password === '') {\n      setIsFormValid(false);\n      setErrorMessage(\"Fields cannot be empty!\");\n      setShowError(true);\n    } else {\n      setIsFormValid(true);\n    }\n  };\n\n  const mapResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum('');\n      setPassword('');\n    } else {\n      setShowLoader(false);\n      setShowToast(true);\n      path.push(\"/dashboard\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonImg, {\n        src: TGWLogo,\n        alt: \"Logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonAlert, {\n          isOpen: showError,\n          onDidDismiss: () => setShowError(false),\n          header: 'Error',\n          message: errorMessage,\n          buttons: ['OK']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: [/*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(IonTitle, {\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Cell Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  value: cellNum,\n                  onIonChange: e => updateCellNum(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  type: \"password\",\n                  value: password,\n                  onIonChange: e => updatePassword(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonButton, {\n                shape: \"round\",\n                type: \"submit\",\n                expand: \"block\",\n                onClick: buttonHandler,\n                children: \"SignIn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/signUp\",\n                  children: \"Sign Up.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonFooter, {\n      children: /*#__PURE__*/_jsxDEV(IonToast, {\n        isOpen: showToast,\n        onDidDismiss: () => setShowToast(false),\n        message: message,\n        duration: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"1Y63F4H9Z9TFbmk+m6kTuLQpl/A=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignIn/SignIn.tsx"],"names":["IonAlert","IonButton","IonCol","IonContent","IonFooter","IonGrid","IonImg","IonInput","IonItem","IonLabel","IonPage","IonRow","IonTitle","IonToast","IonToolbar","React","useState","useHistory","TGWLogo","Connection","message","mapResponse","response","SignIn","path","showToast","setShowToast","showLoader","setShowLoader","showError","setShowError","errorMessage","setErrorMessage","isFormValid","setIsFormValid","cellNum","setCellNum","password","setPassword","updateCellNum","updatePassword","buttonHandler","validateForm","url","concat","processGetRequest","type","data","push","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCol,\n  IonContent,\n  IonFooter,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\n\n\nvar message = '';\n\n\nconst mapResponse = (response: any) => {\n\n};\n\n\nconst SignIn: React.FC = () => {\n  const path = useHistory();\n\n  const [showToast, setShowToast] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const [cellNum, setCellNum] = useState('');\n  const [password, setPassword] = useState('');\n\n  const updateCellNum = (cellNum: any) => {setCellNum(cellNum)};\n  const updatePassword = (password: any) => {setPassword(password)};\n\n  const buttonHandler = () => {\n    validateForm();\n    if(isFormValid){\n    let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapResponse(response);\n    })\n  }\n  };\n\n  const validateForm = () => {\n    if (cellNum === '' && password === ''){\n      setIsFormValid(false);\n      setErrorMessage(\"Fields cannot be empty!\");\n      setShowError(true);\n  }\n  else{\n    setIsFormValid(true);\n  }\n}\n\n  const mapResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum('');\n      setPassword('');\n    } else {\n      setShowLoader(false);\n      setShowToast(true);\n      path.push(\"/dashboard\");\n    }\n  };\n  \n  return (\n    <IonPage>\n      <IonContent>\n          <IonImg src={TGWLogo} alt={\"Logo.png\"}/>\n        <IonToolbar>\n        <IonAlert\n          isOpen={showError}\n          onDidDismiss={() => setShowError(false)}\n          header={'Error'}\n          message={errorMessage}\n          buttons={['OK']}\n        />\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <IonToolbar>\n                  <IonTitle>Sign In</IonTitle>\n                </IonToolbar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Cell Number</IonLabel>\n                  <IonInput value={cellNum} onIonChange={e => updateCellNum(e.detail.value)}></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Password</IonLabel>\n                  <IonInput type=\"password\" value={password} onIonChange={e => updatePassword(e.detail.value)}></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton shape=\"round\" type=\"submit\" expand=\"block\" onClick={buttonHandler}>\n                  SignIn\n                </IonButton>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <p>\n                  Don't have an account ? <a href=\"/signUp\">Sign Up.</a>\n                </p>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n      </IonContent>\n      <IonFooter>\n       <IonToast\n       isOpen={showToast}\n       onDidDismiss={() => setShowToast(false)}\n       message={message}\n       duration={200}\n     />\n      </IonFooter>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}