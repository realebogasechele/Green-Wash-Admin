{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Recover Account/RecoverOtp.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { Storage } from \"@capacitor/storage\";\nimport { IonAlert, IonBackButton, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCol, IonContent, IonGrid, IonHeader, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { validOtp } from \"../../components/Regex/Regex\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst RecoverOtp = () => {\n  _s();\n\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showSuccessResend, setShowSuccessResend] = useState(false);\n\n  const updateOtp = otp => setOtp(otp);\n\n  const resendOtp = () => {\n    console.log(\"Yeah\");\n  };\n\n  const getAdminId = async () => {\n    const id = await Storage.get({\n      key: \"adminId\"\n    });\n    const adminId = id.value;\n    const time = new Date().toISOString();\n    let url = \"recovery/recover/\".concat(otp, \"/\", adminId, \"/\", time);\n    Connection.processPostRequest({}, url, response => mapResponse(response));\n  };\n\n  const mapResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setMessage(\"Account Recovered.\");\n      setShowSuccess(true);\n    }\n  };\n\n  const buttonHandler = () => {\n    if (!validOtp.test(otp)) {\n      setShowLoader(false);\n      setMessage(\"Invalid Otp\");\n      setShowError(true);\n    } else {\n      getAdminId();\n    }\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      message: message,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showSuccessResend,\n      onDidDismiss: () => setShowError(false),\n      header: \"Success\",\n      message: message,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showSuccess,\n      onDidDismiss: () => setShowError(false),\n      header: \"Success\",\n      message: message,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          children: _jsxDEV(IonBackButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Verify Otp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonGrid, {\n        children: _jsxDEV(IonRow, {\n          children: _jsxDEV(IonCol, {\n            children: _jsxDEV(IonCard, {\n              sx: styles.card,\n              children: [_jsxDEV(IonCardHeader, {\n                children: _jsxDEV(IonCardSubtitle, {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: \"Enter the otp that was sent to the respective choice of medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), _jsxDEV(IonCardContent, {\n                children: [_jsxDEV(IonRow, {\n                  children: _jsxDEV(IonCol, {\n                    children: _jsxDEV(IonItem, {\n                      children: [_jsxDEV(IonLabel, {\n                        position: \"floating\",\n                        children: \"One-Time Pin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 25\n                      }, this), _jsxDEV(IonInput, {\n                        type: \"text\",\n                        value: otp,\n                        onIonChange: e => updateOtp(e.detail.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), _jsxDEV(IonRow, {\n                  children: _jsxDEV(IonCol, {\n                    children: _jsxDEV(IonButton, {\n                      type: \"submit\",\n                      expand: \"block\",\n                      shape: \"round\",\n                      sx: styles.button,\n                      onClick: () => buttonHandler(),\n                      children: \"Verify\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), _jsxDEV(IonRow, {\n                  children: _jsxDEV(IonCol, {\n                    children: _jsxDEV(\"p\", {\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: [\"Didn't recieve it ? \", _jsxDEV(\"a\", {\n                        onClick: () => resendOtp(),\n                        children: \"Resend One-Time Pin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 80\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecoverOtp, \"n3/hMm3DA6HsPJIUFToj1rYBqPI=\");\n\n_c = RecoverOtp;\nexport default RecoverOtp;\nconst styles = {\n  card: {\n    mt: \"23vh\"\n  },\n  button: {\n    mt: \"3\",\n    mb: \"4\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoverOtp\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Recover Account/RecoverOtp.tsx"],"names":["Storage","IonAlert","IonBackButton","IonButton","IonButtons","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCol","IonContent","IonGrid","IonHeader","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonTitle","IonToolbar","React","useState","validOtp","Connection","RecoverOtp","otp","setOtp","message","setMessage","showError","setShowError","showLoader","setShowLoader","showSuccess","setShowSuccess","showSuccessResend","setShowSuccessResend","updateOtp","resendOtp","console","log","getAdminId","id","get","key","adminId","value","time","Date","toISOString","url","concat","processPostRequest","response","mapResponse","type","data","buttonHandler","test","styles","card","textAlign","e","detail","button","mt","mb"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { Storage } from \"@capacitor/storage\";\nimport {\n    IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { validOtp } from \"../../components/Regex/Regex\";\nimport Connection from \"../../mixins/Connection\";\n\nconst RecoverOtp: React.FC = () => {\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showSuccessResend, setShowSuccessResend] = useState(false);\n\n  const updateOtp = (otp: any) => setOtp(otp);\n\n  const resendOtp = () => {\n      console.log(\"Yeah\");\n  };\n  const getAdminId = async() => {\n      const id: any = await Storage.get({key: \"adminId\"});\n      const adminId: any = id.value;\n\n      const time = new Date().toISOString();\n\n      let url = \"recovery/recover/\".concat(otp, \"/\", adminId, \"/\", time);\n      Connection.processPostRequest({}, url, (response: any) => mapResponse(response))\n  };\n\n  const mapResponse = (response: any) => {\n      if(response.type === \"error\"){\n          setShowLoader(false);\n          setMessage(response.data);\n          setShowError(true);\n      }else{\n          setShowLoader(false);\n          setMessage(\"Account Recovered.\");\n          setShowSuccess(true);\n      }\n  };\n\n  const buttonHandler = () => {\n      if(!validOtp.test(otp)){\n          setShowLoader(false);\n          setMessage(\"Invalid Otp\");\n          setShowError(true);\n      }else{\n          getAdminId();\n      }\n  };\n  return (\n    <IonPage>\n        <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        message={message}\n        buttons={[\"OK\"]}\n      />\n      <IonAlert\n        isOpen={showSuccessResend}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Success\"}\n        message={message}\n        buttons={[\"OK\"]}\n      />\n      <IonAlert\n        isOpen={showSuccess}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Success\"}\n        message={message}\n        buttons={[\"OK\"]}\n      />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons>\n            <IonBackButton />\n          </IonButtons>\n          <IonTitle>Verify Otp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <IonCard sx={styles.card}>\n                <IonCardHeader>\n                  <IonCardSubtitle style={{ textAlign: \"center\" }}>\n                    Enter the otp that was sent to the respective choice of\n                    medium\n                  </IonCardSubtitle>\n                </IonCardHeader>\n                <IonCardContent>\n                  <IonRow>\n                    <IonCol>\n                      <IonItem>\n                        <IonLabel position=\"floating\">One-Time Pin</IonLabel>\n                        <IonInput\n                          type=\"text\"\n                          value={otp}\n                          onIonChange={(e) => updateOtp(e.detail.value)}\n                        />\n                      </IonItem>\n                    </IonCol>\n                  </IonRow>\n                  <IonRow>\n                      <IonCol>\n                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" sx={styles.button} onClick={()=>buttonHandler()}>Verify</IonButton>\n                      </IonCol>\n                  </IonRow>\n                  <IonRow>\n                      <IonCol>\n                          <p style={{textAlign: \"center\"}}>Didn't recieve it ? <a onClick={()=>resendOtp()}>Resend One-Time Pin</a></p>\n                      </IonCol>\n                  </IonRow>\n                </IonCardContent>\n              </IonCard>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default RecoverOtp;\n\nconst styles = {\n    card:{\n        mt: \"23vh\",\n    },\n    button: {\n        mt: \"3\",\n        mb: \"4\",\n    },\n};\n"]},"metadata":{},"sourceType":"module"}