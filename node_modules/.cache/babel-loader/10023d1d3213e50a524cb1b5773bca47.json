{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Management/Management.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { add } from 'ionicons/icons';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '../../components/Card/Card';\nimport Connection from '../../mixins/Connection';\nimport './Page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Management = () => {\n  _s();\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    name,\n    title\n  } = useParams();\n  const [agents, setAgents] = useState([{\n    agentId: \"\",\n    complexName: \"\",\n    contractId: \"\",\n    name: \"\",\n    surname: \"\",\n    id: \"\",\n    cellNum: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    password: \"\"\n  }]);\n  const [complexes, setComplexes] = useState([{\n    complexId: \"\",\n    name: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    telephoneNum: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    cellNum: \"\",\n    units: [],\n    agents: []\n  }]);\n  const [packages, setPackages] = useState([{\n    packageId: \"\",\n    promotionId: \"\",\n    packageName: \"\",\n    minutes: 0,\n    standardPrice: \"\",\n    suvPrice: \"\",\n    description: \"\",\n    onPromotion: false\n  }]);\n  const [promotions, setPromotions] = useState([{\n    promotionId: \"\",\n    promotionName: \"\",\n    packageName: \"\",\n    standardPrice: \"\",\n    suvPrice: \"\",\n    isEnabled: false\n  }]);\n\n  const getPackages = () => {\n    var url = 'package/getAll';\n    Connection.processGetRequest({}, url, response => {\n      mapResponse(response);\n    });\n  };\n\n  const mapResponse = response => {\n    if (response.type === 'error') {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setPackages(response.data.data);\n    }\n  };\n\n  const addUrl = \"/add/\";\n  var result;\n\n  if (title === \"agent\") {\n    const agent = {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\"\n    };\n  } else if (title === \"complex\") {\n    const complex = {\n      complexId: \"\",\n      name: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: []\n    };\n  } else if (title === \"package\") {\n    getPackages();\n  } else {\n    const promotion = {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonMenuButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: name.concat(\" Management\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: [packages.map(pack => /*#__PURE__*/_jsxDEV(Card, {\n        type: title,\n        id: pack.packageId,\n        title: pack.packageName,\n        subtitle: pack.description,\n        reference: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(IonFab, {\n        vertical: \"bottom\",\n        horizontal: \"end\",\n        slot: \"fixed\",\n        children: /*#__PURE__*/_jsxDEV(IonFabButton, {\n          href: addUrl.concat(name, \"/\", title),\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            icon: add\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Management, \"esRy6j2r3b3VRpcWqUp4VPAeVNc=\", false, function () {\n  return [useParams];\n});\n\n_c = Management;\nexport default Management;\n\nvar _c;\n\n$RefreshReg$(_c, \"Management\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Management/Management.tsx"],"names":["IonButtons","IonContent","IonFab","IonFabButton","IonHeader","IonIcon","IonMenuButton","IonPage","IonTitle","IonToolbar","add","useState","useParams","Card","Connection","Management","showLoader","setShowLoader","showError","setShowError","errorMessage","setErrorMessage","name","title","agents","setAgents","agentId","complexName","contractId","surname","id","cellNum","street1","street2","city","province","postalCode","password","complexes","setComplexes","complexId","telephoneNum","startTime","endTime","units","packages","setPackages","packageId","promotionId","packageName","minutes","standardPrice","suvPrice","description","onPromotion","promotions","setPromotions","promotionName","isEnabled","getPackages","url","processGetRequest","response","mapResponse","type","data","addUrl","result","agent","complex","promotion","concat","map","pack"],"mappings":"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","sourcesContent":["import { IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { add, card } from 'ionicons/icons';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '../../components/Card/Card';\nimport Connection from '../../mixins/Connection';\nimport './Page.css';\n\nconst Management: React.FC = () => {\n\n  const [ showLoader, setShowLoader ] = useState(false);\n  const [ showError, setShowError ] = useState(false);\n  const [ errorMessage, setErrorMessage ] = useState('');\n\n  const { name, title} = useParams<{ name: string, title: \"agent\" | \"complex\" | \"package\" | \"promotion\"}>();\n\n  const [agents, setAgents] = useState([{\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\",\n  }]);\n  const [complexes, setComplexes] = useState([{\n      complexId: \"\",\n      name: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: [],\n  }]);\n  const [ packages, setPackages ] = useState([{\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: false,\n  }]);\n  const [promotions, setPromotions] = useState([{\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false,\n  }]);\n\n  const getPackages = () =>{\n    var url = 'package/getAll';\n\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapResponse(response);\n    })\n  }\n\n  const mapResponse = (response: any) => {\n    if(response.type === 'error'){\n      setErrorMessage(response.data)\n      setShowError(true);\n    }\n    else{\n      setPackages(response.data.data);\n    }\n  }\n\n  const addUrl = \"/add/\"\n\n  interface Result {\n    id: string;\n    title: string;\n    subtitle: string;\n  }\n\n  interface Agent {\n    agentId: string;\n    complexName: string;\n    contractId: string;\n    name: string;\n    surname: string;\n    id: string;\n    cellNum: string;\n    street1: string;\n    street2: string;\n    city: string;\n    province: string;\n    postalCode: string;\n    password: string;\n  }\n  \n  interface Complex {\n    complexId: string;\n    name: string;\n    street1: string;\n    street2: string;\n    city: string;\n    province: string;\n    postalCode: string;\n    telephoneNum: string;\n    startTime: string;\n    endTime: string;\n    cellNum: string;\n    units: [];\n    agents: [];\n  }\n  \n  interface Package {\n    packageId: string;\n    promotionId: string;\n    packageName: string;\n    minutes: number;\n    standardPrice: string;\n    suvPrice: string;\n    description: string;\n    onPromotion: boolean;\n  }\n  \n  interface Promotion {\n    promotionId: string;\n    promotionName: string;\n    packageName: string;\n    standardPrice: string;\n    suvPrice: string;\n    isEnabled: boolean;\n  }\n\n  var result;\n\n  if (title === \"agent\") {\n    const agent: Agent = {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\",\n    };\n\n  } else if (title === \"complex\") {\n    const complex: Complex = {\n      complexId: \"\",\n      name: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: [],\n    };\n\n  } else if (title === \"package\") {\n    getPackages();\n  } else {\n    const promotion: Promotion = {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false,\n    };\n\n  }\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name.concat(\" Management\")}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        {packages.map(pack =>\n        <Card type={title} id={pack.packageId} title={pack.packageName} subtitle={pack.description} reference={name}/>\n        )\n        }\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton href={addUrl.concat(name,\"/\",title)}>\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Management;\n"]},"metadata":{},"sourceType":"module"}