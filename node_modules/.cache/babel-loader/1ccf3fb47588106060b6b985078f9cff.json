{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/components/Forms/AgentForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonAlert, IonButton, IonCol, IonGrid, IonInput, IonItem, IonLabel, IonLoading, IonRow, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validId, validName, validPassword, validPostalCode } from \"../Regex/Regex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AgentForm = props => {\n  _s();\n\n  useIonViewWillEnter(() => {\n    getAgent();\n  });\n  const path = useHistory();\n  const [agent, setAgent] = useState({\n    agentId: \"\",\n    complexName: \"\",\n    contractId: \"\",\n    name: \"\",\n    surname: \"\",\n    id: \"\",\n    cellNum: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    password: \"\"\n  });\n\n  const getAgent = () => {\n    var url = \"agent/get/\".concat(props.id);\n    Connection.processGetRequest({}, url, response => {\n      mapAgent(response);\n    });\n  };\n\n  const mapAgent = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setAgent(response.data.data);\n      console.log(props.id);\n    }\n  };\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [enteredComplexName, setComplexName] = useState(agent.complexName);\n  const [enteredName, setName] = useState(agent.name);\n  const [enteredSurname, setSurname] = useState(agent.surname);\n  const [enteredId, setId] = useState(agent.id);\n  const [enteredCellNum, setCellNum] = useState(agent.cellNum);\n  const [enteredStreet1, setStreet1] = useState(agent.street1);\n  const [enteredStreet2, setStreet2] = useState(agent.street2);\n  const [enteredCity, setCity] = useState(agent.city);\n  const [enteredProvince, setProvince] = useState(agent.province);\n  const [enteredPostalCode, setPostalCode] = useState(agent.postalCode);\n  const [enteredPassword, setPassword] = useState(\"\");\n  const [enteredConfirm, setConfirmPassword] = useState(\"\");\n\n  const updateComplexName = complexName => setComplexName(complexName);\n\n  const updateName = name => setName(name);\n\n  const updateSurname = surname => setSurname(surname);\n\n  const updateId = id => setId(id);\n\n  const updateCellNum = cellNum => setCellNum(cellNum);\n\n  const updateStreet1 = street1 => setStreet1(street1);\n\n  const updateStreet2 = street2 => setStreet2(street2);\n\n  const updateCity = city => setCity(city);\n\n  const updateProvince = province => setProvince(province);\n\n  const updatePostalCode = postalCode => setPostalCode(postalCode);\n\n  const updatePassword = password => setPassword(password);\n\n  const updateConfirm = cPassword => setConfirmPassword(cPassword);\n\n  const buttonHandler = () => {\n    validateForm();\n\n    if (isFormValid) {\n      if (props.name === \"Add\") {\n        let url = \"agent/add\";\n        var payload = {\n          agentId: agent.agentId,\n          complexName: enteredComplexName,\n          contractId: agent.contractId,\n          name: enteredName,\n          surname: enteredSurname,\n          id: enteredId,\n          cellNum: enteredCellNum,\n          street1: enteredStreet1,\n          street2: enteredStreet2,\n          city: enteredCity,\n          province: enteredProvince,\n          postalCode: enteredPostalCode,\n          password: enteredPassword\n        };\n        Connection.processPostRequest(payload, url, response => {\n          mapAddResponse(response);\n        });\n      }\n    }\n  };\n\n  const mapAddResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setSuccessMessage(\"Agent Details Captured!\");\n      setShowSuccess(true);\n    }\n  };\n\n  const validateForm = () => {\n    if (enteredName === \"\" || enteredSurname === \"\" || enteredComplexName === \"\" || enteredId === \"\" || enteredCellNum === \"\" || enteredStreet1 === \"\" || enteredStreet2 === \"\" || enteredCity === \"\" || enteredProvince === \"\" || enteredPostalCode === \"\" || enteredPassword === \"\" || enteredConfirm === \"\") {\n      setShowLoader(false);\n      setErrorMessage(\"Fields must not be empty.\");\n      setShowError(true);\n    } else if (enteredPassword !== enteredConfirm) {\n      setShowLoader(false);\n      setErrorMessage(\"Passwords do not match. Please ensure they are entered correctly!\");\n      setShowError(true);\n      setIsFormValid(false);\n    } else {\n      if (!validName.test(enteredName)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Name.\");\n        setShowError(true);\n      } else if (!validName.test(enteredSurname)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Surname.\");\n        setShowError(true);\n      } else if (!validName.test(enteredComplexName)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Complex Name.\");\n        setShowError(true);\n      } else if (!validId.test(enteredId)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Id.\");\n        setShowError(true);\n      } else if (!validCellNum.test(enteredCellNum)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Cell Number\");\n        setShowError(true);\n      } else if (!validName.test(enteredCity)) {\n        setShowLoader(false);\n        setErrorMessage(\"Invalid City\");\n        setShowError(true);\n      } else if (!validName.test(enteredProvince)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Province.\");\n        setShowError(true);\n      } else if (!validPostalCode.test(enteredPostalCode)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Postal Code.\");\n        setShowError(true);\n      } else if (!validPassword.test(enteredPassword)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n        setShowError(true);\n      } else {\n        setIsFormValid(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonGrid, {\n    children: [/*#__PURE__*/_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      subHeader: \"Something went wrong.\",\n      message: errorMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n      isOpen: showSuccess,\n      onDidDismiss: () => path.push(\"/page/Agent/agent\"),\n      header: \"Success\",\n      subHeader: successMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredName,\n            onIonChange: e => updateName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredSurname,\n            onIonChange: e => updateSurname(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredId,\n            onIonChange: e => updateId(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Cell Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredCellNum,\n            onIonChange: e => updateCellNum(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Street 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredStreet1,\n            onIonChange: e => updateStreet1(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Street 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredStreet2,\n            onIonChange: e => updateStreet2(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredCity,\n            onIonChange: e => updateCity(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: [/*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Province\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredProvince,\n            onIonChange: e => updateProvince(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredPostalCode,\n            onIonChange: e => updatePostalCode(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Complex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            disabled: props.isDisabled,\n            value: enteredComplexName,\n            onIonChange: e => updateComplexName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            disabled: props.isDisabled,\n            value: enteredPassword,\n            onIonChange: e => updatePassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \" Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            disabled: props.name === \"Add\" ? props.isDisabled : true,\n            value: enteredConfirm,\n            onIonChange: e => updateConfirm(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonButton, {\n          type: \"submit\",\n          expand: \"block\",\n          onClick: buttonHandler,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AgentForm, \"tFSz/i0UECLCKS/ov3pqyPTeuj8=\", false, function () {\n  return [useIonViewWillEnter, useHistory];\n});\n\n_c = AgentForm;\nexport default AgentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgentForm\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/components/Forms/AgentForm.tsx"],"names":["IonAlert","IonButton","IonCol","IonGrid","IonInput","IonItem","IonLabel","IonLoading","IonRow","useIonViewWillEnter","React","useState","useHistory","Connection","validCellNum","validId","validName","validPassword","validPostalCode","AgentForm","props","getAgent","path","agent","setAgent","agentId","complexName","contractId","name","surname","id","cellNum","street1","street2","city","province","postalCode","password","url","concat","processGetRequest","response","mapAgent","type","setErrorMessage","data","setShowError","console","log","showLoader","setShowLoader","showError","errorMessage","successMessage","setSuccessMessage","showSuccess","setShowSuccess","isFormValid","setIsFormValid","enteredComplexName","setComplexName","enteredName","setName","enteredSurname","setSurname","enteredId","setId","enteredCellNum","setCellNum","enteredStreet1","setStreet1","enteredStreet2","setStreet2","enteredCity","setCity","enteredProvince","setProvince","enteredPostalCode","setPostalCode","enteredPassword","setPassword","enteredConfirm","setConfirmPassword","updateComplexName","updateName","updateSurname","updateId","updateCellNum","updateStreet1","updateStreet2","updateCity","updateProvince","updatePostalCode","updatePassword","updateConfirm","cPassword","buttonHandler","validateForm","payload","processPostRequest","mapAddResponse","test","push","isDisabled","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonAlert,\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonRow,\n  useIonViewDidEnter,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validId, validName, validPassword, validPostalCode } from \"../Regex/Regex\";\n\ninterface Agent {\n  complexName: string;\n  contractId: string;\n  name: string;\n  surname: string;\n  id: string;\n  cellNum: string;\n  street1: string;\n  street2: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  password: string;\n}\n\nconst AgentForm: React.FC<{ name: string; isDisabled: boolean; id: string}> =\n  (props) => {\n    useIonViewWillEnter(()=>{\n      getAgent();\n    });\n\n    const path = useHistory();\n    const [agent, setAgent] = useState(\n      {\n        agentId: \"\",\n        complexName: \"\",\n        contractId: \"\",\n        name: \"\",\n        surname: \"\",\n        id: \"\",\n        cellNum: \"\",\n        street1: \"\",\n        street2: \"\",\n        city: \"\",\n        province: \"\",\n        postalCode: \"\",\n        password: \"\",\n      });\n\n    const getAgent = () => {\n      var url = \"agent/get/\".concat(props.id);\n      Connection.processGetRequest({}, url, (response: any) => {\n        mapAgent(response);\n      });\n    };\n    \n    const mapAgent = (response: any) => {\n      if (response.type === \"error\") {\n        setErrorMessage(response.data);\n        setShowError(true);\n      } else {\n        setAgent(response.data.data);\n        console.log(props.id);\n      }\n    };\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const [enteredComplexName, setComplexName] = useState(agent.complexName);\n    const [enteredName, setName] = useState(agent.name);\n    const [enteredSurname, setSurname] = useState(agent.surname);\n    const [enteredId, setId] = useState(agent.id);\n    const [enteredCellNum, setCellNum] = useState(agent.cellNum);\n    const [enteredStreet1, setStreet1] = useState(agent.street1);\n    const [enteredStreet2, setStreet2] = useState(agent.street2);\n    const [enteredCity, setCity] = useState(agent.city);\n    const [enteredProvince, setProvince] = useState(agent.province);\n    const [enteredPostalCode, setPostalCode] = useState(agent.postalCode);\n    const [enteredPassword, setPassword] = useState(\"\");\n    const [enteredConfirm, setConfirmPassword] = useState(\"\");\n\n    const updateComplexName = (complexName: any) => setComplexName(complexName);\n    const updateName = (name: any) => setName(name);\n    const updateSurname = (surname: any) => setSurname(surname);\n    const updateId = (id: any) => setId(id);\n    const updateCellNum = (cellNum: any) => setCellNum(cellNum);\n    const updateStreet1 = (street1: any) => setStreet1(street1);\n    const updateStreet2 = (street2: any) => setStreet2(street2);\n    const updateCity = (city: any) => setCity(city);\n    const updateProvince = (province: any) => setProvince(province);\n    const updatePostalCode = (postalCode: any) => setPostalCode(postalCode);\n    const updatePassword = (password: any) => setPassword(password);\n    const updateConfirm = (cPassword: any) => setConfirmPassword(cPassword);\n\n    const buttonHandler = () => {\n      validateForm();\n      if(isFormValid){\n        if(props.name === \"Add\"){\n          let url = \"agent/add\";\n          var payload = {\n            agentId: agent.agentId,\n            complexName: enteredComplexName,\n            contractId: agent.contractId,\n            name: enteredName,\n            surname: enteredSurname,\n            id: enteredId,\n            cellNum: enteredCellNum,\n            street1: enteredStreet1,\n            street2: enteredStreet2,\n            city: enteredCity,\n            province: enteredProvince,\n            postalCode: enteredPostalCode,\n            password: enteredPassword \n          }\n          Connection.processPostRequest(payload, url, (response: any) => {\n            mapAddResponse(response);\n          });\n        }\n      }\n    };\n\n    const mapAddResponse = (response: any) => {\n      if (response.type === \"error\") {\n        setShowLoader(false);\n        setErrorMessage(response.data);\n        setShowError(true);\n      } else {\n        setShowLoader(false);\n        setSuccessMessage(\"Agent Details Captured!\");\n        setShowSuccess(true);\n      }\n    };\n\n    const validateForm = () => {\n      if (\n        enteredName === \"\" ||\n        enteredSurname === \"\" ||\n        enteredComplexName === \"\" ||\n        enteredId === \"\" ||\n        enteredCellNum === \"\" ||\n        enteredStreet1 === \"\" ||\n        enteredStreet2 === \"\" ||\n        enteredCity === \"\" ||\n        enteredProvince === \"\" ||\n        enteredPostalCode === \"\" ||\n        enteredPassword === \"\" ||\n        enteredConfirm === \"\"\n      ) {\n        setShowLoader(false);\n        setErrorMessage(\"Fields must not be empty.\");\n        setShowError(true);\n      }else if(enteredPassword !== enteredConfirm){\n        setShowLoader(false);\n        setErrorMessage(\n        \"Passwords do not match. Please ensure they are entered correctly!\"\n      );\n      setShowError(true);\n      setIsFormValid(false);\n      }\n      else{\n        if(!validName.test(enteredName)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Name.\");\n          setShowError(true);\n        }else if (!validName.test(enteredSurname)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Surname.\");\n          setShowError(true);\n        }else if (!validName.test(enteredComplexName)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Complex Name.\");\n          setShowError(true);\n        }else if(!validId.test(enteredId)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Id.\");\n          setShowError(true);\n        }else if(!validCellNum.test(enteredCellNum)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Cell Number\");\n          setShowError(true);\n        }else if(!validName.test(enteredCity)){\n          setShowLoader(false);\n          setErrorMessage(\"Invalid City\");\n          setShowError(true);\n        }\n        else if(!validName.test(enteredProvince)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Province.\");\n          setShowError(true);\n        }else if(!validPostalCode.test(enteredPostalCode)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Invalid Postal Code.\");\n          setShowError(true);\n        }else if(!validPassword.test(enteredPassword)){\n          setShowLoader(false);\n          setIsFormValid(false);\n          setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n          setShowError(true);\n        }\n        else{\n          setIsFormValid(true)\n        }\n      }\n    };\n\n    return (\n      <IonGrid>\n        <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n\n      <IonAlert\n        isOpen={showSuccess}\n        onDidDismiss={() => path.push(\"/page/Agent/agent\")}\n        header={\"Success\"}\n        subHeader={successMessage}\n        buttons={[\"OK\"]}\n      />\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredName}\n                onIonChange={(e) => updateName(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Surname</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredSurname}\n                onIonChange={(e) => updateSurname(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">ID</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredId}\n                onIonChange={(e) => updateId(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Cell Number</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredCellNum}\n                onIonChange={(e) => updateCellNum(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Street 1</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredStreet1}\n                onIonChange={(e) => updateStreet1(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Street 2</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredStreet2}\n                onIonChange={(e) => updateStreet2(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">City</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredCity}\n                onIonChange={(e) => updateCity(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Province</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredProvince}\n                onIonChange={(e) => updateProvince(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Postal code</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredPostalCode}\n                onIonChange={(e) => updatePostalCode(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Complex</IonLabel>\n              <IonInput\n                disabled={props.isDisabled}\n                value={enteredComplexName}\n                onIonChange={(e) => updateComplexName(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\">Password</IonLabel>\n              <IonInput\n                type=\"password\"\n                disabled={props.isDisabled}\n                value={enteredPassword}\n                onIonChange={(e) => updatePassword(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonItem>\n              <IonLabel position=\"floating\"> Confirm Password</IonLabel>\n              <IonInput\n                type=\"password\"\n                disabled={props.name === \"Add\" ? props.isDisabled : true}\n                value={enteredConfirm}\n                onIonChange={(e) => updateConfirm(e.detail.value)}\n              />\n            </IonItem>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <IonButton type=\"submit\" expand=\"block\" onClick={buttonHandler}>\n              {props.name}\n            </IonButton>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n    );\n  };\n\nexport default AgentForm;\n"]},"metadata":{},"sourceType":"module"}