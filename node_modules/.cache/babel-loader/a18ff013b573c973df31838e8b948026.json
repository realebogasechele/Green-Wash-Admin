{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/NewPassword.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonBackButton, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validPassword } from \"../../components/Regex/Regex\";\nimport { Storage } from \"@capacitor/storage\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst NewPassword = () => {\n  _s();\n\n  const path = useHistory();\n  const [message, setMessage] = useState(\"\");\n  const [showInfo, setShowInfo] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [cPassword, setCPassword] = useState(\"\");\n\n  const updatePassword = password => setPassword(password.target.value);\n\n  const updateCPassword = cPassword => setCPassword(cPassword.target.value);\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n\n    if (password === \"\" && cPassword === \"\") {\n      setShowLoader(false);\n      setMessage(\"Fields must not be empty.\");\n      setShowError(true);\n    } else if (password !== cPassword) {\n      setShowLoader(false);\n      setMessage(\"Passwords do not match.\");\n      setShowError(true);\n    } else if (!validPassword.test(password)) {\n      setShowLoader(false);\n      setMessage(\"Weak password.\");\n      setShowError(true);\n    } else {\n      getAdminId();\n    }\n  };\n\n  const getAdminId = async () => {\n    const id = await Storage.get({\n      key: 'adminId'\n    });\n    const adminId = id.value;\n    submitPassword(adminId);\n  };\n\n  const submitPassword = adminId => {\n    let url = '/forgot/changePassword';\n    var payload = {\n      adminId: adminId,\n      name: '',\n      surname: '',\n      email: '',\n      cellNum: '',\n      password: password\n    };\n    Connection.processPostRequest(payload, url, response => mapResponse(response));\n  };\n\n  const mapResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setMessage(response.data.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setMessage(response.data.data);\n      setShowSuccess(true);\n    }\n  };\n\n  const removeAdminId = async () => {\n    await Storage.remove({\n      key: 'adminId'\n    });\n  };\n\n  const removeIdentifier = async () => {\n    await Storage.remove({\n      key: 'id'\n    });\n  };\n\n  const removeType = async () => {\n    await Storage.remove({\n      key: 'type'\n    });\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      subHeader: \"Something went wrong.\",\n      message: message,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showSuccess,\n      onDidDismiss: () => {\n        setShowError(false);\n        removeAdminId();\n        removeType();\n        removeIdentifier();\n        path.replace('/signIn');\n      },\n      header: \"Succcess\",\n      subHeader: \"Request Processed.\",\n      message: message,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showInfo,\n      onDidDismiss: () => setShowInfo(false),\n      cssClass: \"my-custom-class\",\n      header: \"Warning\",\n      message: message,\n      buttons: [{\n        text: \"Cancel\",\n        role: \"cancel\",\n        cssClass: \"secondary\",\n        handler: () => {}\n      }, {\n        text: \"Yes, I'm sure\",\n        handler: () => {\n          removeAdminId();\n          removeType();\n          removeIdentifier();\n          path.replace(\"/signIn\");\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: _jsxDEV(IonBackButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), _jsxDEV(IonTitle, {\n          children: \"New Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonCard, {\n        sx: styles.card,\n        children: [_jsxDEV(IonCardHeader, {\n          children: _jsxDEV(IonTitle, {\n            size: \"small\",\n            sx: styles.card.title,\n            children: \"Please enter your new Password below:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), _jsxDEV(IonCardContent, {\n          children: [_jsxDEV(IonItem, {\n            children: [_jsxDEV(IonLabel, {\n              position: \"floating\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), _jsxDEV(IonInput, {\n              type: \"password\",\n              onIonChange: e => updatePassword(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), _jsxDEV(IonItem, {\n            sx: styles.input,\n            children: [_jsxDEV(IonLabel, {\n              position: \"floating\",\n              children: \" Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), _jsxDEV(IonInput, {\n              type: \"password\",\n              onIonChange: e => updateCPassword(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), _jsxDEV(IonButton, {\n            type: \"submit\",\n            expand: \"block\",\n            shape: \"round\",\n            onClick: buttonHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPassword, \"uaYf8/i4fml4qAIcQH+ZKAr91qQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewPassword;\nexport default NewPassword;\nconst styles = {\n  input: {\n    mb: 4\n  },\n  card: {\n    title: {\n      pl: 4\n    },\n    mt: \"25vh\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/NewPassword.tsx"],"names":["IonAlert","IonBackButton","IonButton","IonButtons","IonCard","IonCardContent","IonCardHeader","IonContent","IonHeader","IonInput","IonItem","IonLabel","IonPage","IonTitle","IonToolbar","React","useState","useHistory","validPassword","Storage","Connection","NewPassword","path","message","setMessage","showInfo","setShowInfo","showError","setShowError","showSuccess","setShowSuccess","showLoader","setShowLoader","password","setPassword","cPassword","setCPassword","updatePassword","target","value","updateCPassword","buttonHandler","test","getAdminId","id","get","key","adminId","submitPassword","url","payload","name","surname","email","cellNum","processPostRequest","response","mapResponse","type","data","removeAdminId","remove","removeIdentifier","removeType","replace","text","role","cssClass","handler","styles","card","title","e","input","mb","pl","mt"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonContent,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validPassword } from \"../../components/Regex/Regex\";\nimport { Storage } from \"@capacitor/storage\";\nimport Connection from \"../../mixins/Connection\";\n\nconst NewPassword: React.FC = () => {\n  const path = useHistory();\n\n  const [message, setMessage] = useState(\"\");\n  const [showInfo, setShowInfo] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const [password, setPassword] = useState(\"\");\n  const [cPassword, setCPassword] = useState(\"\");\n\n  const updatePassword = (password: any) => setPassword(password.target.value);\n  const updateCPassword = (cPassword: any) =>\n    setCPassword(cPassword.target.value);\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n    if (password === \"\" && cPassword === \"\") {\n      setShowLoader(false);\n      setMessage(\"Fields must not be empty.\");\n      setShowError(true);\n    } else if (password !== cPassword) {\n      setShowLoader(false);\n      setMessage(\"Passwords do not match.\");\n      setShowError(true);\n    } else if (!validPassword.test(password)) {\n      setShowLoader(false);\n      setMessage(\"Weak password.\");\n      setShowError(true);\n    } else {\n      getAdminId();\n    }\n  };\n  const getAdminId = async () => {\n    const id: any = await Storage.get({ key: 'adminId' });\n    const adminId = id.value;\n\n    submitPassword(adminId);\n  };\n\n  const submitPassword = (adminId: any) => {\n    let url = '/forgot/changePassword';\n    var payload = {\n        adminId: adminId,\n        name: '',\n        surname: '',\n        email: '',\n        cellNum: '',\n        password: password,\n    }\n    Connection.processPostRequest(payload, url, (response: any) => mapResponse(response));\n  };\n\n  const mapResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setMessage(response.data.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setMessage(response.data.data);\n      setShowSuccess(true);\n    }\n  };\n\n  const removeAdminId = async () => {\n    await Storage.remove({ key: 'adminId' });\n};\nconst removeIdentifier = async () => {\n  await Storage.remove({\n    key: 'id',\n  });\n};\n\nconst removeType = async() => {\n  await Storage.remove({\n    key: 'type',\n  });\n}\n\n\n  return (\n    <IonPage>\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={message}\n        buttons={[\"OK\"]}\n      />\n      <IonAlert\n        isOpen={showSuccess}\n        onDidDismiss={() => { setShowError(false);\n          removeAdminId();\n          removeType();\n          removeIdentifier();\n          path.replace('/signIn');}}\n        header={\"Succcess\"}\n        subHeader={\"Request Processed.\"}\n        message={message}\n        buttons={[\"OK\"]}\n      />\n      <IonAlert\n        isOpen={showInfo}\n        onDidDismiss={() => setShowInfo(false)}\n        cssClass=\"my-custom-class\"\n        header={\"Warning\"}\n        message={message}\n        buttons={[\n          {\n            text: \"Cancel\",\n            role: \"cancel\",\n            cssClass: \"secondary\",\n            handler: () => {},\n          },\n          {\n            text: \"Yes, I'm sure\",\n            handler: () => {\n                removeAdminId();\n                removeType();\n                removeIdentifier();\n              path.replace(\"/signIn\");\n            },\n          },\n        ]}\n      />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n            <IonButtons slot='start'>\n                <IonBackButton />\n            </IonButtons>\n          <IonTitle>New Password </IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard sx={styles.card}>\n          <IonCardHeader>\n            <IonTitle size=\"small\" sx={styles.card.title}>\n              Please enter your new Password below:\n            </IonTitle>\n          </IonCardHeader>\n          <IonCardContent>\n            <IonItem>\n              <IonLabel position=\"floating\">Password</IonLabel>\n              <IonInput\n                type=\"password\"\n                onIonChange={(e) => updatePassword(e)}\n              />\n            </IonItem>\n            <IonItem sx={styles.input}>\n              <IonLabel position=\"floating\"> Confirm Password</IonLabel>\n              <IonInput\n                type=\"password\"\n                onIonChange={(e) => updateCPassword(e)}\n              />\n            </IonItem>\n            <IonButton\n              type=\"submit\"\n              expand=\"block\"\n              shape=\"round\"\n              onClick={buttonHandler}\n            >\n              Submit\n            </IonButton>\n          </IonCardContent>\n        </IonCard>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default NewPassword;\n\nconst styles = {\n  input: {\n    mb: 4,\n  },\n\n  card: {\n    title: {\n      pl: 4,\n    },\n    mt: \"25vh\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}