{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonIcon, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport { sadOutline } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst Calendar = () => {\n  _s();\n\n  const [time, setTime] = useState(new Date().toISOString());\n  const [bookings, setBookings] = useState([{\n    bookingId: \"Test\",\n    clientName: \"Test\",\n    complexName: \"Test\",\n    packageName: \"Test\",\n    price: \"57\",\n    startTime: new Date().toDateString(),\n    endTime: new Date().toDateString()\n  }]);\n\n  const updateTime = currentTime => {\n    setTime(currentTime);\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: _jsxDEV(IonMenuButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      fullscreen: true,\n      children: _jsxDEV(IonGrid, {\n        children: [_jsxDEV(IonRow, {\n          children: _jsxDEV(IonCol, {\n            children: _jsxDEV(IonItem, {\n              children: [_jsxDEV(IonLabel, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), _jsxDEV(IonDatetime, {\n                min: \"2021\",\n                value: time,\n                onIonChange: e => updateTime(e.detail.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), _jsxDEV(IonRow, {\n          children: _jsxDEV(IonCol, {\n            children: _jsxDEV(IonCard, {\n              color: \"secondary\",\n              children: [_jsxDEV(IonCardHeader, {\n                children: [_jsxDEV(IonCardTitle, {\n                  children: bookings[0].clientName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), _jsxDEV(IonCardSubtitle, {\n                  children: bookings[0].complexName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), _jsxDEV(IonCardContent, {\n                children: [_jsxDEV(IonRow, {\n                  children: [\"Package: \", bookings[0].packageName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), _jsxDEV(IonRow, {\n                  children: [\" Price: R \", bookings[0].price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this), _jsxDEV(IonRow, {\n                  children: [\"Start Time: \", bookings[0].startTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), _jsxDEV(IonRow, {\n                  children: [\"EndTime: \", bookings[0].endTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), bookings[0].bookingId === \"\" && _jsxDEV(IonRow, {\n          sx: styles.row,\n          children: [_jsxDEV(IonCol, {\n            size: \"8\",\n            children: _jsxDEV(\"h2\", {\n              sx: styles.heading,\n              children: \"No Bookings \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), _jsxDEV(IonCol, {\n            children: _jsxDEV(IonIcon, {\n              icon: sadOutline,\n              sx: styles.heading.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"m3vbAI+34zDEX9EskwsWQBT94dw=\");\n\n_c = Calendar;\nexport default Calendar;\nconst styles = {\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"grey\",\n    pl: 5,\n    pr: 0,\n    icon: {\n      pt: '10px',\n      size: 40,\n      color: \"grey\"\n    }\n  },\n  row: {}\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Calendar/Calendar.tsx"],"names":["IonButtons","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCardTitle","IonCol","IonContent","IonDatetime","IonGrid","IonHeader","IonIcon","IonItem","IonLabel","IonMenuButton","IonPage","IonRow","IonTitle","IonToolbar","sadOutline","React","useState","Calendar","time","setTime","Date","toISOString","bookings","setBookings","bookingId","clientName","complexName","packageName","price","startTime","toDateString","endTime","updateTime","currentTime","e","detail","value","styles","row","heading","icon","display","justifyContent","color","pl","pr","pt","size"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport {\n  IonBackButton,\n  IonButtons,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCol,\n  IonContent,\n  IonDatetime,\n  IonGrid,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonMenuButton,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { sad, sadOutline } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\n\nconst Calendar: React.FC = () => {\n  const [time, setTime] = useState(new Date().toISOString());\n  const [bookings, setBookings] = useState([\n    {\n      bookingId: \"Test\",\n      clientName: \"Test\",\n      complexName: \"Test\",\n      packageName: \"Test\",\n      price: \"57\",\n      startTime: new Date().toDateString(),\n      endTime:  new Date().toDateString(),\n    },\n  ]);\n  const updateTime = (currentTime: any) => {\n    setTime(currentTime);\n  };\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>Calendar</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <IonItem>\n                <IonLabel>Date</IonLabel>\n                <IonDatetime\n                  min=\"2021\"\n                  value={time}\n                  onIonChange={(e) => updateTime(e.detail.value)}\n                />\n              </IonItem>\n            </IonCol>\n          </IonRow>\n         \n              <IonRow>\n                <IonCol>\n                  <IonCard color=\"secondary\">\n                    <IonCardHeader>\n                      <IonCardTitle>{bookings[0].clientName}</IonCardTitle>\n                      <IonCardSubtitle >{bookings[0].complexName}</IonCardSubtitle>\n                    </IonCardHeader>\n                    <IonCardContent>\n                      <IonRow>Package: {bookings[0].packageName}</IonRow>\n                      <IonRow> Price: R {bookings[0].price}</IonRow>\n                      <IonRow>Start Time: {bookings[0].startTime}</IonRow>\n                      <IonRow>EndTime: {bookings[0].endTime}</IonRow>\n                    </IonCardContent>\n                  </IonCard>\n                </IonCol>\n              </IonRow>\n            {bookings[0].bookingId === \"\" && <IonRow sx={styles.row}>\n              <IonCol size='8'>\n              <h2 sx={styles.heading}>No Bookings </h2>\n              </IonCol>\n              <IonCol>\n                <IonIcon icon={sadOutline} sx={styles.heading.icon}/>\n              </IonCol>\n            </IonRow>\n          }\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Calendar;\n\nconst styles = {\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"grey\",\n    pl: 5,\n    pr: 0,\n\n    icon:{\n      pt: '10px',\n      size: 40,\n      color: \"grey\",\n    },\n  },\n  row:{},\n};\n"]},"metadata":{},"sourceType":"module"}