{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/CardDetails/CardDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonBackButton, IonButtons, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, useIonViewDidEnter } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport MultiForm from \"../../components/MultiForm/MultiForm\";\nimport InputControls from \"../../components/InputControls/InputControls\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDetails = () => {\n  _s();\n\n  useIonViewDidEnter(() => {\n    if (type === \"agent\") {\n      getAgent();\n      result = agent;\n    } else if (type === \"complex\") {\n      getComplex();\n      result = complex;\n    } else if (type === \"package\") {\n      getPackage();\n      result = pack;\n    } else {\n      getPromotion();\n      result = promotion;\n    }\n  });\n  const [selectedSegment, setSelectedSegment] = useState(\"Update\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const {\n    name,\n    id,\n    type,\n    back\n  } = useParams();\n\n  const selectedSegmentHandler = selectedValue => {\n    setSelectedSegment(selectedValue);\n\n    if (selectedValue == \"Delete\") {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  };\n\n  const [agent, setAgent] = useState({\n    agentId: \"\",\n    complexName: \"\",\n    contractId: \"\",\n    name: \"\",\n    surname: \"\",\n    id: \"\",\n    cellNum: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    password: \"\"\n  });\n  const [complex, setComplex] = useState({\n    complexId: \"\",\n    name: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    telephoneNum: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    cellNum: \"\",\n    units: [],\n    agents: []\n  });\n  const [pack, setPackage] = useState({\n    packageId: \"\",\n    promotionId: \"\",\n    packageName: \"\",\n    minutes: 0,\n    standardPrice: \"\",\n    suvPrice: \"\",\n    description: \"\",\n    onPromotion: false\n  });\n  const [promotion, setPromotion] = useState({\n    promotionId: \"\",\n    promotionName: \"\",\n    packageName: \"\",\n    standardPrice: \"\",\n    suvPrice: \"\",\n    isEnabled: false\n  });\n\n  const getAgent = () => {\n    var url = \"agent/get/\".concat(id);\n    Connection.processGetRequest({}, url, response => {\n      mapAgent(response);\n    });\n  };\n\n  const getComplex = () => {\n    var url = \"complex/get/\".concat(id);\n    Connection.processGetRequest({}, url, response => {\n      mapComplex(response);\n    });\n  };\n\n  const getPackage = () => {\n    var url = \"package/get/\".concat(id);\n    Connection.processGetRequest({}, url, response => {\n      mapPackage(response);\n    });\n  };\n\n  const getPromotion = () => {\n    var url = \"promotion/get/\".concat(id);\n    Connection.processGetRequest({}, url, response => {\n      mapPromotion(response);\n    });\n  };\n\n  const mapPackage = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setPackage(response.data.data);\n    }\n  };\n\n  const mapAgent = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setAgent(response.data.data);\n    }\n  };\n\n  const mapComplex = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setComplex(response.data.data);\n    }\n  };\n\n  const mapPromotion = response => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setPromotion(response.data.data);\n    }\n  };\n\n  let result;\n  const url = \"/page/\";\n  /*Assign Content from API*/\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonBackButton, {\n            defaultHref: url.concat(back).concat(\"/\").concat(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(InputControls, {\n        selectedValue: selectedSegment,\n        onSelectedValue: selectedSegmentHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiForm, {\n        buttonName: selectedSegment,\n        type: type,\n        isDisabled: isDisabled,\n        content: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardDetails, \"PEI/5gRtYSr6F/0hjyOZHKeXKUg=\", false, function () {\n  return [useIonViewDidEnter, useParams];\n});\n\n_c = CardDetails;\nexport default CardDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDetails\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/CardDetails/CardDetails.tsx"],"names":["IonBackButton","IonButtons","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","useIonViewDidEnter","React","useState","useParams","MultiForm","InputControls","Connection","CardDetails","type","getAgent","result","agent","getComplex","complex","getPackage","pack","getPromotion","promotion","selectedSegment","setSelectedSegment","isDisabled","setIsDisabled","showLoader","setShowLoader","showError","setShowError","errorMessage","setErrorMessage","name","id","back","selectedSegmentHandler","selectedValue","setAgent","agentId","complexName","contractId","surname","cellNum","street1","street2","city","province","postalCode","password","setComplex","complexId","telephoneNum","startTime","endTime","units","agents","setPackage","packageId","promotionId","packageName","minutes","standardPrice","suvPrice","description","onPromotion","setPromotion","promotionName","isEnabled","url","concat","processGetRequest","response","mapAgent","mapComplex","mapPackage","mapPromotion","data"],"mappings":"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","sourcesContent":["import {\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewDidEnter,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport MultiForm from \"../../components/MultiForm/MultiForm\";\nimport InputControls from \"../../components/InputControls/InputControls\";\nimport Connection from \"../../mixins/Connection\";\n\n\n\nconst CardDetails: React.FC = () => {\n\n  useIonViewDidEnter(()=>{\n    if (type === \"agent\") {\n      getAgent();\n      result = agent;\n      \n    } else if (type === \"complex\") {\n      getComplex();\n      result = complex;\n      \n    } else if (type === \"package\") {\n      getPackage();\n      result = pack;\n      \n    } else {\n      getPromotion();\n      result = promotion;\n    }\n  })\n\n  const [selectedSegment, setSelectedSegment] = useState<\"Update\" | \"Delete\">(\"Update\");\n  const [isDisabled, setIsDisabled] = useState<true | false>(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { name, id ,type, back } = useParams<{\n    name: string;\n    id: string;\n    type: \"agent\" | \"complex\" | \"package\" | \"promotion\";\n    back: string;\n  }>();\n\n  const selectedSegmentHandler = (selectedValue: \"Update\" | \"Delete\") => {\n    setSelectedSegment(selectedValue);\n    if (selectedValue == \"Delete\") {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  };\n  const [agent, setAgent] = useState(\n    {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\",\n    }\n  );\n  const [complex, setComplex] = useState(\n    {\n      complexId: \"\",\n      name: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: [],\n    }\n  );\n  const [pack, setPackage] = useState(\n    {\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: false,\n    }\n  );\n  const [promotion, setPromotion] = useState(\n    {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false,\n    }\n  );\n\n  const getAgent = () => {\n    var url = \"agent/get/\".concat(id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapAgent(response);\n    });\n  };\n  const getComplex = () => {\n    var url = \"complex/get/\".concat(id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapComplex(response);\n    });\n  };\n  const getPackage = () => {\n    var url = \"package/get/\".concat(id);\n\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapPackage(response);\n    });\n  };\n  const getPromotion = () => {\n    var url = \"promotion/get/\".concat(id);\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapPromotion(response);\n    });\n  };\n\n  const mapPackage = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setPackage(response.data.data);\n    }\n  };\n  const mapAgent = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setAgent(response.data.data);\n    }\n  };\n\n  const mapComplex = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setComplex(response.data.data);\n    }\n  };\n  const mapPromotion = (response: any) => {\n    if (response.type === \"error\") {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setPromotion(response.data.data);\n    }\n  };\n\n  let result;\n\n  const url = \"/page/\";\n  /*Assign Content from API*/\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonBackButton\n              defaultHref={url.concat(back).concat(\"/\").concat(type)}\n            />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <InputControls\n          selectedValue={selectedSegment}\n          onSelectedValue={selectedSegmentHandler}\n        />\n        <MultiForm\n          buttonName={selectedSegment}\n          type={type}\n          isDisabled={isDisabled}\n          content={result}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CardDetails;\n"]},"metadata":{},"sourceType":"module"}