{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonCol, IonGrid, IonInput, IonItem, IonLabel, IonRow } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminForm = props => {\n  _s();\n\n  const {\n    adminId,\n    name,\n    surname,\n    cellNum,\n    password\n  } = props.content;\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [enteredName, setEnteredName] = useState(name);\n  const [enteredSurname, setEnteredSurname] = useState(surname);\n  const [enteredCellNum, setEnteredCellNum] = useState(cellNum);\n  const [enteredPassword, setEnteredPassword] = useState(password);\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const updateName = name => {\n    setEnteredName(name);\n  };\n\n  const updateSurname = surname => {\n    setEnteredSurname(surname);\n  };\n\n  const updateCellNum = cellNum => {\n    setEnteredCellNum(cellNum);\n  };\n\n  const updatePassword = password => {\n    setEnteredPassword(password);\n  };\n\n  const updateConfirmPassword = confirmPassword => {\n    setConfirmPassword(confirmPassword);\n  };\n\n  let url = useHistory();\n\n  if (props.buttonName === \"Update\") {} else {}\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n\n    if (props.buttonName === \"Update\") {\n      let path = \"update\";\n      let payload = {\n        adminId: adminId,\n        name: enteredName,\n        surname: enteredSurname,\n        cellNum: enteredCellNum,\n        password: enteredPassword\n      };\n      url.push(\"/dashboard\");\n      console.log(payload);\n    } else if (props.buttonName === \"Delete\") {\n      let path = \"remove\";\n      console.log(path);\n    } else {\n      let path = \"signUp\";\n      let payload = {\n        adminId: adminId,\n        name: enteredName,\n        surname: enteredSurname,\n        cellNum: enteredCellNum,\n        password: enteredPassword\n      };\n      Connection.processPostRequest(payload, path, response => {\n        mapPostResponse(response);\n      });\n      console.log(payload);\n      console.log(path);\n    }\n  };\n\n  const mapPostResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      url.push(\"/signIn\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonGrid, {\n    children: [/*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredName,\n            onIonChange: e => updateName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredSurname,\n            onIonChange: e => updateSurname(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Cell Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredCellNum,\n            onIonChange: e => updateCellNum(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            value: enteredPassword,\n            onIonChange: e => updatePassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Confrim Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            value: confirmPassword,\n            onIonChange: e => updateConfirmPassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonButton, {\n          type: \"submit\",\n          expand: \"block\",\n          onClick: buttonHandler,\n          children: props.buttonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminForm, \"sB2zFxoDAki1Y5YcddarOD8/CvM=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminForm;\nexport default AdminForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminForm\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx"],"names":["IonButton","IonCol","IonGrid","IonInput","IonItem","IonLabel","IonRow","React","useState","useHistory","Connection","AdminForm","props","adminId","name","surname","cellNum","password","content","showLoader","setShowLoader","showError","setShowError","errorMessage","setErrorMessage","enteredName","setEnteredName","enteredSurname","setEnteredSurname","enteredCellNum","setEnteredCellNum","enteredPassword","setEnteredPassword","confirmPassword","setConfirmPassword","updateName","updateSurname","updateCellNum","updatePassword","updateConfirmPassword","url","buttonName","buttonHandler","path","payload","push","console","log","processPostRequest","response","mapPostResponse","type","data","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonRow,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Connection from \"../../mixins/Connection\";\n\ninterface Admin{\n    adminId: string;\n    name: string;\n    surname: string;\n    cellNum: string;\n    password: string;\n}\n\nconst AdminForm: React.FC<{ buttonName: string, content: Admin}> = (props) => {\n    const {adminId, name, surname, cellNum, password} = props.content;\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const [enteredName, setEnteredName] = useState(name);\n    const [enteredSurname, setEnteredSurname] = useState(surname);\n    const [enteredCellNum, setEnteredCellNum] = useState(cellNum);\n    const [enteredPassword, setEnteredPassword] = useState(password);\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const updateName = (name: any) => {setEnteredName(name)};\n    const updateSurname = (surname: any) => {setEnteredSurname(surname)};\n    const updateCellNum = (cellNum: any) => {setEnteredCellNum(cellNum)};\n    const updatePassword = (password: any) => {setEnteredPassword(password)};\n    const updateConfirmPassword = (confirmPassword: any) => {setConfirmPassword(confirmPassword)};\n\n    let url = useHistory();\n\n    if (props.buttonName === \"Update\"){\n        \n    }\n    else{\n        \n    }\n\n    const buttonHandler = () => {\n      setShowLoader(true);\n      if (props.buttonName === \"Update\"){\n        let path = \"update\";\n\n        let payload: Admin = {\n          adminId: adminId,\n          name: enteredName,\n          surname: enteredSurname,\n          cellNum: enteredCellNum,\n          password: enteredPassword\n        }\n        url.push(\"/dashboard\");\n        console.log(payload);\n    }\n    else if(props.buttonName === \"Delete\"){\n        let path = \"remove\";\n        console.log(path);\n    }\n    else{\n      let path = \"signUp\";\n      let payload: Admin = {\n        adminId: adminId,\n        name: enteredName,\n        surname: enteredSurname,\n        cellNum: enteredCellNum,\n        password: enteredPassword\n      }\n\n      Connection.processPostRequest(payload, path, (response: any) =>{\n        mapPostResponse(response);\n      })\n      console.log(payload);\n      console.log(path);\n    }\n    };\n\n    const mapPostResponse = (response: any) =>{\n      if (response.type === \"error\") {\n        setShowLoader(false);\n        setErrorMessage(response.data);\n        setShowError(true);\n      } else {\n        setShowLoader(false);\n        url.push(\"/signIn\");\n      }\n    };\n  return (\n    <IonGrid>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Name</IonLabel>\n            <IonInput type=\"text\" value={enteredName} onIonChange={e => updateName(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Surname</IonLabel>\n            <IonInput type=\"text\" value={enteredSurname} onIonChange={e => updateSurname(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Cell Number</IonLabel>\n            <IonInput type=\"text\" value={enteredCellNum} onIonChange={e => updateCellNum(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Password</IonLabel>\n            <IonInput type=\"password\" value={enteredPassword} onIonChange={e => updatePassword(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Confrim Password</IonLabel>\n            <IonInput type=\"password\" value={confirmPassword} onIonChange={e => updateConfirmPassword(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonButton type=\"submit\" expand=\"block\" onClick={buttonHandler}>\n            {props.buttonName}\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default AdminForm;\n"]},"metadata":{},"sourceType":"module"}