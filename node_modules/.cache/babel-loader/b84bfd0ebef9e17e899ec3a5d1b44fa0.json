{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Management/Management.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { add } from 'ionicons/icons';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport Connection from '../../mixins/Connection';\nimport './Page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Management = () => {\n  _s();\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    name,\n    title\n  } = useParams();\n  const [packages, setPackages] = useState([{\n    packageId: \"\",\n    promotionId: \"\",\n    packageName: \"\",\n    minutes: 0,\n    standardPrice: \"\",\n    suvPrice: \"\",\n    description: \"\",\n    onPromotion: false\n  }]);\n\n  const getPackages = () => {\n    var url = 'package/getAll';\n    Connection.processGetRequest({}, url, response => {\n      mapResponse(response);\n    });\n  };\n\n  const mapResponse = response => {\n    if (response.type === 'error') {\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setPackages(response.data.data);\n    }\n  };\n\n  const addUrl = \"/add/\";\n  const result = {\n    id: \"\",\n    title: \"\",\n    subtitle: \"\"\n  };\n\n  if (title === \"agent\") {\n    const agent = {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\"\n    };\n    result.id = agent.agentId;\n    result.title = agent.name.concat(\" \", agent.surname);\n    result.subtitle = agent.complexName;\n  } else if (title === \"complex\") {\n    const complex = {\n      complexId: \"\",\n      name: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: []\n    };\n    result.id = complex.complexId;\n    result.title = complex.name;\n    result.subtitle = complex.street2;\n  } else if (title === \"package\") {\n    const pack = {\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: false\n    };\n    result.id = pack.packageId;\n    result.title = pack.packageName;\n    result.subtitle = pack.standardPrice;\n  } else {\n    const promotion = {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false\n    };\n    result.id = promotion.promotionId;\n    result.title = promotion.promotionName;\n    result.subtitle = promotion.standardPrice;\n  }\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonMenuButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: name.concat(\" Management\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: /*#__PURE__*/_jsxDEV(IonFab, {\n        vertical: \"bottom\",\n        horizontal: \"end\",\n        slot: \"fixed\",\n        children: /*#__PURE__*/_jsxDEV(IonFabButton, {\n          href: addUrl.concat(name, \"/\", title),\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            icon: add\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Management, \"bVLlL93jBntHI0zRnSuWA5XRw+o=\", false, function () {\n  return [useParams];\n});\n\n_c = Management;\nexport default Management;\n\nvar _c;\n\n$RefreshReg$(_c, \"Management\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/Management/Management.tsx"],"names":["IonButtons","IonContent","IonFab","IonFabButton","IonHeader","IonIcon","IonMenuButton","IonPage","IonTitle","IonToolbar","add","useState","useParams","Connection","Management","showLoader","setShowLoader","showError","setShowError","errorMessage","setErrorMessage","name","title","packages","setPackages","packageId","promotionId","packageName","minutes","standardPrice","suvPrice","description","onPromotion","getPackages","url","processGetRequest","response","mapResponse","type","data","addUrl","result","id","subtitle","agent","agentId","complexName","contractId","surname","cellNum","street1","street2","city","province","postalCode","password","concat","complex","complexId","telephoneNum","startTime","endTime","units","agents","pack","promotion","promotionName","isEnabled"],"mappings":"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","sourcesContent":["import { IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { add, card } from 'ionicons/icons';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '../../components/Card/Card';\nimport Connection from '../../mixins/Connection';\nimport './Page.css';\n\nconst Management: React.FC = () => {\n\n  const [ showLoader, setShowLoader ] = useState(false);\n  const [ showError, setShowError ] = useState(false);\n  const [ errorMessage, setErrorMessage ] = useState('');\n\n  const { name, title} = useParams<{ name: string, title: \"agent\" | \"complex\" | \"package\" | \"promotion\"}>();\n  const [ packages, setPackages ] = useState([{\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: false,\n  }]);\n\n  const getPackages = () =>{\n    var url = 'package/getAll';\n\n    Connection.processGetRequest({}, url, (response: any) => {\n      mapResponse(response);\n    })\n  }\n\n  const mapResponse = (response: any) => {\n    if(response.type === 'error'){\n      setErrorMessage(response.data)\n      setShowError(true);\n    }\n    else{\n      setPackages(response.data.data);\n    }\n  }\n\n  const addUrl = \"/add/\"\n\n  interface Result {\n    id: string;\n    title: string;\n    subtitle: string;\n  }\n\n  interface Agent {\n    agentId: string;\n    complexName: string;\n    contractId: string;\n    name: string;\n    surname: string;\n    id: string;\n    cellNum: string;\n    street1: string;\n    street2: string;\n    city: string;\n    province: string;\n    postalCode: string;\n    password: string;\n  }\n  \n  interface Complex {\n    complexId: string;\n    name: string;\n    street1: string;\n    street2: string;\n    city: string;\n    province: string;\n    postalCode: string;\n    telephoneNum: string;\n    startTime: string;\n    endTime: string;\n    cellNum: string;\n    units: [];\n    agents: [];\n  }\n  \n  interface Package {\n    packageId: string;\n    promotionId: string;\n    packageName: string;\n    minutes: number;\n    standardPrice: string;\n    suvPrice: string;\n    description: string;\n    onPromotion: boolean;\n  }\n  \n  interface Promotion {\n    promotionId: string;\n    promotionName: string;\n    packageName: string;\n    standardPrice: string;\n    suvPrice: string;\n    isEnabled: boolean;\n  }\n\n  const result: Result =(\n    {\n      id:\"\",\n      title:\"\",\n      subtitle:\"\",\n    }\n  );\n\n  if (title === \"agent\") {\n    const agent: Agent = {\n      agentId: \"\",\n      complexName: \"\",\n      contractId: \"\",\n      name: \"\",\n      surname: \"\",\n      id: \"\",\n      cellNum: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      password: \"\",\n    };\n\n    result.id = agent.agentId;\n    result.title = agent.name.concat(\" \",agent.surname);\n    result.subtitle = agent.complexName;\n\n  } else if (title === \"complex\") {\n    const complex: Complex = {\n      complexId: \"\",\n      name: \"\",\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      province: \"\",\n      postalCode: \"\",\n      telephoneNum: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      cellNum: \"\",\n      units: [],\n      agents: [],\n    };\n\n    result.id = complex.complexId;\n    result.title = complex.name;\n    result.subtitle = complex.street2;\n  } else if (title === \"package\") {\n    const pack: Package = {\n      packageId: \"\",\n      promotionId: \"\",\n      packageName: \"\",\n      minutes: 0,\n      standardPrice: \"\",\n      suvPrice: \"\",\n      description: \"\",\n      onPromotion: false,\n    };\n\n    result.id = pack.packageId;\n    result.title = pack.packageName;\n    result.subtitle = pack.standardPrice;\n  } else {\n    const promotion: Promotion = {\n      promotionId: \"\",\n      promotionName: \"\",\n      packageName: \"\",\n      standardPrice: \"\",\n      suvPrice: \"\",\n      isEnabled: false,\n    };\n\n    result.id = promotion.promotionId;\n    result.title = promotion.promotionName;\n    result.subtitle = promotion.standardPrice;\n  }\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name.concat(\" Management\")}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton href={addUrl.concat(name,\"/\",title)}>\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Management;\n"]},"metadata":{},"sourceType":"module"}