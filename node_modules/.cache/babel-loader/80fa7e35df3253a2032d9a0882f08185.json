{"ast":null,"code":"import _slicedToArray from\"/Users/onceknownriley/Documents/GreenWashProject/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{IonBackButton,IonButtons,IonContent,IonHeader,IonPage,IonTitle,IonToolbar}from\"@ionic/react\";import React,{useState}from\"react\";import AdminForm from\"../../components/Forms/AdminForm\";import InputControls from\"../../components/InputControls/InputControls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(){var admin={adminId:\"\",name:\"\",surname:\"\",cellNum:\"\",password:\"\"};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDisabled=_useState2[0],setIsDisabled=_useState2[1];var _useState3=useState(\"Update\"),_useState4=_slicedToArray(_useState3,2),selectedSegment=_useState4[0],setSelectedSegment=_useState4[1];var selectedSegmentHandler=function selectedSegmentHandler(selectedValue){setSelectedSegment(selectedValue);if(selectedValue==\"Delete\"){setIsDisabled(true);}else{setIsDisabled(false);}};return/*#__PURE__*/_jsxs(IonPage,{children:[/*#__PURE__*/_jsx(IonHeader,{children:/*#__PURE__*/_jsxs(IonToolbar,{color:\"primary\",children:[/*#__PURE__*/_jsx(IonButtons,{slot:\"start\",children:/*#__PURE__*/_jsx(IonBackButton,{})}),/*#__PURE__*/_jsx(IonTitle,{children:\"Profile\"})]})}),/*#__PURE__*/_jsxs(IonContent,{children:[/*#__PURE__*/_jsx(InputControls,{selectedValue:selectedSegment,onSelectedValue:selectedSegmentHandler}),/*#__PURE__*/_jsx(AdminForm,{buttonName:selectedSegment,content:admin,isDisabled:isDisabled})]})]});};export default Profile;","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Profile/Profile.tsx"],"names":["IonBackButton","IonButtons","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","React","useState","AdminForm","InputControls","Profile","admin","adminId","name","surname","cellNum","password","isDisabled","setIsDisabled","selectedSegment","setSelectedSegment","selectedSegmentHandler","selectedValue"],"mappings":"6KAAA,OACEA,aADF,CAEEC,UAFF,CAGEC,UAHF,CAIEC,SAJF,CAKEC,OALF,CAMEC,QANF,CAOEC,UAPF,KASO,cATP,CAUA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,8CAA1B,C,wFAEA,GAAMC,CAAAA,OAAiB,CAAG,QAApBA,CAAAA,OAAoB,EAAM,CAS9B,GAAMC,CAAAA,KAAY,CAClB,CACEC,OAAO,CAAE,EADX,CAEEC,IAAI,CAAC,EAFP,CAGEC,OAAO,CAAC,EAHV,CAIEC,OAAO,CAAC,EAJV,CAKEC,QAAQ,CAAC,EALX,CADA,CAQA,cAAoCT,QAAQ,CAAU,KAAV,CAA5C,wCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAA8CX,QAAQ,CAAsB,QAAtB,CAAtD,yCAAOY,eAAP,eAAwBC,kBAAxB,eACA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,aAAD,CAAwC,CACrEF,kBAAkB,CAACE,aAAD,CAAlB,CACA,GAAIA,aAAa,EAAI,QAArB,CAA+B,CAC7BJ,aAAa,CAAC,IAAD,CAAb,CACD,CAFD,IAEO,CACLA,aAAa,CAAC,KAAD,CAAb,CACD,CACF,CAPD,CASA,mBACE,MAAC,OAAD,yBACE,KAAC,SAAD,wBACE,MAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,wBACE,KAAC,UAAD,EAAY,IAAI,CAAC,OAAjB,uBACE,KAAC,aAAD,IADF,EADF,cAIE,KAAC,QAAD,sBAJF,GADF,EADF,cAUE,MAAC,UAAD,yBACA,KAAC,aAAD,EAAe,aAAa,CAAEC,eAA9B,CAA+C,eAAe,CAAEE,sBAAhE,EADA,cAEE,KAAC,SAAD,EAAW,UAAU,CAAEF,eAAvB,CAAwC,OAAO,CAAER,KAAjD,CAAwD,UAAU,CAAEM,UAApE,EAFF,GAVF,GADF,CAiBD,CA7CD,CA+CA,cAAeP,CAAAA,OAAf","sourcesContent":["import {\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport AdminForm from \"../../components/Forms/AdminForm\";\nimport InputControls from \"../../components/InputControls/InputControls\";\n\nconst Profile: React.FC = () => {\n  interface Admin{\n    adminId: string;\n    name: string;\n    surname: string;\n    cellNum: string;\n    password: string;\n  }\n\n  const admin: Admin =\n  {\n    adminId: \"\",\n    name:\"\",\n    surname:\"\",\n    cellNum:\"\",\n    password:\"\",\n  }\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\n  const [selectedSegment, setSelectedSegment] = useState<\"Update\" | \"Delete\">(\"Update\");\n  const selectedSegmentHandler = (selectedValue: \"Update\" | \"Delete\") => {\n    setSelectedSegment(selectedValue);\n    if (selectedValue == \"Delete\") {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton />\n          </IonButtons>\n          <IonTitle>Profile</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent >\n      <InputControls selectedValue={selectedSegment} onSelectedValue={selectedSegmentHandler}/>\n        <AdminForm buttonName={selectedSegment} content={admin} isDisabled={isDisabled}/>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}