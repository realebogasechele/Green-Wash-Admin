{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/SignIn/SignIn.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonButton, IonCard, IonCol, IonContent, IonGrid, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validEmail, validPassword } from \"../../components/Regex/Regex\";\nimport { Storage } from \"@capacitor/storage\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const path = useHistory();\n  let valid = false;\n  let load = false;\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cellNum, setCellNum] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [selection, setSelection] = useState(\"cell\");\n\n  const updateSelection = selection => {\n    setSelection(selection);\n    setEmail(\"\");\n    setCellNum(\"\");\n    setPassword(\"\");\n  };\n\n  const updateCellNum = cellNum => {\n    setCellNum(cellNum);\n  };\n\n  const updateEmail = email => {\n    setEmail(email);\n  };\n\n  const updatePassword = password => {\n    setPassword(password);\n  };\n\n  const setAdminId = async data => {\n    await Storage.set({\n      key: \"adminId\",\n      value: data\n    });\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n\n    if (selection === \"cell\") {\n      if (cellNum === \"\" || password === \"\") {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Fields cannot be empty.\");\n        setShowError(true);\n      } else if (!validCellNum.test(cellNum)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n        setShowError(true);\n      } else {\n        let url = \"login/cell/\".concat(cellNum, \"/\", password);\n        Connection.processGetRequest({}, url, response => mapResponse(response));\n      }\n    } else {\n      if (email === \"\" || password === \"\") {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Fields cannot be empty.\");\n        setShowError(true);\n      } else if (!validEmail.test(email)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Invalid Email.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n        setShowError(true);\n      } else {\n        let url = \"login/email/\".concat(email, \"/\", password);\n        Connection.processGetRequest({}, url, response => mapResponse(response));\n      }\n    }\n  };\n\n  const mapResponse = async response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    } else {\n      setShowLoader(false);\n      await setAdminId(response.data.data);\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n      console.log(response.data.data);\n    }\n  };\n\n  return _jsxDEV(IonPage, {\n    children: _jsxDEV(IonContent, {\n      children: [_jsxDEV(IonImg, {\n        src: TGWLogo,\n        alt: \"Logo.png\",\n        sx: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), _jsxDEV(IonToolbar, {\n        children: [_jsxDEV(IonLoading, {\n          cssClass: \"my-custom-class\",\n          showBackdrop: true,\n          isOpen: showLoader,\n          message: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), _jsxDEV(IonAlert, {\n          isOpen: showError,\n          onDidDismiss: () => setShowError(false),\n          header: \"Error\",\n          subHeader: \"Something went wrong.\",\n          message: errorMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), _jsxDEV(IonAlert, {\n          isOpen: showSuccess,\n          onDidDismiss: () => path.push(\"/dashboard\"),\n          header: \"Success\",\n          subHeader: successMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), _jsxDEV(IonCard, {\n          sx: {\n            mt: \"8vh\"\n          },\n          children: _jsxDEV(IonGrid, {\n            children: [_jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                offset: \"4\",\n                children: _jsxDEV(IonToolbar, {\n                  children: _jsxDEV(IonTitle, {\n                    size: \"large\",\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                children: selection === \"cell\" && _jsxDEV(IonItem, {\n                  children: [_jsxDEV(IonLabel, {\n                    position: \"floating\",\n                    children: \"Cell Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), _jsxDEV(IonInput, {\n                    value: cellNum,\n                    onIonChange: e => updateCellNum(e.detail.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                children: _jsxDEV(IonItem, {\n                  children: [_jsxDEV(IonLabel, {\n                    position: \"floating\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this), _jsxDEV(IonInput, {\n                    type: \"password\",\n                    value: password,\n                    onIonChange: e => updatePassword(e.detail.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                children: _jsxDEV(IonButton, {\n                  shape: \"round\",\n                  type: \"submit\",\n                  expand: \"block\",\n                  onClick: () => buttonHandler(),\n                  children: \"SignIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                offset: \"4\",\n                children: _jsxDEV(\"p\", {\n                  children: _jsxDEV(\"a\", {\n                    href: \"/forgot\",\n                    children: \"Forgot password ?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), _jsxDEV(IonRow, {\n              children: _jsxDEV(IonCol, {\n                offset: \"2.5\",\n                children: [\"Don't have an account ? \", _jsxDEV(\"a\", {\n                  href: \"/signUp\",\n                  children: \"Sign Up.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"fgyll7dIglfFzdAt/eBl6R7BoBA=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\nconst styles = {\n  img: {\n    pt: \"6vh\",\n    pl: \"4vh\",\n    pr: \"4vh\"\n  },\n  select: {\n    mt: \"15px\",\n    border: \"1px solid grey\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/SignIn/SignIn.tsx"],"names":["IonAlert","IonButton","IonCard","IonCol","IonContent","IonGrid","IonImg","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonTitle","IonToolbar","React","useState","useHistory","TGWLogo","Connection","validCellNum","validEmail","validPassword","Storage","SignIn","path","valid","load","showLoader","setShowLoader","showError","setShowError","showSuccess","setShowSuccess","successMessage","setSuccessMessage","errorMessage","setErrorMessage","cellNum","setCellNum","email","setEmail","password","setPassword","selection","setSelection","updateSelection","updateCellNum","updateEmail","updatePassword","setAdminId","data","set","key","value","buttonHandler","test","url","concat","processGetRequest","response","mapResponse","type","console","log","styles","img","push","mt","e","detail","pt","pl","pr","select","border"],"mappings":";;;AAAA;AACA,SACEA,QADF,EAGEC,SAHF,EAKEC,OALF,EAMEC,MANF,EAOEC,UAPF,EASEC,OATF,EAWEC,MAXF,EAYEC,QAZF,EAaEC,OAbF,EAcEC,QAdF,EAeEC,UAfF,EAgBEC,OAhBF,EAiBEC,MAjBF,EAoBEC,QApBF,EAsBEC,UAtBF,QAuBO,cAvBP;AAwBA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,aAAnC,QAAwD,8BAAxD;AACA,SAASC,OAAT,QAAwB,oBAAxB;;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,IAAI,GAAGR,UAAU,EAAvB;AAEA,MAAIS,KAAc,GAAG,KAArB;AACA,MAAIC,IAAa,GAAG,KAApB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,MAAD,CAA1C;;AAEA,QAAM8B,eAAe,GAAIF,SAAD,IAAoB;AAC1CC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GALD;;AAOA,QAAMI,aAAa,GAAIT,OAAD,IAAkB;AACtCC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAFD;;AAGA,QAAMU,WAAW,GAAIR,KAAD,IAAgB;AAClCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMS,cAAc,GAAIP,QAAD,IAAmB;AACxCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAG,MAAOC,IAAP,IAAqB;AACtC,UAAM5B,OAAO,CAAC6B,GAAR,CAAY;AAChBC,MAAAA,GAAG,EAAE,SADW;AAEhBC,MAAAA,KAAK,EAAEH;AAFS,KAAZ,CAAN;AAID,GALD;;AAOA,QAAMI,aAAa,GAAG,MAAM;AAC1B1B,IAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,QAAIe,SAAS,KAAK,MAAlB,EAA0B;AACxB,UAAIN,OAAO,KAAK,EAAZ,IAAkBI,QAAQ,KAAK,EAAnC,EAAuC;AACrCb,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,QAAAA,KAAK,GAAG,KAAR;AACAW,QAAAA,eAAe,CAAC,yBAAD,CAAf;AACAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALD,MAKO,IAAI,CAACX,YAAY,CAACoC,IAAb,CAAkBlB,OAAlB,CAAL,EAAiC;AACtCT,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,QAAAA,KAAK,GAAG,KAAR;AACAW,QAAAA,eAAe,CAAC,sBAAD,CAAf;AACAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALM,MAKA,IAAI,CAACT,aAAa,CAACkC,IAAd,CAAmBd,QAAnB,CAAL,EAAmC;AACxCb,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,QAAAA,KAAK,GAAG,KAAR;AACAW,QAAAA,eAAe,CACb,oGADa,CAAf;AAGAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAPM,MAOA;AACL,YAAI0B,GAAG,GAAG,cAAcC,MAAd,CAAqBpB,OAArB,EAA8B,GAA9B,EAAmCI,QAAnC,CAAV;AACAvB,QAAAA,UAAU,CAACwC,iBAAX,CAA6B,EAA7B,EAAiCF,GAAjC,EAAuCG,QAAD,IACpCC,WAAW,CAACD,QAAD,CADb;AAGD;AACF,KAxBD,MAwBO;AACL,UAAIpB,KAAK,KAAK,EAAV,IAAgBE,QAAQ,KAAK,EAAjC,EAAqC;AACnCb,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,QAAAA,KAAK,GAAG,KAAR;AACAW,QAAAA,eAAe,CAAC,yBAAD,CAAf;AACAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALD,MAKO,IAAI,CAACV,UAAU,CAACmC,IAAX,CAAgBhB,KAAhB,CAAL,EAA6B;AAClCX,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,QAAAA,KAAK,GAAG,KAAR;AACAW,QAAAA,eAAe,CAAC,gBAAD,CAAf;AACAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALM,MAKA,IAAI,CAACT,aAAa,CAACkC,IAAd,CAAmBd,QAAnB,CAAL,EAAmC;AACxCb,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,QAAAA,KAAK,GAAG,KAAR;AACAW,QAAAA,eAAe,CACb,oGADa,CAAf;AAGAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAPM,MAOA;AACL,YAAI0B,GAAG,GAAG,eAAeC,MAAf,CAAsBlB,KAAtB,EAA6B,GAA7B,EAAkCE,QAAlC,CAAV;AACAvB,QAAAA,UAAU,CAACwC,iBAAX,CAA6B,EAA7B,EAAiCF,GAAjC,EAAuCG,QAAD,IACpCC,WAAW,CAACD,QAAD,CADb;AAGD;AACF;AACF,GAnDD;;AAqDA,QAAMC,WAAW,GAAG,MAAMD,QAAN,IAAwB;AAC1C,QAAIA,QAAQ,CAACE,IAAT,KAAkB,OAAtB,EAA+B;AAC7BjC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAQ,MAAAA,eAAe,CAACuB,QAAQ,CAACT,IAAV,CAAf;AACApB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAPD,MAOO;AACLd,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA,YAAMqB,UAAU,CAACU,QAAQ,CAACT,IAAT,CAAcA,IAAf,CAAhB;AACAhB,MAAAA,iBAAiB,CAAC,uBAAD,CAAjB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACT,IAAT,CAAcA,IAA1B;AACD;AACF,GAfD;;AAiBA,SACE,QAAC,OAAD;AAAA,cACE,QAAC,UAAD;AAAA,iBACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEjC,OAAb;AAAsB,QAAA,GAAG,EAAE,UAA3B;AAAuC,QAAA,EAAE,EAAE+C,MAAM,CAACC;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,QAAC,UAAD;AAAA,mBACE,QAAC,UAAD;AACE,UAAA,QAAQ,EAAC,iBADX;AAEE,UAAA,YAAY,MAFd;AAGE,UAAA,MAAM,EAAEtC,UAHV;AAIE,UAAA,OAAO,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE,QAAC,QAAD;AACE,UAAA,MAAM,EAAEE,SADV;AAEE,UAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,KAAD,CAFlC;AAGE,UAAA,MAAM,EAAE,OAHV;AAIE,UAAA,SAAS,EAAE,uBAJb;AAKE,UAAA,OAAO,EAAEK,YALX;AAME,UAAA,OAAO,EAAE,CAAC,IAAD;AANX;AAAA;AAAA;AAAA;AAAA,gBARF,EAiBE,QAAC,QAAD;AACE,UAAA,MAAM,EAAEJ,WADV;AAEE,UAAA,YAAY,EAAE,MAAMP,IAAI,CAAC0C,IAAL,CAAU,YAAV,CAFtB;AAGE,UAAA,MAAM,EAAE,SAHV;AAIE,UAAA,SAAS,EAAEjC,cAJb;AAKE,UAAA,OAAO,EAAE,CAAC,IAAD;AALX;AAAA;AAAA;AAAA;AAAA,gBAjBF,EAwBE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE;AAAEkC,YAAAA,EAAE,EAAE;AAAN,WAAb;AAAA,oBACE,QAAC,OAAD;AAAA,uBACE,QAAC,MAAD;AAAA,wBACE,QAAC,MAAD;AAAQ,gBAAA,MAAM,EAAC,GAAf;AAAA,0BACE,QAAC,UAAD;AAAA,4BACE,QAAC,QAAD;AAAU,oBAAA,IAAI,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,EAQE,QAAC,MAAD;AAAA,wBACE,QAAC,MAAD;AAAA,0BACGxB,SAAS,KAAK,MAAd,IACC,QAAC,OAAD;AAAA,6BACE,QAAC,QAAD;AAAU,oBAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,QAAC,QAAD;AACE,oBAAA,KAAK,EAAEN,OADT;AAEE,oBAAA,WAAW,EAAG+B,CAAD,IAAOtB,aAAa,CAACsB,CAAC,CAACC,MAAF,CAAShB,KAAV;AAFnC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF,EAwCE,QAAC,MAAD;AAAA,wBACE,QAAC,MAAD;AAAA,0BACE,QAAC,OAAD;AAAA,6BACE,QAAC,QAAD;AAAU,oBAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,QAAC,QAAD;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,KAAK,EAAEZ,QAFT;AAGE,oBAAA,WAAW,EAAG2B,CAAD,IAAOpB,cAAc,CAACoB,CAAC,CAACC,MAAF,CAAShB,KAAV;AAHpC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAxCF,EAoDE,QAAC,MAAD;AAAA,wBACE,QAAC,MAAD;AAAA,0BACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAC,OADR;AAEE,kBAAA,IAAI,EAAC,QAFP;AAGE,kBAAA,MAAM,EAAC,OAHT;AAIE,kBAAA,OAAO,EAAE,MAAMC,aAAa,EAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApDF,EAgEE,QAAC,MAAD;AAAA,wBACE,QAAC,MAAD;AAAQ,gBAAA,MAAM,EAAC,GAAf;AAAA,0BACE;AAAA,4BACE;AAAG,oBAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhEF,EAuEE,QAAC,MAAD;AAAA,wBACE,QAAC,MAAD;AAAQ,gBAAA,MAAM,EAAC,KAAf;AAAA,uDAC0B;AAAG,kBAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAvEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+GD,CA9ND;;GAAM/B,M;UACSP,U;;;KADTO,M;AAgON,eAAeA,MAAf;AAEA,MAAMyC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AACHK,IAAAA,EAAE,EAAE,KADD;AAEHC,IAAAA,EAAE,EAAE,KAFD;AAGHC,IAAAA,EAAE,EAAE;AAHD,GADQ;AAMbC,EAAAA,MAAM,EAAE;AACNN,IAAAA,EAAE,EAAE,MADE;AAENO,IAAAA,MAAM,EAAE;AAFF;AANK,CAAf","sourcesContent":["/** @jsxImportSource theme-ui */\nimport {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCol,\n  IonContent,\n  IonFooter,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonSelect,\n  IonSelectOption,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validEmail, validPassword } from \"../../components/Regex/Regex\";\nimport { Storage } from \"@capacitor/storage\";\n\nconst SignIn: React.FC = () => {\n  const path = useHistory();\n\n  let valid: boolean = false;\n  let load: boolean = false;\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [cellNum, setCellNum] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [selection, setSelection] = useState(\"cell\");\n\n  const updateSelection = (selection: any) => {\n    setSelection(selection);\n    setEmail(\"\");\n    setCellNum(\"\");\n    setPassword(\"\");\n  };\n\n  const updateCellNum = (cellNum: any) => {\n    setCellNum(cellNum);\n  };\n  const updateEmail = (email: any) => {\n    setEmail(email);\n  };\n  const updatePassword = (password: any) => {\n    setPassword(password);\n  };\n\n  const setAdminId = async (data: any) => {\n    await Storage.set({\n      key: \"adminId\",\n      value: data,\n    });\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n    if (selection === \"cell\") {\n      if (cellNum === \"\" || password === \"\") {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Fields cannot be empty.\");\n        setShowError(true);\n      } else if (!validCellNum.test(cellNum)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        let url = \"login/cell/\".concat(cellNum, \"/\", password);\n        Connection.processGetRequest({}, url, (response: any) =>\n          mapResponse(response)\n        );\n      }\n    } else {\n      if (email === \"\" || password === \"\") {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Fields cannot be empty.\");\n        setShowError(true);\n      } else if (!validEmail.test(email)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\"Invalid Email.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        valid = false;\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        let url = \"login/email/\".concat(email, \"/\", password);\n        Connection.processGetRequest({}, url, (response: any) =>\n          mapResponse(response)\n        );\n      }\n    }\n  };\n\n  const mapResponse = async(response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    } else {\n      setShowLoader(false);\n      await setAdminId(response.data.data);\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n      console.log(response.data.data)\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonImg src={TGWLogo} alt={\"Logo.png\"} sx={styles.img} />\n        <IonToolbar>\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            showBackdrop\n            isOpen={showLoader}\n            message={\"Please wait...\"}\n          />\n\n          <IonAlert\n            isOpen={showError}\n            onDidDismiss={() => setShowError(false)}\n            header={\"Error\"}\n            subHeader={\"Something went wrong.\"}\n            message={errorMessage}\n            buttons={[\"OK\"]}\n          />\n\n          <IonAlert\n            isOpen={showSuccess}\n            onDidDismiss={() => path.push(\"/dashboard\")}\n            header={\"Success\"}\n            subHeader={successMessage}\n            buttons={[\"OK\"]}\n          />\n          <IonCard sx={{ mt: \"8vh\" }}>\n            <IonGrid>\n              <IonRow>\n                <IonCol offset=\"4\">\n                  <IonToolbar>\n                    <IonTitle size=\"large\">Sign In</IonTitle>\n                  </IonToolbar>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol>\n                  {selection === \"cell\" && (\n                    <IonItem>\n                      <IonLabel position=\"floating\">Cell Number</IonLabel>\n                      <IonInput\n                        value={cellNum}\n                        onIonChange={(e) => updateCellNum(e.detail.value)}\n                      ></IonInput>\n                    </IonItem>\n                  )}\n                  {/* {selection === \"email\" && (\n                    <IonItem>\n                      <IonLabel position=\"floating\">Email</IonLabel>\n                      <IonInput\n                        value={email}\n                        onIonChange={(e) => updateEmail(e.detail.value)}\n                      ></IonInput>\n                    </IonItem>\n                  )} */}\n                </IonCol>\n                {/* <IonCol size=\"5\">\n                  <IonSelect\n                    sx={styles.select}\n                    value={selection}\n                    onIonChange={(e) => updateSelection(e.detail.value)}\n                  >\n                    <IonSelectOption value=\"cell\">Cell Number</IonSelectOption>\n                    <IonSelectOption value=\"email\">Email</IonSelectOption>\n                  </IonSelect>\n                </IonCol> */}\n              </IonRow>\n              <IonRow>\n                <IonCol>\n                  <IonItem>\n                    <IonLabel position=\"floating\">Password</IonLabel>\n                    <IonInput\n                      type=\"password\"\n                      value={password}\n                      onIonChange={(e) => updatePassword(e.detail.value)}\n                    ></IonInput>\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol>\n                  <IonButton\n                    shape=\"round\"\n                    type=\"submit\"\n                    expand=\"block\"\n                    onClick={() => buttonHandler()}\n                  >\n                    SignIn\n                  </IonButton>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol offset=\"4\">\n                  <p>\n                    <a href=\"/forgot\">Forgot password ?</a>\n                  </p>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol offset=\"2.5\">\n                  Don't have an account ? <a href=\"/signUp\">Sign Up.</a>\n                </IonCol>\n              </IonRow>\n            </IonGrid>\n          </IonCard>\n        </IonToolbar>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n\nconst styles = {\n  img: {\n    pt: \"6vh\",\n    pl: \"4vh\",\n    pr: \"4vh\",\n  },\n  select: {\n    mt: \"15px\",\n    border: \"1px solid grey\",\n\n  },\n};\n"]},"metadata":{},"sourceType":"module"}