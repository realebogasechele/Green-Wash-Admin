{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonCol, IonGrid, IonInput, IonItem, IonLabel, IonRow } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminForm = props => {\n  _s();\n\n  const {\n    adminId,\n    name,\n    surname,\n    cellNum,\n    password\n  } = props.content;\n  const [enteredName, setEnteredName] = useState(name);\n  const [enteredSurname, setEnteredSurname] = useState(surname);\n  const [enteredCellNum, setEnteredCellNum] = useState(cellNum);\n  const [enteredPassword, setEnteredPassword] = useState(password);\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const updateName = name => {\n    setEnteredName(name);\n  };\n\n  const updateSurname = surname => {\n    setEnteredSurname(surname);\n  };\n\n  const updateCellNum = cellNum => {\n    setEnteredCellNum(cellNum);\n  };\n\n  const updatePassword = password => {\n    setEnteredPassword(password);\n  };\n\n  const updateConfirmPassword = confirmPassword => {\n    setConfirmPassword(confirmPassword);\n  };\n\n  let url;\n\n  if (props.buttonName === \"Update\") {\n    url = \"/dashboard\";\n  } else {\n    url = \"/signIn\";\n  }\n\n  const buttonHandler = () => {\n    if (props.buttonName === \"Update\") {\n      let path = \"update\";\n      let payload = {\n        adminId: adminId,\n        name: enteredName,\n        surname: enteredSurname,\n        cellNum: enteredCellNum,\n        password: enteredPassword\n      };\n      console.log(payload);\n    } else if (props.buttonName === \"Delete\") {\n      let path = \"remove\";\n      console.log(path);\n    } else {\n      let path = \"add\";\n      console.log(path);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonGrid, {\n    children: [/*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredName,\n            onIonChange: e => updateName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredSurname,\n            onIonChange: e => updateSurname(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Cell Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredCellNum,\n            onIonChange: e => updateCellNum(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            value: enteredPassword,\n            onIonChange: e => updatePassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Confrim Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            value: confirmPassword,\n            onIonChange: e => updateConfirmPassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonButton, {\n          href: url,\n          type: \"submit\",\n          expand: \"block\",\n          children: props.buttonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminForm, \"4ZyaIUf3AVyDmj6uoweMkZj1AjI=\");\n\n_c = AdminForm;\nexport default AdminForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminForm\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx"],"names":["IonButton","IonCol","IonGrid","IonInput","IonItem","IonLabel","IonRow","React","useState","AdminForm","props","adminId","name","surname","cellNum","password","content","enteredName","setEnteredName","enteredSurname","setEnteredSurname","enteredCellNum","setEnteredCellNum","enteredPassword","setEnteredPassword","confirmPassword","setConfirmPassword","updateName","updateSurname","updateCellNum","updatePassword","updateConfirmPassword","url","buttonName","buttonHandler","path","payload","console","log","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonRow,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\n\ninterface Admin{\n    adminId: string;\n    name: string;\n    surname: string;\n    cellNum: string;\n    password: string;\n}\n\nconst AdminForm: React.FC<{ buttonName: string, content: Admin}> = (props) => {\n    const {adminId, name, surname, cellNum, password} = props.content;\n\n    const [enteredName, setEnteredName] = useState(name);\n    const [enteredSurname, setEnteredSurname] = useState(surname);\n    const [enteredCellNum, setEnteredCellNum] = useState(cellNum);\n    const [enteredPassword, setEnteredPassword] = useState(password);\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const updateName = (name: any) => {setEnteredName(name)};\n    const updateSurname = (surname: any) => {setEnteredSurname(surname)};\n    const updateCellNum = (cellNum: any) => {setEnteredCellNum(cellNum)};\n    const updatePassword = (password: any) => {setEnteredPassword(password)};\n    const updateConfirmPassword = (confirmPassword: any) => {setConfirmPassword(confirmPassword)};\n\n    let url;\n\n    if (props.buttonName === \"Update\"){\n        url = \"/dashboard\";\n    }\n    else{\n        url = \"/signIn\";\n    }\n\n    const buttonHandler = () =>{\n      if (props.buttonName === \"Update\"){\n        let path = \"update\";\n\n        let payload: Admin = {\n          adminId: adminId,\n          name: enteredName,\n          surname: enteredSurname,\n          cellNum: enteredCellNum,\n          password: enteredPassword\n        }\n        console.log(payload);\n    }\n    else if(props.buttonName === \"Delete\"){\n        let path = \"remove\";\n        console.log(path);\n    }\n    else{\n      let path = \"add\";\n      console.log(path);\n    }\n    };\n  return (\n    <IonGrid>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Name</IonLabel>\n            <IonInput type=\"text\" value={enteredName} onIonChange={e => updateName(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Surname</IonLabel>\n            <IonInput type=\"text\" value={enteredSurname} onIonChange={e => updateSurname(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Cell Number</IonLabel>\n            <IonInput type=\"text\" value={enteredCellNum} onIonChange={e => updateCellNum(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Password</IonLabel>\n            <IonInput type=\"password\" value={enteredPassword} onIonChange={e => updatePassword(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Confrim Password</IonLabel>\n            <IonInput type=\"password\" value={confirmPassword} onIonChange={e => updateConfirmPassword(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonButton href={url} type=\"submit\" expand=\"block\">\n            {props.buttonName}\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default AdminForm;\n"]},"metadata":{},"sourceType":"module"}