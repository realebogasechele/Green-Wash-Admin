{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/CardDetails/CardDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonBackButton, IonButtons, IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport MultiForm from \"../MultiForm/MultiForm\";\nimport InputControls from \"../InputControls/InputControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDetails = () => {\n  _s();\n\n  const [selectedSegment, setSelectedSegment] = useState(\"Update\");\n  const {\n    name,\n    type\n  } = useParams();\n\n  const selectedSegmentHandler = selectedValue => {\n    setSelectedSegment(selectedValue);\n  };\n\n  const url = \"/\";\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonBackButton, {\n            defaultHref: url.concat(name).concat(\"/\").concat(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(InputControls, {\n        selectedValue: selectedSegment,\n        onSelectedValue: selectedSegmentHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MultiForm, {\n        buttonName: selectedSegment,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardDetails, \"G7ODZkqmPUdmJVawYJJ/ac42flo=\", false, function () {\n  return [useParams];\n});\n\n_c = CardDetails;\nexport default CardDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDetails\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/components/CardDetails/CardDetails.tsx"],"names":["IonBackButton","IonButtons","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","React","useState","useParams","MultiForm","InputControls","CardDetails","selectedSegment","setSelectedSegment","name","type","selectedSegmentHandler","selectedValue","url","concat"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,UAFF,EAIEC,UAJF,EAMEC,SANF,EAUEC,OAVF,EAYEC,QAZF,EAaEC,UAbF,QAcO,cAdP;AAeA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAsB,QAAtB,CAAtD;AAEF,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBP,SAAS,EAAhC;;AAEA,QAAMQ,sBAAsB,GAAIC,aAAD,IAAwC;AACnEJ,IAAAA,kBAAkB,CAACI,aAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,GAAG,GAAG,GAAZ;AAEA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,WAAW,EAAEA,GAAG,CAACC,MAAJ,CAAWL,IAAX,EAAiBK,MAAjB,CAAwB,GAAxB,EAA6BA,MAA7B,CAAoCJ,IAApC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD;AAAA,oBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,UAAD;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEF,eAA9B;AAA+C,QAAA,eAAe,EAAEI;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAY,QAAA,UAAU,EAAEJ,eAAxB;AAAyC,QAAA,IAAI,EAAEG;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3BD;;GAAMJ,W;UAGmBH,S;;;KAHnBG,W;AA6BN,eAAeA,WAAf","sourcesContent":["import {\n  IonBackButton,\n  IonButtons,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport MultiForm from \"../MultiForm/MultiForm\";\nimport InputControls from \"../InputControls/InputControls\";\n\nconst CardDetails: React.FC = () => {\n    const [selectedSegment, setSelectedSegment] = useState<\"Update\" | \"Delete\">(\"Update\");\n\n  const { name, type } = useParams<{ name: string, type: \"agent\" | \"complex\" |\"package\" | \"promotion\"}>();\n\n  const selectedSegmentHandler = (selectedValue: \"Update\" | \"Delete\") => {\n      setSelectedSegment(selectedValue);\n  };\n\n  const url = \"/\";\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref={url.concat(name).concat(\"/\").concat(type)}/>\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          <InputControls selectedValue={selectedSegment} onSelectedValue={selectedSegmentHandler}/>\n          <MultiForm  buttonName={selectedSegment} type={type}/>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CardDetails;\n"]},"metadata":{},"sourceType":"module"}