{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonCol, IonGrid, IonInput, IonItem, IonLabel, IonRow } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminForm = props => {\n  _s();\n\n  const {\n    name,\n    surname,\n    cellNum,\n    password\n  } = props.content;\n  const [enteredName, setEnteredName] = useState(name);\n  const [enteredSurname, setEnteredSurname] = useState(surname);\n  const [enteredCellNum, setEnteredCellNum] = useState(cellNum);\n  const [enteredPassword, setEnteredPassword] = useState(password);\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const updateName = name => {\n    setEnteredName(name);\n  };\n\n  const updateSurname = surname => {\n    setEnteredSurname(surname);\n  };\n\n  const updateCellNum = cellNum => {\n    setEnteredCellNum(cellNum);\n  };\n\n  const updatePassword = password => {\n    setEnteredPassword(password);\n  };\n\n  const updateConfirmPassword = confirmPassword => {\n    setConfirmPassword(confirmPassword);\n  };\n\n  let url;\n\n  if (props.buttonName === \"Update\") {\n    url = \"/dashboard\";\n  } else {\n    url = \"/signIn\";\n  }\n\n  const buttonHandler = () => {\n    if (props.buttonName === \"Update\") {\n      let path = \"update\";\n    } else if (props.buttonName === \"Delete\") {\n      let path = \"/remove\";\n    } else {\n      let path = \"add\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonGrid, {\n    children: [/*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredName,\n            onIonChange: e => updateName(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredSurname,\n            onIonChange: e => updateSurname(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Cell Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"text\",\n            value: enteredCellNum,\n            onIonChange: e => updateCellNum(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            value: enteredPassword,\n            onIonChange: e => updatePassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"Confrim Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            value: confirmPassword,\n            onIonChange: e => updateConfirmPassword(e.detail.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: /*#__PURE__*/_jsxDEV(IonCol, {\n        children: /*#__PURE__*/_jsxDEV(IonButton, {\n          href: url,\n          type: \"submit\",\n          expand: \"block\",\n          children: props.buttonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminForm, \"4ZyaIUf3AVyDmj6uoweMkZj1AjI=\");\n\n_c = AdminForm;\nexport default AdminForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminForm\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/components/Forms/AdminForm.tsx"],"names":["IonButton","IonCol","IonGrid","IonInput","IonItem","IonLabel","IonRow","React","useState","AdminForm","props","name","surname","cellNum","password","content","enteredName","setEnteredName","enteredSurname","setEnteredSurname","enteredCellNum","setEnteredCellNum","enteredPassword","setEnteredPassword","confirmPassword","setConfirmPassword","updateName","updateSurname","updateCellNum","updatePassword","updateConfirmPassword","url","buttonName","buttonHandler","path","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonButton,\n  IonCol,\n  IonGrid,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonRow,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\n\ninterface Admin{\n    name: string;\n    surname: string;\n    cellNum: string;\n    password: string;\n}\n\nconst AdminForm: React.FC<{ buttonName: string, content: Admin}> = (props) => {\n    const {name, surname, cellNum, password} = props.content;\n\n    const [enteredName, setEnteredName] = useState(name);\n    const [enteredSurname, setEnteredSurname] = useState(surname);\n    const [enteredCellNum, setEnteredCellNum] = useState(cellNum);\n    const [enteredPassword, setEnteredPassword] = useState(password);\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const updateName = (name: any) => {setEnteredName(name)};\n    const updateSurname = (surname: any) => {setEnteredSurname(surname)};\n    const updateCellNum = (cellNum: any) => {setEnteredCellNum(cellNum)};\n    const updatePassword = (password: any) => {setEnteredPassword(password)};\n    const updateConfirmPassword = (confirmPassword: any) => {setConfirmPassword(confirmPassword)};\n\n    let url;\n\n    if (props.buttonName === \"Update\"){\n        url = \"/dashboard\";\n    }\n    else{\n        url = \"/signIn\";\n    }\n\n    const buttonHandler = () =>{\n      if (props.buttonName === \"Update\"){\n        let path = \"update\";\n    }\n    else if(props.buttonName === \"Delete\"){\n        let path = \"/remove\";\n    }\n    else{\n      let path = \"add\";\n    }\n    };\n  return (\n    <IonGrid>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Name</IonLabel>\n            <IonInput type=\"text\" value={enteredName} onIonChange={e => updateName(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Surname</IonLabel>\n            <IonInput type=\"text\" value={enteredSurname} onIonChange={e => updateSurname(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Cell Number</IonLabel>\n            <IonInput type=\"text\" value={enteredCellNum} onIonChange={e => updateCellNum(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Password</IonLabel>\n            <IonInput type=\"password\" value={enteredPassword} onIonChange={e => updatePassword(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Confrim Password</IonLabel>\n            <IonInput type=\"password\" value={confirmPassword} onIonChange={e => updateConfirmPassword(e.detail.value)}/>\n          </IonItem>\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <IonButton href={url} type=\"submit\" expand=\"block\">\n            {props.buttonName}\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default AdminForm;\n"]},"metadata":{},"sourceType":"module"}