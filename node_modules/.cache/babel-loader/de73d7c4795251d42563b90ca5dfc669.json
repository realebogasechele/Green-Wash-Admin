{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Recover Account/RecoverOtp.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonBackButton, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCol, IonContent, IonGrid, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { validOtp } from \"../../components/Regex/Regex\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst RecoverOtp = () => {\n  _s();\n\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const updateOtp = otp => setOtp(otp);\n\n  const resendOtp = () => {\n    console.log(\"Yeah\");\n  };\n\n  const buttonHandler = () => {\n    if (!validOtp.test(otp)) {\n      setShowLoader(false);\n      setMessage(\"Invalid Otp\");\n      setShowError(true);\n    } else {\n      console.log(\"true\");\n    }\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          children: _jsxDEV(IonBackButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Verify Otp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonGrid, {\n        children: _jsxDEV(IonRow, {\n          children: _jsxDEV(IonCol, {\n            children: _jsxDEV(IonCard, {\n              sx: styles.card,\n              children: [_jsxDEV(IonCardHeader, {\n                children: _jsxDEV(IonCardSubtitle, {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: \"Enter the otp that was sent to the respective choice of medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), _jsxDEV(IonCardContent, {\n                children: [_jsxDEV(IonRow, {\n                  children: _jsxDEV(IonCol, {\n                    children: _jsxDEV(IonItem, {\n                      children: [_jsxDEV(IonLabel, {\n                        position: \"floating\",\n                        children: \"One-Time Pin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 25\n                      }, this), _jsxDEV(IonInput, {\n                        type: \"text\",\n                        value: otp,\n                        onIonChange: e => updateOtp(e.detail.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), _jsxDEV(IonRow, {\n                  children: _jsxDEV(IonCol, {\n                    children: _jsxDEV(IonButton, {\n                      type: \"submit\",\n                      expand: \"block\",\n                      shape: \"round\",\n                      sx: styles.button,\n                      children: \"Verify\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), _jsxDEV(IonRow, {\n                  children: _jsxDEV(IonCol, {\n                    children: _jsxDEV(\"p\", {\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: [\"Didn't recieve it ? \", _jsxDEV(\"a\", {\n                        onClick: () => resendOtp(),\n                        children: \"Resend One-Time Pin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 80\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecoverOtp, \"Dje7oeGRQi5UzNydmGd0DdigVbE=\");\n\n_c = RecoverOtp;\nexport default RecoverOtp;\nconst styles = {\n  card: {\n    mt: \"24vh\"\n  },\n  button: {\n    mt: \"3\",\n    mb: \"4\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoverOtp\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Recover Account/RecoverOtp.tsx"],"names":["IonBackButton","IonButton","IonButtons","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCol","IonContent","IonGrid","IonHeader","IonInput","IonItem","IonLabel","IonPage","IonRow","IonTitle","IonToolbar","React","useState","validOtp","RecoverOtp","otp","setOtp","message","setMessage","showError","setShowError","showLoader","setShowLoader","showSuccess","setShowSuccess","updateOtp","resendOtp","console","log","buttonHandler","test","styles","card","textAlign","e","detail","value","button","mt","mb"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport {\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { validOtp } from \"../../components/Regex/Regex\";\n\nconst RecoverOtp: React.FC = () => {\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const updateOtp = (otp: any) => setOtp(otp);\n\n  const resendOtp = () => {\n      console.log(\"Yeah\");\n  };\n\n  const buttonHandler = () => {\n      if(!validOtp.test(otp)){\n          setShowLoader(false);\n          setMessage(\"Invalid Otp\");\n          setShowError(true);\n      }else{\n          console.log(\"true\");\n      }\n  };\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons>\n            <IonBackButton />\n          </IonButtons>\n          <IonTitle>Verify Otp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <IonCard sx={styles.card}>\n                <IonCardHeader>\n                  <IonCardSubtitle style={{ textAlign: \"center\" }}>\n                    Enter the otp that was sent to the respective choice of\n                    medium\n                  </IonCardSubtitle>\n                </IonCardHeader>\n                <IonCardContent>\n                  <IonRow>\n                    <IonCol>\n                      <IonItem>\n                        <IonLabel position=\"floating\">One-Time Pin</IonLabel>\n                        <IonInput\n                          type=\"text\"\n                          value={otp}\n                          onIonChange={(e) => updateOtp(e.detail.value)}\n                        />\n                      </IonItem>\n                    </IonCol>\n                  </IonRow>\n                  <IonRow>\n                      <IonCol>\n                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" sx={styles.button}>Verify</IonButton>\n                      </IonCol>\n                  </IonRow>\n                  <IonRow>\n                      <IonCol>\n                          <p style={{textAlign: \"center\"}}>Didn't recieve it ? <a onClick={()=>resendOtp()}>Resend One-Time Pin</a></p>\n                      </IonCol>\n                  </IonRow>\n                </IonCardContent>\n              </IonCard>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default RecoverOtp;\n\nconst styles = {\n    card:{\n        mt: \"24vh\",\n    },\n    button: {\n        mt: \"3\",\n        mb: \"4\",\n    },\n};\n"]},"metadata":{},"sourceType":"module"}