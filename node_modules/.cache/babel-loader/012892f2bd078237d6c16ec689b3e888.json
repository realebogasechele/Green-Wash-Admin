{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Clients/Clients.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonButtons, IonContent, IonGrid, IonHeader, IonIcon, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport { informationCircle } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport ClientCard from \"../../components/Card/ClientCard\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst Clients = () => {\n  _s();\n\n  useIonViewWillEnter(() => {\n    getClients();\n  });\n\n  const getClients = () => {\n    setShowLoader(true);\n    let url = 'client/get/all';\n    Connection.processGetRequest({}, url, response => mapResponse(response));\n  };\n\n  const mapResponse = response => {\n    if (response.type === 'error') {\n      setShowLoader(false);\n      setMessage(response.data);\n      setShowError(true);\n    } else {\n      setClients(response.data.data);\n      setShowLoader(false);\n    }\n  };\n\n  const [showLoader, setShowLoader] = useState(true);\n  const [showError, setShowError] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [clients, setClients] = useState([{\n    clientId: \"\",\n    complexName: \"Park Square\",\n    name: \"Justin\",\n    surname: \"Gabriel\",\n    cellNum: \"\",\n    email: \"\",\n    password: \"\",\n    deviceId: \"\",\n    otp: \"\"\n  }]);\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: _jsxDEV(IonMenuButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Client Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonGrid, {\n        children: [clients[0].clientId !== \"\" && _jsxDEV(IonRow, {\n          sx: styles.row,\n          children: _jsxDEV(\"h2\", {\n            sx: styles.heading.info,\n            children: [_jsxDEV(IonIcon, {\n              icon: informationCircle,\n              sx: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), \"Click on a card if you would like to remove a client\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), clients[0].clientId !== \"\" && clients.map(client => _jsxDEV(ClientCard, {\n          id: client.clientId,\n          name: client.name,\n          surname: client.surname,\n          complexName: client.complexName\n        }, client.clientId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)), clients[0].clientId === \"\" && _jsxDEV(\"h2\", {\n          sx: styles.heading,\n          children: \"No Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clients, \"BX8ponjXIUFkM9X+oHNel+kW00U=\", false, function () {\n  return [useIonViewWillEnter];\n});\n\n_c = Clients;\nexport default Clients;\nconst styles = {\n  row: {\n    m: '3',\n    mt: '0',\n    mb: '0',\n    p: '2',\n    pt: '0',\n    opacity: '0.6'\n  },\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"grey\",\n    mt: \"40vh\",\n    opacity: \"0.5\",\n    info: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      color: \"grey\",\n      fontSize: \"15px\"\n    }\n  },\n  icon: {\n    pr: \"1vh\",\n    pt: \"2px\",\n    size: \"30px\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Clients\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Clients/Clients.tsx"],"names":["IonButtons","IonContent","IonGrid","IonHeader","IonIcon","IonMenuButton","IonPage","IonRow","IonTitle","IonToolbar","useIonViewWillEnter","informationCircle","React","useState","ClientCard","Connection","Clients","getClients","setShowLoader","url","processGetRequest","response","mapResponse","type","setMessage","data","setShowError","setClients","showLoader","showError","message","clients","clientId","complexName","name","surname","cellNum","email","password","deviceId","otp","styles","row","heading","info","icon","map","client","m","mt","mb","p","pt","opacity","display","justifyContent","color","fontSize","pr","size"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport {\n  IonButtons,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonIcon,\n  IonMenuButton,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport { information, informationCircle } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport ClientCard from \"../../components/Card/ClientCard\";\nimport Connection from \"../../mixins/Connection\";\n\nconst Clients: React.FC = () => {\n    useIonViewWillEnter(()=>{\n        getClients();\n    })\n    const getClients = () => {\n        setShowLoader(true);\n        let url = 'client/get/all';\n        Connection.processGetRequest({}, url, (response: any) => mapResponse(response))\n    };\n    const mapResponse = (response: any) => {\n        if(response.type === 'error'){\n            setShowLoader(false);\n            setMessage(response.data);\n            setShowError(true);\n        }else{\n            setClients(response.data.data);\n            setShowLoader(false);\n        }\n    };\n    const [showLoader, setShowLoader] = useState(true);\n    const [showError, setShowError] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [clients, setClients] = useState([\n    {\n      clientId: \"\",\n      complexName: \"Park Square\",\n      name: \"Justin\",\n      surname: \"Gabriel\",\n      cellNum: \"\",\n      email: \"\",\n      password: \"\",\n      deviceId: \"\",\n      otp: \"\",\n    },\n  ]);\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>Client Management</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          {clients[0].clientId !== \"\" && (\n            <IonRow sx={styles.row}>\n              <h2 sx={styles.heading.info}>\n                <IonIcon icon={informationCircle} sx={styles.icon} />\n                Click on a card if you would like to remove a client\n              </h2>\n            </IonRow>\n          )}\n          {clients[0].clientId !== \"\" &&\n            clients.map((client) => (\n              <ClientCard\n                key={client.clientId}\n                id={client.clientId}\n                name={client.name}\n                surname={client.surname}\n                complexName={client.complexName}\n              />\n            ))}\n          {clients[0].clientId === \"\" && (\n            <h2 sx={styles.heading}>No Clients</h2>\n          )}\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Clients;\n\nconst styles = {\n  row: {\n      m: '3',\n      mt: '0',\n      mb: '0',\n      p:'2',\n      pt:'0',\n      opacity: '0.6'\n  },\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"grey\",\n    mt: \"40vh\",\n    opacity: \"0.5\",\n\n    info: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      color: \"grey\",\n      fontSize: \"15px\",\n    },\n  },\n  icon: {\n    pr: \"1vh\",\n    pt: \"2px\",\n    size: \"30px\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}