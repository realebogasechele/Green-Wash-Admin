{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/Otp.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { Storage } from \"@capacitor/storage\";\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCol, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validOtp } from \"../../components/Regex/Regex\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst Otp = () => {\n  _s();\n\n  const path = useHistory();\n  const [otp, setOtp] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const updateOtp = otp => setOtp(otp.target.value);\n\n  const buttonHandler = () => {\n    if (otp === \"\") {\n      setShowLoader(false);\n      setErrorMessage(\"Please enter One-Time Pin.\");\n      setShowError(true);\n    } else if (!validOtp.test(otp)) {\n      setShowLoader(false);\n      setErrorMessage(\"Invalid One-Time Pin.\");\n      setShowError(true);\n    } else {\n      getAdminId();\n    }\n  };\n\n  const getAdminId = async () => {\n    const response = await Storage.get({\n      key: \"adminId\"\n    });\n    const id = response.value;\n    let date = new Date();\n    let time = date.toISOString();\n    verifyOtp(time, id);\n  };\n\n  const verifyOtp = (time, id) => {\n    let url = \"forgot/verifyOtp/\".concat(otp, \"/\", time, \"/\", 'sechele.rk@gmail.com');\n    Connection.processPostRequest({}, url, response => mapResponse(response));\n  };\n\n  const mapResponse = response => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      console.log(response.data.data);\n      path.push(\"/newPassword\");\n    }\n  };\n\n  const resendOtp = () => {\n    console.log('click');\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      subHeader: \"Something went wrong.\",\n      message: errorMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: _jsxDEV(IonTitle, {\n          children: \"One-Time Pin Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonCard, {\n        sx: styles.card,\n        children: [_jsxDEV(IonCardHeader, {\n          children: _jsxDEV(IonCardSubtitle, {\n            children: \"Please Enter the One-Time Pin sent to your phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), _jsxDEV(IonCardContent, {\n          children: [_jsxDEV(IonItem, {\n            sx: styles.input,\n            children: [_jsxDEV(IonLabel, {\n              position: \"floating\",\n              children: \"One-Time Pin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), _jsxDEV(IonInput, {\n              type: \"text\",\n              onIonChange: e => updateOtp(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: [_jsxDEV(IonCol, {\n              size: \"8\",\n              children: [\" \", _jsxDEV(\"p\", {\n                children: [\" No Code ? \", _jsxDEV(\"span\", {\n                  sx: styles.resend,\n                  onClick: resendOtp,\n                  children: \"Resend Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), _jsxDEV(IonCol, {\n              children: _jsxDEV(IonButton, {\n                type: \"submit\",\n                shape: \"round\",\n                expand: \"block\",\n                onClick: () => buttonHandler(),\n                children: \"Verify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Otp, \"tyLx06DdiyrLjZi35qyKxwzQlvg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Otp;\nexport default Otp;\nconst styles = {\n  resend: {\n    color: 'green',\n    textDecoration: 'underline'\n  },\n  button: {\n    mt: '-1'\n  },\n  input: {\n    mb: \"4\"\n  },\n  card: {\n    mt: \"28vh\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Otp\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/Otp.tsx"],"names":["Storage","IonAlert","IonButton","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCol","IonContent","IonHeader","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonTitle","IonToolbar","React","useState","useHistory","validOtp","Connection","Otp","path","otp","setOtp","errorMessage","setErrorMessage","showError","setShowError","showLoader","setShowLoader","updateOtp","target","value","buttonHandler","test","getAdminId","response","get","key","id","date","Date","time","toISOString","verifyOtp","url","concat","processPostRequest","mapResponse","type","data","console","log","push","resendOtp","styles","card","input","e","resend","color","textDecoration","button","mt","mb"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { Storage } from \"@capacitor/storage\";\nimport {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { Link } from \"@theme-ui/components\";\nimport { verify } from \"crypto\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validOtp } from \"../../components/Regex/Regex\";\nimport Connection from \"../../mixins/Connection\";\n\nconst Otp: React.FC = () => {\n  const path = useHistory();\n  const [otp, setOtp] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const updateOtp = (otp: any) => setOtp(otp.target.value);\n\n  const buttonHandler = () => {\n    if (otp === \"\") {\n      setShowLoader(false);\n      setErrorMessage(\"Please enter One-Time Pin.\");\n      setShowError(true);\n    } else if (!validOtp.test(otp)) {\n      setShowLoader(false);\n      setErrorMessage(\"Invalid One-Time Pin.\");\n      setShowError(true);\n    } else {\n      getAdminId();\n    }\n  };\n\n  const getAdminId = async () => {\n    const response: any = await Storage.get({\n      key: \"adminId\",\n    });\n    const id = response.value;\n\n    let date = new Date();\n    let time = date.toISOString();\n\n    verifyOtp(time, id);\n  };\n\n  const verifyOtp = (time: any, id: any) => {\n    let url = \"forgot/verifyOtp/\".concat(otp, \"/\", time, \"/\", 'sechele.rk@gmail.com');\n    Connection.processPostRequest({}, url, (response: any) =>\n      mapResponse(response)\n    );\n  };\n\n  const mapResponse = (response: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      console.log(response.data.data)\n      path.push(\"/newPassword\");\n    }\n  };\n\n  const resendOtp = () => {\n    console.log('click')\n  };\n\n  return (\n    <IonPage>\n      <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>One-Time Pin Validation</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard sx={styles.card}>\n          <IonCardHeader>\n            <IonCardSubtitle>\n              Please Enter the One-Time Pin sent to your phone:\n            </IonCardSubtitle>\n          </IonCardHeader>\n          <IonCardContent>\n            <IonItem sx={styles.input}>\n              <IonLabel position=\"floating\">One-Time Pin</IonLabel>\n              <IonInput type=\"text\" onIonChange={(e) => updateOtp(e)} />\n            </IonItem>\n            <IonRow>\n              <IonCol size='8'> <p> No Code ? <span sx={styles.resend} onClick={resendOtp}>Resend Code</span></p></IonCol>\n              <IonCol>\n            <IonButton\n              type=\"submit\"\n              shape=\"round\"\n              expand=\"block\"\n              onClick={() => buttonHandler()}\n            >\n              Verify\n            </IonButton>\n            </IonCol>\n            </IonRow>\n          </IonCardContent>\n        </IonCard>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Otp;\n\nconst styles = {\n  resend:{\n    color: 'green',\n    textDecoration: 'underline',\n  },\n  button:{\n    mt: '-1',\n  },\n  input: {\n    mb: \"4\",\n  },\n\n  card: {\n    mt: \"28vh\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}