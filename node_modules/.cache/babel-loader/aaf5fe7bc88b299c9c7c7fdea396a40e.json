{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/ForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonBackButton, IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validCellNum, validEmail } from \"../../components/Regex/Regex\";\nimport Connection from \"../../mixins/Connection\";\nimport { Storage } from \"@capacitor/storage\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const path = useHistory();\n  const [cellNum, setCellNum] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [selection, setSelection] = useState(\"cell\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const updateCellNum = cellNum => setCellNum(cellNum);\n\n  const updateEmail = email => setEmail(email);\n\n  const updateSelection = selection => {\n    setSelection(selection);\n    setCellNum('');\n    setEmail('');\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n\n    if (selection === \"cell\") {\n      if (cellNum !== \"\") {\n        if (validCellNum.test(cellNum)) {\n          let url = \"forgot/verify/\".concat(selection, '/', cellNum);\n          Connection.processPostRequest({}, url, response => mapResponse(response, cellNum, selection));\n        } else {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Cell Number.\");\n          setShowError(true);\n        }\n      } else {\n        setShowLoader(false);\n        setErrorMessage(\"You need to provide a cell number to continue.\");\n        setShowError(true);\n      }\n    } else {\n      if (email !== '') {\n        if (validEmail.test(email)) {\n          let url = \"forgot/verify/\".concat(selection, '/', email);\n          Connection.processPostRequest({}, url, response => mapResponse(response, email, selection));\n        } else {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Email.\");\n          setShowError(true);\n        }\n      } else {\n        setShowLoader(false);\n        setErrorMessage(\"You need to provide an email to continue.\");\n        setShowError(true);\n      }\n    }\n  };\n\n  const mapResponse = (response, id, type) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setIdentifier(id);\n      setType(type);\n      setAdminId(response.data.data);\n      path.push(\"/forgot/otp\");\n    }\n  };\n\n  const setAdminId = async data => {\n    await Storage.set({\n      key: 'adminId',\n      value: data\n    });\n  };\n\n  const setIdentifier = async data => {\n    await Storage.set({\n      key: 'id',\n      value: data\n    });\n  };\n\n  const setType = async data => {\n    await Storage.set({\n      key: 'type',\n      value: data\n    });\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: \"Error\",\n      subHeader: \"Something went wrong.\",\n      message: errorMessage,\n      buttons: [\"OK\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: _jsxDEV(IonBackButton, {\n            defaultHref: \"/signIn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      children: _jsxDEV(IonCard, {\n        sx: styles.card,\n        children: _jsxDEV(IonGrid, {\n          children: [_jsxDEV(IonRow, {\n            children: _jsxDEV(IonCol, {\n              children: _jsxDEV(IonItem, {\n                children: [_jsxDEV(IonLabel, {\n                  children: \"Verification Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), _jsxDEV(IonSelect, {\n                  value: selection,\n                  placeholder: \"Select One\",\n                  onIonChange: e => updateSelection(e.detail.value),\n                  children: [_jsxDEV(IonSelectOption, {\n                    value: \"cell\",\n                    children: \"Cell Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this), _jsxDEV(IonSelectOption, {\n                    value: \"email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: _jsxDEV(IonCol, {\n              children: _jsxDEV(IonToolbar, {\n                children: _jsxDEV(IonTitle, {\n                  size: \"small\",\n                  children: [\"Please enter the \", selection, \" associated with your account\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: selection === \"cell number\" ? _jsxDEV(IonCol, {\n              children: _jsxDEV(IonItem, {\n                sx: styles.input,\n                children: [_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Cell Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), _jsxDEV(IonInput, {\n                  type: \"text\",\n                  value: cellNum,\n                  onIonChange: e => updateCellNum(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this) : _jsxDEV(IonCol, {\n              children: _jsxDEV(IonItem, {\n                sx: styles.input,\n                children: [_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), _jsxDEV(IonInput, {\n                  type: \"text\",\n                  value: email,\n                  onIonChange: e => updateEmail(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), _jsxDEV(IonRow, {\n            children: _jsxDEV(IonCol, {\n              children: _jsxDEV(IonButton, {\n                shape: \"round\",\n                type: \"submit\",\n                expand: \"block\",\n                onClick: () => buttonHandler(),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"MYOlFcLL0IMNwg7IdKRZbv6hl7M=\", false, function () {\n  return [useHistory];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\nconst styles = {\n  input: {\n    mb: 2\n  },\n  card: {\n    mt: \"30vh\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/ForgotPassword/ForgotPassword.tsx"],"names":["IonAlert","IonBackButton","IonButton","IonButtons","IonCard","IonCol","IonContent","IonGrid","IonHeader","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonSelect","IonSelectOption","IonTitle","IonToolbar","React","useState","useHistory","validCellNum","validEmail","Connection","Storage","ForgotPassword","path","cellNum","setCellNum","email","setEmail","selection","setSelection","errorMessage","setErrorMessage","showError","setShowError","showLoader","setShowLoader","updateCellNum","updateEmail","updateSelection","buttonHandler","test","url","concat","processPostRequest","response","mapResponse","id","type","data","setIdentifier","setType","setAdminId","push","set","key","value","styles","card","e","detail","input","mb","mt"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { jsx } from \"theme-ui\";\nimport {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonSelect,\n  IonSelectOption,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { validCellNum, validEmail } from \"../../components/Regex/Regex\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { Storage } from \"@capacitor/storage\";\n\nconst ForgotPassword: React.FC = () => {\n  const path = useHistory();\n\n  const [cellNum, setCellNum] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [selection, setSelection] = useState(\"cell\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const updateCellNum = (cellNum: any) => setCellNum(cellNum);\n  const updateEmail = (email: any) => setEmail(email);\n  const updateSelection = (selection: any) => {\n    setSelection(selection);\n    setCellNum('');\n    setEmail('');\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);   \n    if (selection === \"cell\") {\n      if (cellNum !== \"\") {\n        if (validCellNum.test(cellNum)) {\n          let url = \"forgot/verify/\".concat(selection,'/',cellNum);\n          Connection.processPostRequest({}, url, (response: any) =>\n            mapResponse(response, cellNum, selection)\n          );\n        } else {\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Cell Number.\");\n          setShowError(true);\n        }\n      } else {\n        setShowLoader(false);\n        setErrorMessage(\"You need to provide a cell number to continue.\");\n        setShowError(true);\n      }\n    } else {\n      if(email !== ''){\n        if(validEmail.test(email)){\n          let url = \"forgot/verify/\".concat(selection,'/',email);\n          Connection.processPostRequest({}, url, (response: any) =>\n            mapResponse(response, email, selection)\n          );\n        }else{\n          setShowLoader(false);\n          setErrorMessage(\"Invalid Email.\");\n          setShowError(true);\n        }\n      }else{\n        setShowLoader(false);\n        setErrorMessage(\"You need to provide an email to continue.\");\n        setShowError(true);\n      }\n    }\n  };\n\n  const mapResponse = (response: any, id: any, type: any) => {\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n    } else {\n      setShowLoader(false);\n      setIdentifier(id);\n      setType(type)\n      setAdminId(response.data.data);\n      path.push(\"/forgot/otp\");\n    }\n  };\n\n  const setAdminId = async (data: any) => {\n    await Storage.set({\n      key: 'adminId',\n      value: data,\n    });\n  };\n\n  const setIdentifier = async (data: any) => {\n    await Storage.set({\n      key: 'id',\n      value: data,\n    });\n  };\n\n  const setType = async(data: any) => {\n    await Storage.set({\n      key: 'type',\n      value: data,\n    });\n  }\n\n  return (\n    <IonPage>\n      <IonLoading\n        cssClass=\"my-custom-class\"\n        showBackdrop\n        isOpen={showLoader}\n        message={\"Please wait...\"}\n      />\n\n      <IonAlert\n        isOpen={showError}\n        onDidDismiss={() => setShowError(false)}\n        header={\"Error\"}\n        subHeader={\"Something went wrong.\"}\n        message={errorMessage}\n        buttons={[\"OK\"]}\n      />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/signIn\" />\n          </IonButtons>\n          <IonTitle>Forgot Password</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard sx={styles.card}>\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel>Verification Type</IonLabel>\n                  <IonSelect\n                    value={selection}\n                    placeholder=\"Select One\"\n                    onIonChange={(e) => updateSelection(e.detail.value)}\n                  >\n                    <IonSelectOption value=\"cell\">\n                      Cell Number\n                    </IonSelectOption>\n                    <IonSelectOption value=\"email\">Email</IonSelectOption>\n                  </IonSelect>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonToolbar>\n                  <IonTitle size=\"small\">\n                    Please enter the {selection} associated with your account\n                  </IonTitle>\n                </IonToolbar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              {selection === \"cell number\" ? (\n                <IonCol>\n                  <IonItem sx={styles.input}>\n                    <IonLabel position=\"floating\">Cell Number</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      value={cellNum}\n                      onIonChange={(e) => updateCellNum(e.detail.value)}\n                    />\n                  </IonItem>\n                </IonCol>\n              ) : (\n                <IonCol>\n                  <IonItem sx={styles.input}>\n                    <IonLabel position=\"floating\">Email</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      value={email}\n                      onIonChange={(e) => updateEmail(e.detail.value)}\n                    />\n                  </IonItem>\n                </IonCol>\n              )}\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  shape=\"round\"\n                  type=\"submit\"\n                  expand=\"block\"\n                  onClick={() => buttonHandler()}\n                >\n                  Submit\n                </IonButton>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonCard>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ForgotPassword;\n\nconst styles = {\n  input: {\n    mb: 2,\n  },\n  card: {\n    mt: \"30vh\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}