{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignIn/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport { validCellNum, validPassword } from \"../../components/Regex/Regex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const path = useHistory();\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [cellNum, setCellNum] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateCellNum = cellNum => {\n    setCellNum(cellNum);\n  };\n\n  const updatePassword = password => {\n    setPassword(password);\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true); //validateForm();\n    //if (isFormValid === true) {\n\n    let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n    Connection.processGetRequest({}, url, response => {\n      mapResponse(response);\n    }); //}\n  };\n\n  const validateForm = () => {\n    if (cellNum === \"\" || password === \"\") {\n      setShowLoader(false);\n      setIsFormValid(false);\n      setErrorMessage(\"Fields cannot be empty.\");\n      setShowError(true);\n    } else {\n      if (!validCellNum.test(cellNum)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\");\n        setShowError(true);\n      } else {\n        setIsFormValid(true);\n      }\n    }\n  };\n\n  const mapResponse = response => {\n    console.log(\"mapping\");\n\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setPassword(\"\");\n    } else {\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonImg, {\n        src: TGWLogo,\n        alt: \"Logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonLoading, {\n          cssClass: \"my-custom-class\",\n          showBackdrop: true,\n          isOpen: showLoader,\n          message: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n          isOpen: showError,\n          onDidDismiss: () => setShowError(false),\n          header: \"Error\",\n          subHeader: \"Something went wrong.\",\n          message: errorMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonAlert, {\n          isOpen: showSuccess,\n          onDidDismiss: () => path.push(\"/dashboard\"),\n          header: \"Success\",\n          subHeader: successMessage,\n          buttons: [\"OK\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: [/*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(IonTitle, {\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Cell Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  value: cellNum,\n                  onIonChange: e => updateCellNum(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  type: \"password\",\n                  value: password,\n                  onIonChange: e => updatePassword(e.detail.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonButton, {\n                shape: \"round\",\n                type: \"submit\",\n                expand: \"block\",\n                onClick: buttonHandler,\n                children: \"SignIn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/signUp\",\n                  children: \"Sign Up.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"4hyAu7QX1m91uKF5ca5Kf4jERpE=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/onceknownriley/Dev/Ionic-React/admin/src/pages/SignIn/SignIn.tsx"],"names":["IonAlert","IonButton","IonCol","IonContent","IonGrid","IonImg","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonRow","IonTitle","IonToolbar","React","useState","useHistory","TGWLogo","Connection","validCellNum","validPassword","SignIn","path","showLoader","setShowLoader","showError","setShowError","showSuccess","setShowSuccess","successMessage","setSuccessMessage","errorMessage","setErrorMessage","isFormValid","setIsFormValid","cellNum","setCellNum","password","setPassword","updateCellNum","updatePassword","buttonHandler","url","concat","processGetRequest","response","mapResponse","validateForm","test","console","log","type","data","push","e","detail","value"],"mappings":"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","sourcesContent":["import {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCol,\n  IonContent,\n  IonFooter,\n  IonGrid,\n  IonHeader,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TGWLogo from \"../../components/TGWLogo.png\";\nimport Connection from \"../../mixins/Connection\";\nimport {\n  validCellNum,\n  validPassword,\n  validName,\n} from \"../../components/Regex/Regex\";\n\nconst SignIn: React.FC = () => {\n  const path = useHistory();\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const [cellNum, setCellNum] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateCellNum = (cellNum: any) => {\n    setCellNum(cellNum);\n  };\n  const updatePassword = (password: any) => {\n    setPassword(password);\n  };\n\n  const buttonHandler = () => {\n    setShowLoader(true);\n    //validateForm();\n    //if (isFormValid === true) {\n      let url = \"login\".concat(\"/\", cellNum, \"/\", password);\n      Connection.processGetRequest({}, url, (response: any) => {\n        mapResponse(response);\n      });\n    //}\n  };\n\n  const validateForm = () => {\n    if (cellNum === \"\" || password === \"\") {\n      setShowLoader(false);\n      setIsFormValid(false);\n      setErrorMessage(\"Fields cannot be empty.\");\n      setShowError(true);\n    } else {\n      if (!validCellNum.test(cellNum)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\"Invalid Cell Number.\");\n        setShowError(true);\n      } else if (!validPassword.test(password)) {\n        setShowLoader(false);\n        setIsFormValid(false);\n        setErrorMessage(\n          \"Password must be 8-16 characters long. Ensure it includes atleast 1 aphabet character and 1 digit.\"\n        );\n        setShowError(true);\n      } else {\n        setIsFormValid(true);\n      }\n    }\n  };\n\n  const mapResponse = (response: any) => {\n    console.log(\"mapping\");\n    if (response.type === \"error\") {\n      setShowLoader(false);\n      setErrorMessage(response.data);\n      setShowError(true);\n      setCellNum(\"\");\n      setPassword(\"\");\n    } else {\n      setSuccessMessage(\"Successfully Sign In!\");\n      setShowSuccess(true);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonImg src={TGWLogo} alt={\"Logo.png\"} />\n        <IonToolbar>\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            showBackdrop\n            isOpen={showLoader}\n            message={\"Please wait...\"}\n          />\n\n          <IonAlert\n            isOpen={showError}\n            onDidDismiss={() => setShowError(false)}\n            header={\"Error\"}\n            subHeader={\"Something went wrong.\"}\n            message={errorMessage}\n            buttons={[\"OK\"]}\n          />\n\n          <IonAlert\n            isOpen={showSuccess}\n            onDidDismiss={() => path.push(\"/dashboard\")}\n            header={\"Success\"}\n            subHeader={successMessage}\n            buttons={[\"OK\"]}\n          />\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <IonToolbar>\n                  <IonTitle>Sign In</IonTitle>\n                </IonToolbar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Cell Number</IonLabel>\n                  <IonInput\n                    value={cellNum}\n                    onIonChange={(e) => updateCellNum(e.detail.value)}\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Password</IonLabel>\n                  <IonInput\n                    type=\"password\"\n                    value={password}\n                    onIonChange={(e) => updatePassword(e.detail.value)}\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  shape=\"round\"\n                  type=\"submit\"\n                  expand=\"block\"\n                  onClick={buttonHandler}\n                >\n                  SignIn\n                </IonButton>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <p>\n                  Don't have an account ? <a href=\"/signUp\">Sign Up.</a>\n                </p>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}