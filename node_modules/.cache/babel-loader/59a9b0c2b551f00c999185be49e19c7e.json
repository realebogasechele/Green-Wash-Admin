{"ast":null,"code":"var _jsxFileName = \"/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport { IonAlert, IonButtons, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CalCard from \"../../components/Card/CalCard\";\nimport Connection from \"../../mixins/Connection\";\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\n\nconst Calendar = () => {\n  _s();\n\n  useIonViewWillEnter(() => {\n    setShowLoader(true);\n    getBookings(time);\n  });\n  const history = useHistory();\n\n  const getBookings = time => {\n    setShowLoader(true);\n    let url = 'booking/get/'.concat(time);\n    Connection.processGetRequest({}, url, response => mapResponse(response));\n  };\n\n  const mapResponse = response => {\n    if (response.type === 'error') {\n      setShowLoader(false);\n      setMessage(response.data);\n      setShowError(true);\n    } else {\n      setBookings(response.data.data);\n      setShowLoader(false);\n    }\n  };\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [time, setTime] = useState(new Date().toISOString());\n  const [bookings, setBookings] = useState([{\n    bookingId: \"\",\n    clientName: \"Test\",\n    clientSurname: \"Test\",\n    complexName: \"Test\",\n    packageName: \"Test\",\n    price: \"57\",\n    startTime: new Date().toDateString(),\n    endTime: new Date().toDateString()\n  }]);\n\n  const updateTime = currentTime => {\n    setTime(currentTime);\n    getBookings(currentTime);\n  };\n\n  return _jsxDEV(IonPage, {\n    children: [_jsxDEV(IonLoading, {\n      cssClass: \"my-custom-class\",\n      showBackdrop: true,\n      isOpen: showLoader,\n      message: 'Please wait...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), _jsxDEV(IonAlert, {\n      isOpen: showError,\n      onDidDismiss: () => setShowError(false),\n      header: 'Error',\n      subHeader: 'Something went wrong.',\n      message: message,\n      buttons: ['OK']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), _jsxDEV(IonHeader, {\n      children: _jsxDEV(IonToolbar, {\n        color: \"primary\",\n        children: [_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: _jsxDEV(IonMenuButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), _jsxDEV(IonTitle, {\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), _jsxDEV(IonContent, {\n      fullscreen: true,\n      children: _jsxDEV(IonGrid, {\n        children: [_jsxDEV(IonRow, {\n          children: _jsxDEV(IonCol, {\n            children: _jsxDEV(IonItem, {\n              children: [_jsxDEV(IonLabel, {\n                children: \"Select a date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), _jsxDEV(IonDatetime, {\n                min: \"2021\",\n                value: time,\n                onIonChange: e => updateTime(e.detail.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), bookings.length !== 0 && bookings.map(booking => _jsxDEV(CalCard, {\n          name: booking.clientName,\n          surname: booking.clientSurname,\n          complexName: booking.complexName,\n          packageName: booking.packageName,\n          price: booking.price,\n          startTime: new Date(booking.startTime).toDateString(),\n          endTime: new Date(booking.endTime).toDateString() + \" \" + new Date(booking.endTime).toLocaleTimeString()\n        }, booking.bookingId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)), bookings.length === 0 && _jsxDEV(IonRow, {\n          sx: styles.row,\n          children: _jsxDEV(IonCol, {\n            children: _jsxDEV(\"h1\", {\n              sx: styles.heading,\n              children: \"No Bookings \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"XCmAD/v0ctJdb8WGz82NacV8VPc=\", false, function () {\n  return [useIonViewWillEnter, useHistory];\n});\n\n_c = Calendar;\nexport default Calendar;\nconst styles = {\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"grey\"\n  },\n  row: {\n    mt: '30vh',\n    borderRadius: '8px',\n    opacity: '0.5'\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/onceknownriley/Documents/GreenWashProject/Admin/src/pages/Calendar/Calendar.tsx"],"names":["IonAlert","IonButtons","IonCol","IonContent","IonDatetime","IonGrid","IonHeader","IonItem","IonLabel","IonLoading","IonMenuButton","IonPage","IonRow","IonTitle","IonToolbar","useIonViewWillEnter","React","useState","useHistory","CalCard","Connection","Calendar","setShowLoader","getBookings","time","history","url","concat","processGetRequest","response","mapResponse","type","setMessage","data","setShowError","setBookings","showLoader","showError","message","setTime","Date","toISOString","bookings","bookingId","clientName","clientSurname","complexName","packageName","price","startTime","toDateString","endTime","updateTime","currentTime","e","detail","value","length","map","booking","toLocaleTimeString","styles","row","heading","display","justifyContent","color","mt","borderRadius","opacity"],"mappings":"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","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { Storage } from \"@capacitor/storage\";\nimport {\n  IonAlert,\n  IonButtons,\n  IonCol,\n  IonContent,\n  IonDatetime,\n  IonGrid,\n  IonHeader,\n  IonItem,\n  IonLabel,\n  IonLoading,\n  IonMenuButton,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CalCard from \"../../components/Card/CalCard\";\nimport Connection from \"../../mixins/Connection\";\n\nconst Calendar: React.FC = () => {\n  useIonViewWillEnter(() =>{\n    setShowLoader(true);\n    getBookings(time);\n  })\n  const history = useHistory();\n\n  const getBookings = (time: any) => {\n    setShowLoader(true);\n    let url = 'booking/get/'.concat(time);\n    Connection.processGetRequest({}, url, (response: any) => mapResponse(response))\n  };\n\n const mapResponse = (response: any) => {\n   if(response.type === 'error'){\n     setShowLoader(false);\n     setMessage(response.data);\n     setShowError(true);\n   }else{\n     setBookings(response.data.data);\n     setShowLoader(false)\n   }\n }\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const [time, setTime] = useState(new Date().toISOString());\n  const [bookings, setBookings] = useState([\n    {\n      bookingId: \"\",\n      clientName: \"Test\",\n      clientSurname: \"Test\",\n      complexName: \"Test\",\n      packageName: \"Test\",\n      price: \"57\",\n      startTime: new Date().toDateString(),\n      endTime: new Date().toDateString(),\n    },\n  ]);\n  const updateTime = (currentTime: any) => {\n    setTime(currentTime);\n    getBookings(currentTime);\n  };\n  return (\n    <IonPage>\n      <IonLoading\n            cssClass='my-custom-class'\n            showBackdrop\n            isOpen={showLoader}\n            message={'Please wait...'}\n          />\n          <IonAlert\n          isOpen={showError}\n          onDidDismiss={() => setShowError(false)}\n          header={'Error'}\n          subHeader={'Something went wrong.'}\n          message={message}\n          buttons={['OK']}\n        />\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>Calendar</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <IonItem>\n                <IonLabel>Select a date</IonLabel>\n                <IonDatetime\n                  min=\"2021\"\n                  value={time}\n                  onIonChange={(e) => updateTime(e.detail.value)}\n                />\n              </IonItem>\n            </IonCol>\n          </IonRow>\n          {bookings.length !== 0 &&\n            bookings.map((booking) => (\n              <CalCard\n                key={booking.bookingId}\n                name={booking.clientName}\n                surname={booking.clientSurname}\n                complexName={booking.complexName}\n                packageName={booking.packageName}\n                price={booking.price}\n                startTime={new Date(booking.startTime).toDateString()}\n                endTime={new Date(booking.endTime).toDateString() + \" \" +new Date(booking.endTime).toLocaleTimeString()}\n              />\n            ))}\n\n          {bookings.length === 0 && (\n            <IonRow sx={styles.row}>\n              <IonCol>\n                <h1 sx={styles.heading}>No Bookings </h1>\n              </IonCol>\n            </IonRow>\n          )}\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Calendar;\n\nconst styles = {\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"grey\",\n  },\n  row: {\n    mt:'30vh',\n    borderRadius: '8px',\n    opacity: '0.5'\n  },\n};\n"]},"metadata":{},"sourceType":"module"}